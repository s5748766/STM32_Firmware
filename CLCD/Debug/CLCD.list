
CLCD.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000045c0  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000118  080046cc  080046cc  000056cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080047e4  080047e4  00006068  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080047e4  080047e4  000057e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080047ec  080047ec  00006068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080047ec  080047ec  000057ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080047f0  080047f0  000057f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  080047f4  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000390  20000068  0800485c  00006068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003f8  0800485c  000063f8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00006068  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e2e7  00000000  00000000  00006091  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001dc8  00000000  00000000  00014378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000f68  00000000  00000000  00016140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000c30  00000000  00000000  000170a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018b2f  00000000  00000000  00017cd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011114  00000000  00000000  00030807  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ea14  00000000  00000000  0004191b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000d032f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004b58  00000000  00000000  000d0374  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005d  00000000  00000000  000d4ecc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000068 	.word	0x20000068
 8000128:	00000000 	.word	0x00000000
 800012c:	080046b4 	.word	0x080046b4

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000006c 	.word	0x2000006c
 8000148:	080046b4 	.word	0x080046b4

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <I2C_ScanAddresses>:
void LCD_XY(char x, char y);
void LCD_CLEAR(void);
void LCD_PUTS(char *str);


void I2C_ScanAddresses(void) {
 800015c:	b580      	push	{r7, lr}
 800015e:	b082      	sub	sp, #8
 8000160:	af00      	add	r7, sp, #0
    HAL_StatusTypeDef result;
    uint8_t i;


    printf("Scanning I2C addresses...\r\n");
 8000162:	4813      	ldr	r0, [pc, #76]	@ (80001b0 <I2C_ScanAddresses+0x54>)
 8000164:	f003 fa62 	bl	800362c <puts>


    for (i = 1; i < 128; i++) {
 8000168:	2301      	movs	r3, #1
 800016a:	71fb      	strb	r3, [r7, #7]
 800016c:	e015      	b.n	800019a <I2C_ScanAddresses+0x3e>
        /*
         * HAL_I2C_IsDeviceReady: If a device at the specified address exists return HAL_OK.
         * Since I2C devices must have an 8-bit address, the 7-bit address is shifted left by 1 bit.
         */
        result = HAL_I2C_IsDeviceReady(&hi2c1, (uint16_t)(i << 1), 1, 10);
 800016e:	79fb      	ldrb	r3, [r7, #7]
 8000170:	b29b      	uxth	r3, r3
 8000172:	005b      	lsls	r3, r3, #1
 8000174:	b299      	uxth	r1, r3
 8000176:	230a      	movs	r3, #10
 8000178:	2201      	movs	r2, #1
 800017a:	480e      	ldr	r0, [pc, #56]	@ (80001b4 <I2C_ScanAddresses+0x58>)
 800017c:	f001 fcac 	bl	8001ad8 <HAL_I2C_IsDeviceReady>
 8000180:	4603      	mov	r3, r0
 8000182:	71bb      	strb	r3, [r7, #6]
        if (result == HAL_OK) {
 8000184:	79bb      	ldrb	r3, [r7, #6]
 8000186:	2b00      	cmp	r3, #0
 8000188:	d104      	bne.n	8000194 <I2C_ScanAddresses+0x38>
            printf("I2C device found at address 0x%02X\r\n", i);
 800018a:	79fb      	ldrb	r3, [r7, #7]
 800018c:	4619      	mov	r1, r3
 800018e:	480a      	ldr	r0, [pc, #40]	@ (80001b8 <I2C_ScanAddresses+0x5c>)
 8000190:	f003 f9e4 	bl	800355c <iprintf>
    for (i = 1; i < 128; i++) {
 8000194:	79fb      	ldrb	r3, [r7, #7]
 8000196:	3301      	adds	r3, #1
 8000198:	71fb      	strb	r3, [r7, #7]
 800019a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800019e:	2b00      	cmp	r3, #0
 80001a0:	dae5      	bge.n	800016e <I2C_ScanAddresses+0x12>
        }
    }


    printf("Scan complete.\r\n");
 80001a2:	4806      	ldr	r0, [pc, #24]	@ (80001bc <I2C_ScanAddresses+0x60>)
 80001a4:	f003 fa42 	bl	800362c <puts>
}
 80001a8:	bf00      	nop
 80001aa:	3708      	adds	r7, #8
 80001ac:	46bd      	mov	sp, r7
 80001ae:	bd80      	pop	{r7, pc}
 80001b0:	080046cc 	.word	0x080046cc
 80001b4:	20000084 	.word	0x20000084
 80001b8:	080046e8 	.word	0x080046e8
 80001bc:	08004710 	.word	0x08004710

080001c0 <delay_us>:

void delay_us(int us){
 80001c0:	b480      	push	{r7}
 80001c2:	b085      	sub	sp, #20
 80001c4:	af00      	add	r7, sp, #0
 80001c6:	6078      	str	r0, [r7, #4]
	value = 3;
 80001c8:	4b0d      	ldr	r3, [pc, #52]	@ (8000200 <delay_us+0x40>)
 80001ca:	2203      	movs	r2, #3
 80001cc:	601a      	str	r2, [r3, #0]
	delay = us * value;
 80001ce:	4b0c      	ldr	r3, [pc, #48]	@ (8000200 <delay_us+0x40>)
 80001d0:	681b      	ldr	r3, [r3, #0]
 80001d2:	687a      	ldr	r2, [r7, #4]
 80001d4:	fb02 f303 	mul.w	r3, r2, r3
 80001d8:	4a0a      	ldr	r2, [pc, #40]	@ (8000204 <delay_us+0x44>)
 80001da:	6013      	str	r3, [r2, #0]
	for(int i=0;i < delay;i++);
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e002      	b.n	80001e8 <delay_us+0x28>
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	3301      	adds	r3, #1
 80001e6:	60fb      	str	r3, [r7, #12]
 80001e8:	4b06      	ldr	r3, [pc, #24]	@ (8000204 <delay_us+0x44>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	68fa      	ldr	r2, [r7, #12]
 80001ee:	429a      	cmp	r2, r3
 80001f0:	dbf7      	blt.n	80001e2 <delay_us+0x22>
}
 80001f2:	bf00      	nop
 80001f4:	bf00      	nop
 80001f6:	3714      	adds	r7, #20
 80001f8:	46bd      	mov	sp, r7
 80001fa:	bc80      	pop	{r7}
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	200000dc 	.word	0x200000dc
 8000204:	200000d8 	.word	0x200000d8

08000208 <LCD_DATA>:

void LCD_DATA(uint8_t data) {
 8000208:	b580      	push	{r7, lr}
 800020a:	b086      	sub	sp, #24
 800020c:	af02      	add	r7, sp, #8
 800020e:	4603      	mov	r3, r0
 8000210:	71fb      	strb	r3, [r7, #7]
	uint8_t temp=(data & 0xF0)|RS1_EN1|BackLight;
 8000212:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000216:	f023 030f 	bic.w	r3, r3, #15
 800021a:	b25b      	sxtb	r3, r3
 800021c:	f043 030d 	orr.w	r3, r3, #13
 8000220:	b25b      	sxtb	r3, r3
 8000222:	b2db      	uxtb	r3, r3
 8000224:	73fb      	strb	r3, [r7, #15]

	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 8000226:	bf00      	nop
 8000228:	f107 020f 	add.w	r2, r7, #15
 800022c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000230:	9300      	str	r3, [sp, #0]
 8000232:	2301      	movs	r3, #1
 8000234:	214e      	movs	r1, #78	@ 0x4e
 8000236:	482b      	ldr	r0, [pc, #172]	@ (80002e4 <LCD_DATA+0xdc>)
 8000238:	f001 fb50 	bl	80018dc <HAL_I2C_Master_Transmit>
 800023c:	4603      	mov	r3, r0
 800023e:	2b00      	cmp	r3, #0
 8000240:	d1f2      	bne.n	8000228 <LCD_DATA+0x20>
	temp=(data & 0xF0)|RS1_EN0|BackLight;
 8000242:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000246:	f023 030f 	bic.w	r3, r3, #15
 800024a:	b25b      	sxtb	r3, r3
 800024c:	f043 0309 	orr.w	r3, r3, #9
 8000250:	b25b      	sxtb	r3, r3
 8000252:	b2db      	uxtb	r3, r3
 8000254:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 8000256:	bf00      	nop
 8000258:	f107 020f 	add.w	r2, r7, #15
 800025c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000260:	9300      	str	r3, [sp, #0]
 8000262:	2301      	movs	r3, #1
 8000264:	214e      	movs	r1, #78	@ 0x4e
 8000266:	481f      	ldr	r0, [pc, #124]	@ (80002e4 <LCD_DATA+0xdc>)
 8000268:	f001 fb38 	bl	80018dc <HAL_I2C_Master_Transmit>
 800026c:	4603      	mov	r3, r0
 800026e:	2b00      	cmp	r3, #0
 8000270:	d1f2      	bne.n	8000258 <LCD_DATA+0x50>
	delay_us(4);
 8000272:	2004      	movs	r0, #4
 8000274:	f7ff ffa4 	bl	80001c0 <delay_us>

	temp=((data << 4) & 0xF0)|RS1_EN1|BackLight;
 8000278:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800027c:	011b      	lsls	r3, r3, #4
 800027e:	b25b      	sxtb	r3, r3
 8000280:	f043 030d 	orr.w	r3, r3, #13
 8000284:	b25b      	sxtb	r3, r3
 8000286:	b2db      	uxtb	r3, r3
 8000288:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 800028a:	bf00      	nop
 800028c:	f107 020f 	add.w	r2, r7, #15
 8000290:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000294:	9300      	str	r3, [sp, #0]
 8000296:	2301      	movs	r3, #1
 8000298:	214e      	movs	r1, #78	@ 0x4e
 800029a:	4812      	ldr	r0, [pc, #72]	@ (80002e4 <LCD_DATA+0xdc>)
 800029c:	f001 fb1e 	bl	80018dc <HAL_I2C_Master_Transmit>
 80002a0:	4603      	mov	r3, r0
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d1f2      	bne.n	800028c <LCD_DATA+0x84>
	temp = ((data << 4) & 0xF0)|RS1_EN0|BackLight;
 80002a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002aa:	011b      	lsls	r3, r3, #4
 80002ac:	b25b      	sxtb	r3, r3
 80002ae:	f043 0309 	orr.w	r3, r3, #9
 80002b2:	b25b      	sxtb	r3, r3
 80002b4:	b2db      	uxtb	r3, r3
 80002b6:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 80002b8:	bf00      	nop
 80002ba:	f107 020f 	add.w	r2, r7, #15
 80002be:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80002c2:	9300      	str	r3, [sp, #0]
 80002c4:	2301      	movs	r3, #1
 80002c6:	214e      	movs	r1, #78	@ 0x4e
 80002c8:	4806      	ldr	r0, [pc, #24]	@ (80002e4 <LCD_DATA+0xdc>)
 80002ca:	f001 fb07 	bl	80018dc <HAL_I2C_Master_Transmit>
 80002ce:	4603      	mov	r3, r0
 80002d0:	2b00      	cmp	r3, #0
 80002d2:	d1f2      	bne.n	80002ba <LCD_DATA+0xb2>
	delay_us(50);
 80002d4:	2032      	movs	r0, #50	@ 0x32
 80002d6:	f7ff ff73 	bl	80001c0 <delay_us>
}
 80002da:	bf00      	nop
 80002dc:	3710      	adds	r7, #16
 80002de:	46bd      	mov	sp, r7
 80002e0:	bd80      	pop	{r7, pc}
 80002e2:	bf00      	nop
 80002e4:	20000084 	.word	0x20000084

080002e8 <LCD_CMD>:

void LCD_CMD(uint8_t cmd) {
 80002e8:	b580      	push	{r7, lr}
 80002ea:	b086      	sub	sp, #24
 80002ec:	af02      	add	r7, sp, #8
 80002ee:	4603      	mov	r3, r0
 80002f0:	71fb      	strb	r3, [r7, #7]
	uint8_t temp=(cmd & 0xF0)|RS0_EN1|BackLight;
 80002f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002f6:	f023 030f 	bic.w	r3, r3, #15
 80002fa:	b25b      	sxtb	r3, r3
 80002fc:	f043 030c 	orr.w	r3, r3, #12
 8000300:	b25b      	sxtb	r3, r3
 8000302:	b2db      	uxtb	r3, r3
 8000304:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 8000306:	bf00      	nop
 8000308:	f107 020f 	add.w	r2, r7, #15
 800030c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000310:	9300      	str	r3, [sp, #0]
 8000312:	2301      	movs	r3, #1
 8000314:	214e      	movs	r1, #78	@ 0x4e
 8000316:	482b      	ldr	r0, [pc, #172]	@ (80003c4 <LCD_CMD+0xdc>)
 8000318:	f001 fae0 	bl	80018dc <HAL_I2C_Master_Transmit>
 800031c:	4603      	mov	r3, r0
 800031e:	2b00      	cmp	r3, #0
 8000320:	d1f2      	bne.n	8000308 <LCD_CMD+0x20>
	temp=(cmd & 0xF0)|RS0_EN0|BackLight;
 8000322:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000326:	f023 030f 	bic.w	r3, r3, #15
 800032a:	b25b      	sxtb	r3, r3
 800032c:	f043 0308 	orr.w	r3, r3, #8
 8000330:	b25b      	sxtb	r3, r3
 8000332:	b2db      	uxtb	r3, r3
 8000334:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 8000336:	bf00      	nop
 8000338:	f107 020f 	add.w	r2, r7, #15
 800033c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000340:	9300      	str	r3, [sp, #0]
 8000342:	2301      	movs	r3, #1
 8000344:	214e      	movs	r1, #78	@ 0x4e
 8000346:	481f      	ldr	r0, [pc, #124]	@ (80003c4 <LCD_CMD+0xdc>)
 8000348:	f001 fac8 	bl	80018dc <HAL_I2C_Master_Transmit>
 800034c:	4603      	mov	r3, r0
 800034e:	2b00      	cmp	r3, #0
 8000350:	d1f2      	bne.n	8000338 <LCD_CMD+0x50>
	delay_us(4);
 8000352:	2004      	movs	r0, #4
 8000354:	f7ff ff34 	bl	80001c0 <delay_us>

	temp=((cmd << 4) & 0xF0)|RS0_EN1|BackLight;
 8000358:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800035c:	011b      	lsls	r3, r3, #4
 800035e:	b25b      	sxtb	r3, r3
 8000360:	f043 030c 	orr.w	r3, r3, #12
 8000364:	b25b      	sxtb	r3, r3
 8000366:	b2db      	uxtb	r3, r3
 8000368:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 800036a:	bf00      	nop
 800036c:	f107 020f 	add.w	r2, r7, #15
 8000370:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000374:	9300      	str	r3, [sp, #0]
 8000376:	2301      	movs	r3, #1
 8000378:	214e      	movs	r1, #78	@ 0x4e
 800037a:	4812      	ldr	r0, [pc, #72]	@ (80003c4 <LCD_CMD+0xdc>)
 800037c:	f001 faae 	bl	80018dc <HAL_I2C_Master_Transmit>
 8000380:	4603      	mov	r3, r0
 8000382:	2b00      	cmp	r3, #0
 8000384:	d1f2      	bne.n	800036c <LCD_CMD+0x84>
	temp=((cmd << 4) & 0xF0)|RS0_EN0|BackLight;
 8000386:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800038a:	011b      	lsls	r3, r3, #4
 800038c:	b25b      	sxtb	r3, r3
 800038e:	f043 0308 	orr.w	r3, r3, #8
 8000392:	b25b      	sxtb	r3, r3
 8000394:	b2db      	uxtb	r3, r3
 8000396:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 8000398:	bf00      	nop
 800039a:	f107 020f 	add.w	r2, r7, #15
 800039e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80003a2:	9300      	str	r3, [sp, #0]
 80003a4:	2301      	movs	r3, #1
 80003a6:	214e      	movs	r1, #78	@ 0x4e
 80003a8:	4806      	ldr	r0, [pc, #24]	@ (80003c4 <LCD_CMD+0xdc>)
 80003aa:	f001 fa97 	bl	80018dc <HAL_I2C_Master_Transmit>
 80003ae:	4603      	mov	r3, r0
 80003b0:	2b00      	cmp	r3, #0
 80003b2:	d1f2      	bne.n	800039a <LCD_CMD+0xb2>
	delay_us(50);
 80003b4:	2032      	movs	r0, #50	@ 0x32
 80003b6:	f7ff ff03 	bl	80001c0 <delay_us>
}
 80003ba:	bf00      	nop
 80003bc:	3710      	adds	r7, #16
 80003be:	46bd      	mov	sp, r7
 80003c0:	bd80      	pop	{r7, pc}
 80003c2:	bf00      	nop
 80003c4:	20000084 	.word	0x20000084

080003c8 <LCD_CMD_4bit>:

void LCD_CMD_4bit(uint8_t cmd) {
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b086      	sub	sp, #24
 80003cc:	af02      	add	r7, sp, #8
 80003ce:	4603      	mov	r3, r0
 80003d0:	71fb      	strb	r3, [r7, #7]
	uint8_t temp=((cmd << 4) & 0xF0)|RS0_EN1|BackLight;
 80003d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003d6:	011b      	lsls	r3, r3, #4
 80003d8:	b25b      	sxtb	r3, r3
 80003da:	f043 030c 	orr.w	r3, r3, #12
 80003de:	b25b      	sxtb	r3, r3
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 80003e4:	bf00      	nop
 80003e6:	f107 020f 	add.w	r2, r7, #15
 80003ea:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80003ee:	9300      	str	r3, [sp, #0]
 80003f0:	2301      	movs	r3, #1
 80003f2:	214e      	movs	r1, #78	@ 0x4e
 80003f4:	4811      	ldr	r0, [pc, #68]	@ (800043c <LCD_CMD_4bit+0x74>)
 80003f6:	f001 fa71 	bl	80018dc <HAL_I2C_Master_Transmit>
 80003fa:	4603      	mov	r3, r0
 80003fc:	2b00      	cmp	r3, #0
 80003fe:	d1f2      	bne.n	80003e6 <LCD_CMD_4bit+0x1e>
	temp=((cmd << 4) & 0xF0)|RS0_EN0|BackLight;
 8000400:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000404:	011b      	lsls	r3, r3, #4
 8000406:	b25b      	sxtb	r3, r3
 8000408:	f043 0308 	orr.w	r3, r3, #8
 800040c:	b25b      	sxtb	r3, r3
 800040e:	b2db      	uxtb	r3, r3
 8000410:	73fb      	strb	r3, [r7, #15]
	while(HAL_I2C_Master_Transmit(&hi2c1, ADDRESS, &temp, 1, 1000)!=HAL_OK);
 8000412:	bf00      	nop
 8000414:	f107 020f 	add.w	r2, r7, #15
 8000418:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800041c:	9300      	str	r3, [sp, #0]
 800041e:	2301      	movs	r3, #1
 8000420:	214e      	movs	r1, #78	@ 0x4e
 8000422:	4806      	ldr	r0, [pc, #24]	@ (800043c <LCD_CMD_4bit+0x74>)
 8000424:	f001 fa5a 	bl	80018dc <HAL_I2C_Master_Transmit>
 8000428:	4603      	mov	r3, r0
 800042a:	2b00      	cmp	r3, #0
 800042c:	d1f2      	bne.n	8000414 <LCD_CMD_4bit+0x4c>
	delay_us(50);
 800042e:	2032      	movs	r0, #50	@ 0x32
 8000430:	f7ff fec6 	bl	80001c0 <delay_us>
}
 8000434:	bf00      	nop
 8000436:	3710      	adds	r7, #16
 8000438:	46bd      	mov	sp, r7
 800043a:	bd80      	pop	{r7, pc}
 800043c:	20000084 	.word	0x20000084

08000440 <LCD_INIT>:

void LCD_INIT(void) {
 8000440:	b580      	push	{r7, lr}
 8000442:	af00      	add	r7, sp, #0

	delay_ms(100);
 8000444:	2064      	movs	r0, #100	@ 0x64
 8000446:	f000 fdfd 	bl	8001044 <HAL_Delay>

	LCD_CMD_4bit(0x03); delay_ms(5);
 800044a:	2003      	movs	r0, #3
 800044c:	f7ff ffbc 	bl	80003c8 <LCD_CMD_4bit>
 8000450:	2005      	movs	r0, #5
 8000452:	f000 fdf7 	bl	8001044 <HAL_Delay>
	LCD_CMD_4bit(0x03); delay_us(100);
 8000456:	2003      	movs	r0, #3
 8000458:	f7ff ffb6 	bl	80003c8 <LCD_CMD_4bit>
 800045c:	2064      	movs	r0, #100	@ 0x64
 800045e:	f7ff feaf 	bl	80001c0 <delay_us>
	LCD_CMD_4bit(0x03); delay_us(100);
 8000462:	2003      	movs	r0, #3
 8000464:	f7ff ffb0 	bl	80003c8 <LCD_CMD_4bit>
 8000468:	2064      	movs	r0, #100	@ 0x64
 800046a:	f7ff fea9 	bl	80001c0 <delay_us>
	LCD_CMD_4bit(0x02); delay_us(100);
 800046e:	2002      	movs	r0, #2
 8000470:	f7ff ffaa 	bl	80003c8 <LCD_CMD_4bit>
 8000474:	2064      	movs	r0, #100	@ 0x64
 8000476:	f7ff fea3 	bl	80001c0 <delay_us>
	LCD_CMD(0x28);  // 4 bits, 2 line, 5x8 font
 800047a:	2028      	movs	r0, #40	@ 0x28
 800047c:	f7ff ff34 	bl	80002e8 <LCD_CMD>
	LCD_CMD(0x08);  // display off, cursor off, blink off
 8000480:	2008      	movs	r0, #8
 8000482:	f7ff ff31 	bl	80002e8 <LCD_CMD>
	LCD_CMD(0x01);  // clear display
 8000486:	2001      	movs	r0, #1
 8000488:	f7ff ff2e 	bl	80002e8 <LCD_CMD>
	delay_ms(3);
 800048c:	2003      	movs	r0, #3
 800048e:	f000 fdd9 	bl	8001044 <HAL_Delay>
	LCD_CMD(0x06);  // cursor movint direction
 8000492:	2006      	movs	r0, #6
 8000494:	f7ff ff28 	bl	80002e8 <LCD_CMD>
	LCD_CMD(0x0C);  // display on, cursor off, blink off
 8000498:	200c      	movs	r0, #12
 800049a:	f7ff ff25 	bl	80002e8 <LCD_CMD>
}
 800049e:	bf00      	nop
 80004a0:	bd80      	pop	{r7, pc}

080004a2 <LCD_XY>:

void LCD_XY(char x, char y) {
 80004a2:	b580      	push	{r7, lr}
 80004a4:	b082      	sub	sp, #8
 80004a6:	af00      	add	r7, sp, #0
 80004a8:	4603      	mov	r3, r0
 80004aa:	460a      	mov	r2, r1
 80004ac:	71fb      	strb	r3, [r7, #7]
 80004ae:	4613      	mov	r3, r2
 80004b0:	71bb      	strb	r3, [r7, #6]
	if      (y == 0) LCD_CMD(0x80 + x);
 80004b2:	79bb      	ldrb	r3, [r7, #6]
 80004b4:	2b00      	cmp	r3, #0
 80004b6:	d106      	bne.n	80004c6 <LCD_XY+0x24>
 80004b8:	79fb      	ldrb	r3, [r7, #7]
 80004ba:	3b80      	subs	r3, #128	@ 0x80
 80004bc:	b2db      	uxtb	r3, r3
 80004be:	4618      	mov	r0, r3
 80004c0:	f7ff ff12 	bl	80002e8 <LCD_CMD>
	else if (y == 1) LCD_CMD(0xC0 + x);
	else if (y == 2) LCD_CMD(0x94 + x);
	else if (y == 3) LCD_CMD(0xD4 + x);
}
 80004c4:	e01c      	b.n	8000500 <LCD_XY+0x5e>
	else if (y == 1) LCD_CMD(0xC0 + x);
 80004c6:	79bb      	ldrb	r3, [r7, #6]
 80004c8:	2b01      	cmp	r3, #1
 80004ca:	d106      	bne.n	80004da <LCD_XY+0x38>
 80004cc:	79fb      	ldrb	r3, [r7, #7]
 80004ce:	3b40      	subs	r3, #64	@ 0x40
 80004d0:	b2db      	uxtb	r3, r3
 80004d2:	4618      	mov	r0, r3
 80004d4:	f7ff ff08 	bl	80002e8 <LCD_CMD>
}
 80004d8:	e012      	b.n	8000500 <LCD_XY+0x5e>
	else if (y == 2) LCD_CMD(0x94 + x);
 80004da:	79bb      	ldrb	r3, [r7, #6]
 80004dc:	2b02      	cmp	r3, #2
 80004de:	d106      	bne.n	80004ee <LCD_XY+0x4c>
 80004e0:	79fb      	ldrb	r3, [r7, #7]
 80004e2:	3b6c      	subs	r3, #108	@ 0x6c
 80004e4:	b2db      	uxtb	r3, r3
 80004e6:	4618      	mov	r0, r3
 80004e8:	f7ff fefe 	bl	80002e8 <LCD_CMD>
}
 80004ec:	e008      	b.n	8000500 <LCD_XY+0x5e>
	else if (y == 3) LCD_CMD(0xD4 + x);
 80004ee:	79bb      	ldrb	r3, [r7, #6]
 80004f0:	2b03      	cmp	r3, #3
 80004f2:	d105      	bne.n	8000500 <LCD_XY+0x5e>
 80004f4:	79fb      	ldrb	r3, [r7, #7]
 80004f6:	3b2c      	subs	r3, #44	@ 0x2c
 80004f8:	b2db      	uxtb	r3, r3
 80004fa:	4618      	mov	r0, r3
 80004fc:	f7ff fef4 	bl	80002e8 <LCD_CMD>
}
 8000500:	bf00      	nop
 8000502:	3708      	adds	r7, #8
 8000504:	46bd      	mov	sp, r7
 8000506:	bd80      	pop	{r7, pc}

08000508 <LCD_CLEAR>:

void LCD_CLEAR(void) {
 8000508:	b580      	push	{r7, lr}
 800050a:	af00      	add	r7, sp, #0
	LCD_CMD(0x01);
 800050c:	2001      	movs	r0, #1
 800050e:	f7ff feeb 	bl	80002e8 <LCD_CMD>
	delay_ms(2);
 8000512:	2002      	movs	r0, #2
 8000514:	f000 fd96 	bl	8001044 <HAL_Delay>
}
 8000518:	bf00      	nop
 800051a:	bd80      	pop	{r7, pc}

0800051c <LCD_PUTS>:

void LCD_PUTS(char *str) {
 800051c:	b580      	push	{r7, lr}
 800051e:	b082      	sub	sp, #8
 8000520:	af00      	add	r7, sp, #0
 8000522:	6078      	str	r0, [r7, #4]
	while (*str) LCD_DATA(*str++);
 8000524:	e006      	b.n	8000534 <LCD_PUTS+0x18>
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	1c5a      	adds	r2, r3, #1
 800052a:	607a      	str	r2, [r7, #4]
 800052c:	781b      	ldrb	r3, [r3, #0]
 800052e:	4618      	mov	r0, r3
 8000530:	f7ff fe6a 	bl	8000208 <LCD_DATA>
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	781b      	ldrb	r3, [r3, #0]
 8000538:	2b00      	cmp	r3, #0
 800053a:	d1f4      	bne.n	8000526 <LCD_PUTS+0xa>
}
 800053c:	bf00      	nop
 800053e:	bf00      	nop
 8000540:	3708      	adds	r7, #8
 8000542:	46bd      	mov	sp, r7
 8000544:	bd80      	pop	{r7, pc}
	...

08000548 <DHT11_SetPinOutput>:
    uint8_t temp_decimal;
    uint8_t hum_decimal;
    uint8_t checksum;
} DHT11_Data;

void DHT11_SetPinOutput(void) {
 8000548:	b580      	push	{r7, lr}
 800054a:	b084      	sub	sp, #16
 800054c:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 800054e:	463b      	mov	r3, r7
 8000550:	2200      	movs	r2, #0
 8000552:	601a      	str	r2, [r3, #0]
 8000554:	605a      	str	r2, [r3, #4]
 8000556:	609a      	str	r2, [r3, #8]
 8000558:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Pin = DHT11_Pin;
 800055a:	2301      	movs	r3, #1
 800055c:	603b      	str	r3, [r7, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800055e:	2301      	movs	r3, #1
 8000560:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000562:	2300      	movs	r3, #0
 8000564:	60bb      	str	r3, [r7, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000566:	2303      	movs	r3, #3
 8000568:	60fb      	str	r3, [r7, #12]
    HAL_GPIO_Init(DHT11_GPIO_Port, &GPIO_InitStruct);
 800056a:	463b      	mov	r3, r7
 800056c:	4619      	mov	r1, r3
 800056e:	4803      	ldr	r0, [pc, #12]	@ (800057c <DHT11_SetPinOutput+0x34>)
 8000570:	f000 fe9a 	bl	80012a8 <HAL_GPIO_Init>
}
 8000574:	bf00      	nop
 8000576:	3710      	adds	r7, #16
 8000578:	46bd      	mov	sp, r7
 800057a:	bd80      	pop	{r7, pc}
 800057c:	40010800 	.word	0x40010800

08000580 <DHT11_SetPinInput>:

void DHT11_SetPinInput(void) {
 8000580:	b580      	push	{r7, lr}
 8000582:	b084      	sub	sp, #16
 8000584:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000586:	463b      	mov	r3, r7
 8000588:	2200      	movs	r2, #0
 800058a:	601a      	str	r2, [r3, #0]
 800058c:	605a      	str	r2, [r3, #4]
 800058e:	609a      	str	r2, [r3, #8]
 8000590:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Pin = DHT11_Pin;
 8000592:	2301      	movs	r3, #1
 8000594:	603b      	str	r3, [r7, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000596:	2300      	movs	r3, #0
 8000598:	607b      	str	r3, [r7, #4]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800059a:	2301      	movs	r3, #1
 800059c:	60bb      	str	r3, [r7, #8]
    HAL_GPIO_Init(DHT11_GPIO_Port, &GPIO_InitStruct);
 800059e:	463b      	mov	r3, r7
 80005a0:	4619      	mov	r1, r3
 80005a2:	4803      	ldr	r0, [pc, #12]	@ (80005b0 <DHT11_SetPinInput+0x30>)
 80005a4:	f000 fe80 	bl	80012a8 <HAL_GPIO_Init>
}
 80005a8:	bf00      	nop
 80005aa:	3710      	adds	r7, #16
 80005ac:	46bd      	mov	sp, r7
 80005ae:	bd80      	pop	{r7, pc}
 80005b0:	40010800 	.word	0x40010800

080005b4 <DHT11_SetPin>:

void DHT11_SetPin(GPIO_PinState state) {
 80005b4:	b580      	push	{r7, lr}
 80005b6:	b082      	sub	sp, #8
 80005b8:	af00      	add	r7, sp, #0
 80005ba:	4603      	mov	r3, r0
 80005bc:	71fb      	strb	r3, [r7, #7]
    HAL_GPIO_WritePin(DHT11_GPIO_Port, DHT11_Pin, state);
 80005be:	79fb      	ldrb	r3, [r7, #7]
 80005c0:	461a      	mov	r2, r3
 80005c2:	2101      	movs	r1, #1
 80005c4:	4803      	ldr	r0, [pc, #12]	@ (80005d4 <DHT11_SetPin+0x20>)
 80005c6:	f001 f80a 	bl	80015de <HAL_GPIO_WritePin>
}
 80005ca:	bf00      	nop
 80005cc:	3708      	adds	r7, #8
 80005ce:	46bd      	mov	sp, r7
 80005d0:	bd80      	pop	{r7, pc}
 80005d2:	bf00      	nop
 80005d4:	40010800 	.word	0x40010800

080005d8 <DHT11_ReadPin>:

GPIO_PinState DHT11_ReadPin(void) {
 80005d8:	b580      	push	{r7, lr}
 80005da:	af00      	add	r7, sp, #0
    return HAL_GPIO_ReadPin(DHT11_GPIO_Port, DHT11_Pin);
 80005dc:	2101      	movs	r1, #1
 80005de:	4803      	ldr	r0, [pc, #12]	@ (80005ec <DHT11_ReadPin+0x14>)
 80005e0:	f000 ffe6 	bl	80015b0 <HAL_GPIO_ReadPin>
 80005e4:	4603      	mov	r3, r0
}
 80005e6:	4618      	mov	r0, r3
 80005e8:	bd80      	pop	{r7, pc}
 80005ea:	bf00      	nop
 80005ec:	40010800 	.word	0x40010800

080005f0 <DHT11_DelayUs>:

void DHT11_DelayUs(uint32_t us) {
 80005f0:	b480      	push	{r7}
 80005f2:	b083      	sub	sp, #12
 80005f4:	af00      	add	r7, sp, #0
 80005f6:	6078      	str	r0, [r7, #4]
    __HAL_TIM_SET_COUNTER(&htim2, 0);
 80005f8:	4b08      	ldr	r3, [pc, #32]	@ (800061c <DHT11_DelayUs+0x2c>)
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	2200      	movs	r2, #0
 80005fe:	625a      	str	r2, [r3, #36]	@ 0x24
    while (__HAL_TIM_GET_COUNTER(&htim2) < us);
 8000600:	bf00      	nop
 8000602:	4b06      	ldr	r3, [pc, #24]	@ (800061c <DHT11_DelayUs+0x2c>)
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000608:	687a      	ldr	r2, [r7, #4]
 800060a:	429a      	cmp	r2, r3
 800060c:	d8f9      	bhi.n	8000602 <DHT11_DelayUs+0x12>
}
 800060e:	bf00      	nop
 8000610:	bf00      	nop
 8000612:	370c      	adds	r7, #12
 8000614:	46bd      	mov	sp, r7
 8000616:	bc80      	pop	{r7}
 8000618:	4770      	bx	lr
 800061a:	bf00      	nop
 800061c:	200000e0 	.word	0x200000e0

08000620 <DHT11_Start>:

uint8_t DHT11_Start(void) {
 8000620:	b580      	push	{r7, lr}
 8000622:	b082      	sub	sp, #8
 8000624:	af00      	add	r7, sp, #0
    uint8_t response = 0;
 8000626:	2300      	movs	r3, #0
 8000628:	71fb      	strb	r3, [r7, #7]

    // 출력 모드로 설정
    DHT11_SetPinOutput();
 800062a:	f7ff ff8d 	bl	8000548 <DHT11_SetPinOutput>

    // 시작 신호 전송 (18ms LOW)
    DHT11_SetPin(GPIO_PIN_RESET);
 800062e:	2000      	movs	r0, #0
 8000630:	f7ff ffc0 	bl	80005b4 <DHT11_SetPin>
    HAL_Delay(20);  // 18ms -> 20ms로 변경 (더 안정적)
 8000634:	2014      	movs	r0, #20
 8000636:	f000 fd05 	bl	8001044 <HAL_Delay>

    // HIGH로 변경 후 20-40us 대기
    DHT11_SetPin(GPIO_PIN_SET);
 800063a:	2001      	movs	r0, #1
 800063c:	f7ff ffba 	bl	80005b4 <DHT11_SetPin>
    DHT11_DelayUs(30);
 8000640:	201e      	movs	r0, #30
 8000642:	f7ff ffd5 	bl	80005f0 <DHT11_DelayUs>

    // 입력 모드로 변경
    DHT11_SetPinInput();
 8000646:	f7ff ff9b 	bl	8000580 <DHT11_SetPinInput>

    // DHT11 응답 확인 (80us LOW + 80us HIGH)
    DHT11_DelayUs(40);
 800064a:	2028      	movs	r0, #40	@ 0x28
 800064c:	f7ff ffd0 	bl	80005f0 <DHT11_DelayUs>

    if (!(DHT11_ReadPin())) {
 8000650:	f7ff ffc2 	bl	80005d8 <DHT11_ReadPin>
 8000654:	4603      	mov	r3, r0
 8000656:	2b00      	cmp	r3, #0
 8000658:	d10c      	bne.n	8000674 <DHT11_Start+0x54>
        DHT11_DelayUs(80);
 800065a:	2050      	movs	r0, #80	@ 0x50
 800065c:	f7ff ffc8 	bl	80005f0 <DHT11_DelayUs>
        if (DHT11_ReadPin()) {
 8000660:	f7ff ffba 	bl	80005d8 <DHT11_ReadPin>
 8000664:	4603      	mov	r3, r0
 8000666:	2b00      	cmp	r3, #0
 8000668:	d002      	beq.n	8000670 <DHT11_Start+0x50>
            response = 1;
 800066a:	2301      	movs	r3, #1
 800066c:	71fb      	strb	r3, [r7, #7]
 800066e:	e001      	b.n	8000674 <DHT11_Start+0x54>
        } else {
            response = 0;
 8000670:	2300      	movs	r3, #0
 8000672:	71fb      	strb	r3, [r7, #7]
        }
    }

    // HIGH가 끝날 때까지 대기
    while (DHT11_ReadPin());
 8000674:	bf00      	nop
 8000676:	f7ff ffaf 	bl	80005d8 <DHT11_ReadPin>
 800067a:	4603      	mov	r3, r0
 800067c:	2b00      	cmp	r3, #0
 800067e:	d1fa      	bne.n	8000676 <DHT11_Start+0x56>

    return response;
 8000680:	79fb      	ldrb	r3, [r7, #7]
}
 8000682:	4618      	mov	r0, r3
 8000684:	3708      	adds	r7, #8
 8000686:	46bd      	mov	sp, r7
 8000688:	bd80      	pop	{r7, pc}

0800068a <DHT11_ReadBit>:

uint8_t DHT11_ReadBit(void) {
 800068a:	b580      	push	{r7, lr}
 800068c:	af00      	add	r7, sp, #0
    // LOW 신호가 끝날 때까지 대기 (50us)
    while (!(DHT11_ReadPin()));
 800068e:	bf00      	nop
 8000690:	f7ff ffa2 	bl	80005d8 <DHT11_ReadPin>
 8000694:	4603      	mov	r3, r0
 8000696:	2b00      	cmp	r3, #0
 8000698:	d0fa      	beq.n	8000690 <DHT11_ReadBit+0x6>

    // HIGH 신호 시작 후 30us 대기
    DHT11_DelayUs(30);
 800069a:	201e      	movs	r0, #30
 800069c:	f7ff ffa8 	bl	80005f0 <DHT11_DelayUs>

    // 여전히 HIGH면 1, LOW면 0
    if (DHT11_ReadPin()) {
 80006a0:	f7ff ff9a 	bl	80005d8 <DHT11_ReadPin>
 80006a4:	4603      	mov	r3, r0
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	d007      	beq.n	80006ba <DHT11_ReadBit+0x30>
        // HIGH가 끝날 때까지 대기
        while (DHT11_ReadPin());
 80006aa:	bf00      	nop
 80006ac:	f7ff ff94 	bl	80005d8 <DHT11_ReadPin>
 80006b0:	4603      	mov	r3, r0
 80006b2:	2b00      	cmp	r3, #0
 80006b4:	d1fa      	bne.n	80006ac <DHT11_ReadBit+0x22>
        return 1;
 80006b6:	2301      	movs	r3, #1
 80006b8:	e000      	b.n	80006bc <DHT11_ReadBit+0x32>
    } else {
        return 0;
 80006ba:	2300      	movs	r3, #0
    }
}
 80006bc:	4618      	mov	r0, r3
 80006be:	bd80      	pop	{r7, pc}

080006c0 <DHT11_ReadByte>:

uint8_t DHT11_ReadByte(void) {
 80006c0:	b590      	push	{r4, r7, lr}
 80006c2:	b083      	sub	sp, #12
 80006c4:	af00      	add	r7, sp, #0
    uint8_t byte = 0;
 80006c6:	2300      	movs	r3, #0
 80006c8:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 8; i++) {
 80006ca:	2300      	movs	r3, #0
 80006cc:	603b      	str	r3, [r7, #0]
 80006ce:	e00d      	b.n	80006ec <DHT11_ReadByte+0x2c>
        byte = (byte << 1) | DHT11_ReadBit();
 80006d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80006d4:	005b      	lsls	r3, r3, #1
 80006d6:	b25c      	sxtb	r4, r3
 80006d8:	f7ff ffd7 	bl	800068a <DHT11_ReadBit>
 80006dc:	4603      	mov	r3, r0
 80006de:	b25b      	sxtb	r3, r3
 80006e0:	4323      	orrs	r3, r4
 80006e2:	b25b      	sxtb	r3, r3
 80006e4:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 8; i++) {
 80006e6:	683b      	ldr	r3, [r7, #0]
 80006e8:	3301      	adds	r3, #1
 80006ea:	603b      	str	r3, [r7, #0]
 80006ec:	683b      	ldr	r3, [r7, #0]
 80006ee:	2b07      	cmp	r3, #7
 80006f0:	ddee      	ble.n	80006d0 <DHT11_ReadByte+0x10>
    }
    return byte;
 80006f2:	79fb      	ldrb	r3, [r7, #7]
}
 80006f4:	4618      	mov	r0, r3
 80006f6:	370c      	adds	r7, #12
 80006f8:	46bd      	mov	sp, r7
 80006fa:	bd90      	pop	{r4, r7, pc}

080006fc <DHT11_ReadData>:

uint8_t DHT11_ReadData(DHT11_Data *data) {
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b084      	sub	sp, #16
 8000700:	af00      	add	r7, sp, #0
 8000702:	6078      	str	r0, [r7, #4]
    if (!DHT11_Start()) {
 8000704:	f7ff ff8c 	bl	8000620 <DHT11_Start>
 8000708:	4603      	mov	r3, r0
 800070a:	2b00      	cmp	r3, #0
 800070c:	d101      	bne.n	8000712 <DHT11_ReadData+0x16>
        return 0; // 시작 신호 실패
 800070e:	2300      	movs	r3, #0
 8000710:	e033      	b.n	800077a <DHT11_ReadData+0x7e>
    }

    // 5바이트 데이터 읽기
    data->humidity = DHT11_ReadByte();
 8000712:	f7ff ffd5 	bl	80006c0 <DHT11_ReadByte>
 8000716:	4603      	mov	r3, r0
 8000718:	461a      	mov	r2, r3
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	705a      	strb	r2, [r3, #1]
    data->hum_decimal = DHT11_ReadByte();
 800071e:	f7ff ffcf 	bl	80006c0 <DHT11_ReadByte>
 8000722:	4603      	mov	r3, r0
 8000724:	461a      	mov	r2, r3
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	70da      	strb	r2, [r3, #3]
    data->temperature = DHT11_ReadByte();
 800072a:	f7ff ffc9 	bl	80006c0 <DHT11_ReadByte>
 800072e:	4603      	mov	r3, r0
 8000730:	461a      	mov	r2, r3
 8000732:	687b      	ldr	r3, [r7, #4]
 8000734:	701a      	strb	r2, [r3, #0]
    data->temp_decimal = DHT11_ReadByte();
 8000736:	f7ff ffc3 	bl	80006c0 <DHT11_ReadByte>
 800073a:	4603      	mov	r3, r0
 800073c:	461a      	mov	r2, r3
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	709a      	strb	r2, [r3, #2]
    data->checksum = DHT11_ReadByte();
 8000742:	f7ff ffbd 	bl	80006c0 <DHT11_ReadByte>
 8000746:	4603      	mov	r3, r0
 8000748:	461a      	mov	r2, r3
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	711a      	strb	r2, [r3, #4]

    // 체크섬 확인
    uint8_t calculated_checksum = data->humidity + data->hum_decimal +
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	785a      	ldrb	r2, [r3, #1]
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	78db      	ldrb	r3, [r3, #3]
 8000756:	4413      	add	r3, r2
 8000758:	b2da      	uxtb	r2, r3
                                 data->temperature + data->temp_decimal;
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	781b      	ldrb	r3, [r3, #0]
    uint8_t calculated_checksum = data->humidity + data->hum_decimal +
 800075e:	4413      	add	r3, r2
 8000760:	b2da      	uxtb	r2, r3
                                 data->temperature + data->temp_decimal;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	789b      	ldrb	r3, [r3, #2]
    uint8_t calculated_checksum = data->humidity + data->hum_decimal +
 8000766:	4413      	add	r3, r2
 8000768:	73fb      	strb	r3, [r7, #15]

    if (calculated_checksum == data->checksum) {
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	791b      	ldrb	r3, [r3, #4]
 800076e:	7bfa      	ldrb	r2, [r7, #15]
 8000770:	429a      	cmp	r2, r3
 8000772:	d101      	bne.n	8000778 <DHT11_ReadData+0x7c>
        return 1; // 성공
 8000774:	2301      	movs	r3, #1
 8000776:	e000      	b.n	800077a <DHT11_ReadData+0x7e>
    } else {
        return 0; // 체크섬 오류
 8000778:	2300      	movs	r3, #0
    }
}
 800077a:	4618      	mov	r0, r3
 800077c:	3710      	adds	r7, #16
 800077e:	46bd      	mov	sp, r7
 8000780:	bd80      	pop	{r7, pc}
	...

08000784 <__io_putchar>:
  * @brief  Retargets the C library printf function to the USART.
  * @param  None
  * @retval None
  */
PUTCHAR_PROTOTYPE
{
 8000784:	b580      	push	{r7, lr}
 8000786:	b082      	sub	sp, #8
 8000788:	af00      	add	r7, sp, #0
 800078a:	6078      	str	r0, [r7, #4]
  /* Place your implementation of fputc here */
  /* e.g. write a character to the USART1 and Loop until the end of transmission */
  if (ch == '\n')
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	2b0a      	cmp	r3, #10
 8000790:	d106      	bne.n	80007a0 <__io_putchar+0x1c>
    HAL_UART_Transmit (&huart2, (uint8_t*) "\r", 1, 0xFFFF);
 8000792:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000796:	2201      	movs	r2, #1
 8000798:	4907      	ldr	r1, [pc, #28]	@ (80007b8 <__io_putchar+0x34>)
 800079a:	4808      	ldr	r0, [pc, #32]	@ (80007bc <__io_putchar+0x38>)
 800079c:	f002 fc48 	bl	8003030 <HAL_UART_Transmit>
  	HAL_UART_Transmit (&huart2, (uint8_t*) &ch, 1, 0xFFFF);
 80007a0:	1d39      	adds	r1, r7, #4
 80007a2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80007a6:	2201      	movs	r2, #1
 80007a8:	4804      	ldr	r0, [pc, #16]	@ (80007bc <__io_putchar+0x38>)
 80007aa:	f002 fc41 	bl	8003030 <HAL_UART_Transmit>

  return ch;
 80007ae:	687b      	ldr	r3, [r7, #4]
}
 80007b0:	4618      	mov	r0, r3
 80007b2:	3708      	adds	r7, #8
 80007b4:	46bd      	mov	sp, r7
 80007b6:	bd80      	pop	{r7, pc}
 80007b8:	08004720 	.word	0x08004720
 80007bc:	20000128 	.word	0x20000128

080007c0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80007c4:	f000 fbdc 	bl	8000f80 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80007c8:	f000 f898 	bl	80008fc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80007cc:	f000 f97c 	bl	8000ac8 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80007d0:	f000 f950 	bl	8000a74 <MX_USART2_UART_Init>
  MX_I2C1_Init();
 80007d4:	f000 f8d4 	bl	8000980 <MX_I2C1_Init>
  MX_TIM2_Init();
 80007d8:	f000 f900 	bl	80009dc <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start(&htim2);
 80007dc:	483c      	ldr	r0, [pc, #240]	@ (80008d0 <main+0x110>)
 80007de:	f002 f963 	bl	8002aa8 <HAL_TIM_Base_Start>

  I2C_ScanAddresses();
 80007e2:	f7ff fcbb 	bl	800015c <I2C_ScanAddresses>

  LCD_INIT();
 80007e6:	f7ff fe2b 	bl	8000440 <LCD_INIT>
  LCD_XY(0, 0) ; LCD_PUTS((char *)"DHT11 Temperature &");
 80007ea:	2100      	movs	r1, #0
 80007ec:	2000      	movs	r0, #0
 80007ee:	f7ff fe58 	bl	80004a2 <LCD_XY>
 80007f2:	4838      	ldr	r0, [pc, #224]	@ (80008d4 <main+0x114>)
 80007f4:	f7ff fe92 	bl	800051c <LCD_PUTS>
  LCD_XY(0, 1) ; LCD_PUTS((char *)"Humidity Sensor Test");
 80007f8:	2101      	movs	r1, #1
 80007fa:	2000      	movs	r0, #0
 80007fc:	f7ff fe51 	bl	80004a2 <LCD_XY>
 8000800:	4835      	ldr	r0, [pc, #212]	@ (80008d8 <main+0x118>)
 8000802:	f7ff fe8b 	bl	800051c <LCD_PUTS>
  HAL_Delay(1000);
 8000806:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800080a:	f000 fc1b 	bl	8001044 <HAL_Delay>
  HAL_UART_Transmit(&huart2, (uint8_t*)buff, strlen(buff), HAL_MAX_DELAY);
 800080e:	4833      	ldr	r0, [pc, #204]	@ (80008dc <main+0x11c>)
 8000810:	f7ff fc9c 	bl	800014c <strlen>
 8000814:	4603      	mov	r3, r0
 8000816:	b29a      	uxth	r2, r3
 8000818:	f04f 33ff 	mov.w	r3, #4294967295
 800081c:	492f      	ldr	r1, [pc, #188]	@ (80008dc <main+0x11c>)
 800081e:	4830      	ldr	r0, [pc, #192]	@ (80008e0 <main+0x120>)
 8000820:	f002 fc06 	bl	8003030 <HAL_UART_Transmit>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	    if (DHT11_ReadData(&dht11_data)) {
 8000824:	482f      	ldr	r0, [pc, #188]	@ (80008e4 <main+0x124>)
 8000826:	f7ff ff69 	bl	80006fc <DHT11_ReadData>
 800082a:	4603      	mov	r3, r0
 800082c:	2b00      	cmp	r3, #0
 800082e:	d033      	beq.n	8000898 <main+0xd8>
	      // 데이터 읽기 성공
	      LCD_XY(0, 0) ; LCD_CLEAR();
 8000830:	2100      	movs	r1, #0
 8000832:	2000      	movs	r0, #0
 8000834:	f7ff fe35 	bl	80004a2 <LCD_XY>
 8000838:	f7ff fe66 	bl	8000508 <LCD_CLEAR>
	      LCD_XY(0, 1) ; LCD_CLEAR();
 800083c:	2101      	movs	r1, #1
 800083e:	2000      	movs	r0, #0
 8000840:	f7ff fe2f 	bl	80004a2 <LCD_XY>
 8000844:	f7ff fe60 	bl	8000508 <LCD_CLEAR>
	      sprintf(temp, "Temperature:%dC", dht11_data.temperature);
 8000848:	4b26      	ldr	r3, [pc, #152]	@ (80008e4 <main+0x124>)
 800084a:	781b      	ldrb	r3, [r3, #0]
 800084c:	461a      	mov	r2, r3
 800084e:	4926      	ldr	r1, [pc, #152]	@ (80008e8 <main+0x128>)
 8000850:	4826      	ldr	r0, [pc, #152]	@ (80008ec <main+0x12c>)
 8000852:	f002 fef3 	bl	800363c <siprintf>
	      sprintf(hum, "Humidity:%d%%", dht11_data.humidity);
 8000856:	4b23      	ldr	r3, [pc, #140]	@ (80008e4 <main+0x124>)
 8000858:	785b      	ldrb	r3, [r3, #1]
 800085a:	461a      	mov	r2, r3
 800085c:	4924      	ldr	r1, [pc, #144]	@ (80008f0 <main+0x130>)
 800085e:	4825      	ldr	r0, [pc, #148]	@ (80008f4 <main+0x134>)
 8000860:	f002 feec 	bl	800363c <siprintf>
	      LCD_XY(0, 0) ; LCD_PUTS((char *) temp);
 8000864:	2100      	movs	r1, #0
 8000866:	2000      	movs	r0, #0
 8000868:	f7ff fe1b 	bl	80004a2 <LCD_XY>
 800086c:	481f      	ldr	r0, [pc, #124]	@ (80008ec <main+0x12c>)
 800086e:	f7ff fe55 	bl	800051c <LCD_PUTS>
	      LCD_XY(0, 1) ; LCD_PUTS((char *) hum);
 8000872:	2101      	movs	r1, #1
 8000874:	2000      	movs	r0, #0
 8000876:	f7ff fe14 	bl	80004a2 <LCD_XY>
 800087a:	481e      	ldr	r0, [pc, #120]	@ (80008f4 <main+0x134>)
 800087c:	f7ff fe4e 	bl	800051c <LCD_PUTS>
	      HAL_UART_Transmit(&huart2, (uint8_t*)buff, strlen(buff), HAL_MAX_DELAY);
 8000880:	4816      	ldr	r0, [pc, #88]	@ (80008dc <main+0x11c>)
 8000882:	f7ff fc63 	bl	800014c <strlen>
 8000886:	4603      	mov	r3, r0
 8000888:	b29a      	uxth	r2, r3
 800088a:	f04f 33ff 	mov.w	r3, #4294967295
 800088e:	4913      	ldr	r1, [pc, #76]	@ (80008dc <main+0x11c>)
 8000890:	4813      	ldr	r0, [pc, #76]	@ (80008e0 <main+0x120>)
 8000892:	f002 fbcd 	bl	8003030 <HAL_UART_Transmit>
 8000896:	e015      	b.n	80008c4 <main+0x104>
	    } else {
	      // 데이터 읽기 실패
	      sprintf(buff, "DHT11 Read Error!\r\n");
 8000898:	4917      	ldr	r1, [pc, #92]	@ (80008f8 <main+0x138>)
 800089a:	4810      	ldr	r0, [pc, #64]	@ (80008dc <main+0x11c>)
 800089c:	f002 fece 	bl	800363c <siprintf>
	      LCD_XY(0, 0) ; LCD_PUTS((char *)"DHT11 Read Error!\r\n");
 80008a0:	2100      	movs	r1, #0
 80008a2:	2000      	movs	r0, #0
 80008a4:	f7ff fdfd 	bl	80004a2 <LCD_XY>
 80008a8:	4813      	ldr	r0, [pc, #76]	@ (80008f8 <main+0x138>)
 80008aa:	f7ff fe37 	bl	800051c <LCD_PUTS>
	      HAL_UART_Transmit(&huart2, (uint8_t*)buff, strlen(buff), HAL_MAX_DELAY);
 80008ae:	480b      	ldr	r0, [pc, #44]	@ (80008dc <main+0x11c>)
 80008b0:	f7ff fc4c 	bl	800014c <strlen>
 80008b4:	4603      	mov	r3, r0
 80008b6:	b29a      	uxth	r2, r3
 80008b8:	f04f 33ff 	mov.w	r3, #4294967295
 80008bc:	4907      	ldr	r1, [pc, #28]	@ (80008dc <main+0x11c>)
 80008be:	4808      	ldr	r0, [pc, #32]	@ (80008e0 <main+0x120>)
 80008c0:	f002 fbb6 	bl	8003030 <HAL_UART_Transmit>
	    }
	    // 2초 대기 (DHT11은 최소 2초 간격으로 읽어야 함)
	    HAL_Delay(500);
 80008c4:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80008c8:	f000 fbbc 	bl	8001044 <HAL_Delay>
	    if (DHT11_ReadData(&dht11_data)) {
 80008cc:	e7aa      	b.n	8000824 <main+0x64>
 80008ce:	bf00      	nop
 80008d0:	200000e0 	.word	0x200000e0
 80008d4:	08004724 	.word	0x08004724
 80008d8:	08004738 	.word	0x08004738
 80008dc:	20000178 	.word	0x20000178
 80008e0:	20000128 	.word	0x20000128
 80008e4:	20000170 	.word	0x20000170
 80008e8:	08004750 	.word	0x08004750
 80008ec:	200001dc 	.word	0x200001dc
 80008f0:	08004760 	.word	0x08004760
 80008f4:	20000240 	.word	0x20000240
 80008f8:	08004770 	.word	0x08004770

080008fc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b090      	sub	sp, #64	@ 0x40
 8000900:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000902:	f107 0318 	add.w	r3, r7, #24
 8000906:	2228      	movs	r2, #40	@ 0x28
 8000908:	2100      	movs	r1, #0
 800090a:	4618      	mov	r0, r3
 800090c:	f002 ff90 	bl	8003830 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000910:	1d3b      	adds	r3, r7, #4
 8000912:	2200      	movs	r2, #0
 8000914:	601a      	str	r2, [r3, #0]
 8000916:	605a      	str	r2, [r3, #4]
 8000918:	609a      	str	r2, [r3, #8]
 800091a:	60da      	str	r2, [r3, #12]
 800091c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800091e:	2302      	movs	r3, #2
 8000920:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000922:	2301      	movs	r3, #1
 8000924:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000926:	2310      	movs	r3, #16
 8000928:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800092a:	2302      	movs	r3, #2
 800092c:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 800092e:	2300      	movs	r3, #0
 8000930:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000932:	f44f 1360 	mov.w	r3, #3670016	@ 0x380000
 8000936:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000938:	f107 0318 	add.w	r3, r7, #24
 800093c:	4618      	mov	r0, r3
 800093e:	f001 fc53 	bl	80021e8 <HAL_RCC_OscConfig>
 8000942:	4603      	mov	r3, r0
 8000944:	2b00      	cmp	r3, #0
 8000946:	d001      	beq.n	800094c <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000948:	f000 f938 	bl	8000bbc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800094c:	230f      	movs	r3, #15
 800094e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000950:	2302      	movs	r3, #2
 8000952:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000954:	2300      	movs	r3, #0
 8000956:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000958:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800095c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800095e:	2300      	movs	r3, #0
 8000960:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000962:	1d3b      	adds	r3, r7, #4
 8000964:	2102      	movs	r1, #2
 8000966:	4618      	mov	r0, r3
 8000968:	f001 fec0 	bl	80026ec <HAL_RCC_ClockConfig>
 800096c:	4603      	mov	r3, r0
 800096e:	2b00      	cmp	r3, #0
 8000970:	d001      	beq.n	8000976 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000972:	f000 f923 	bl	8000bbc <Error_Handler>
  }
}
 8000976:	bf00      	nop
 8000978:	3740      	adds	r7, #64	@ 0x40
 800097a:	46bd      	mov	sp, r7
 800097c:	bd80      	pop	{r7, pc}
	...

08000980 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000980:	b580      	push	{r7, lr}
 8000982:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000984:	4b12      	ldr	r3, [pc, #72]	@ (80009d0 <MX_I2C1_Init+0x50>)
 8000986:	4a13      	ldr	r2, [pc, #76]	@ (80009d4 <MX_I2C1_Init+0x54>)
 8000988:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800098a:	4b11      	ldr	r3, [pc, #68]	@ (80009d0 <MX_I2C1_Init+0x50>)
 800098c:	4a12      	ldr	r2, [pc, #72]	@ (80009d8 <MX_I2C1_Init+0x58>)
 800098e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000990:	4b0f      	ldr	r3, [pc, #60]	@ (80009d0 <MX_I2C1_Init+0x50>)
 8000992:	2200      	movs	r2, #0
 8000994:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000996:	4b0e      	ldr	r3, [pc, #56]	@ (80009d0 <MX_I2C1_Init+0x50>)
 8000998:	2200      	movs	r2, #0
 800099a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800099c:	4b0c      	ldr	r3, [pc, #48]	@ (80009d0 <MX_I2C1_Init+0x50>)
 800099e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80009a2:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80009a4:	4b0a      	ldr	r3, [pc, #40]	@ (80009d0 <MX_I2C1_Init+0x50>)
 80009a6:	2200      	movs	r2, #0
 80009a8:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80009aa:	4b09      	ldr	r3, [pc, #36]	@ (80009d0 <MX_I2C1_Init+0x50>)
 80009ac:	2200      	movs	r2, #0
 80009ae:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80009b0:	4b07      	ldr	r3, [pc, #28]	@ (80009d0 <MX_I2C1_Init+0x50>)
 80009b2:	2200      	movs	r2, #0
 80009b4:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009b6:	4b06      	ldr	r3, [pc, #24]	@ (80009d0 <MX_I2C1_Init+0x50>)
 80009b8:	2200      	movs	r2, #0
 80009ba:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80009bc:	4804      	ldr	r0, [pc, #16]	@ (80009d0 <MX_I2C1_Init+0x50>)
 80009be:	f000 fe49 	bl	8001654 <HAL_I2C_Init>
 80009c2:	4603      	mov	r3, r0
 80009c4:	2b00      	cmp	r3, #0
 80009c6:	d001      	beq.n	80009cc <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80009c8:	f000 f8f8 	bl	8000bbc <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80009cc:	bf00      	nop
 80009ce:	bd80      	pop	{r7, pc}
 80009d0:	20000084 	.word	0x20000084
 80009d4:	40005400 	.word	0x40005400
 80009d8:	000186a0 	.word	0x000186a0

080009dc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80009dc:	b580      	push	{r7, lr}
 80009de:	b086      	sub	sp, #24
 80009e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80009e2:	f107 0308 	add.w	r3, r7, #8
 80009e6:	2200      	movs	r2, #0
 80009e8:	601a      	str	r2, [r3, #0]
 80009ea:	605a      	str	r2, [r3, #4]
 80009ec:	609a      	str	r2, [r3, #8]
 80009ee:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80009f0:	463b      	mov	r3, r7
 80009f2:	2200      	movs	r2, #0
 80009f4:	601a      	str	r2, [r3, #0]
 80009f6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80009f8:	4b1d      	ldr	r3, [pc, #116]	@ (8000a70 <MX_TIM2_Init+0x94>)
 80009fa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80009fe:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 64-1;
 8000a00:	4b1b      	ldr	r3, [pc, #108]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a02:	223f      	movs	r2, #63	@ 0x3f
 8000a04:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000a06:	4b1a      	ldr	r3, [pc, #104]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a08:	2200      	movs	r2, #0
 8000a0a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 8000a0c:	4b18      	ldr	r3, [pc, #96]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a0e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000a12:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000a14:	4b16      	ldr	r3, [pc, #88]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a16:	2200      	movs	r2, #0
 8000a18:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000a1a:	4b15      	ldr	r3, [pc, #84]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000a20:	4813      	ldr	r0, [pc, #76]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a22:	f001 fff1 	bl	8002a08 <HAL_TIM_Base_Init>
 8000a26:	4603      	mov	r3, r0
 8000a28:	2b00      	cmp	r3, #0
 8000a2a:	d001      	beq.n	8000a30 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000a2c:	f000 f8c6 	bl	8000bbc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000a30:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a34:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000a36:	f107 0308 	add.w	r3, r7, #8
 8000a3a:	4619      	mov	r1, r3
 8000a3c:	480c      	ldr	r0, [pc, #48]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a3e:	f002 f87d 	bl	8002b3c <HAL_TIM_ConfigClockSource>
 8000a42:	4603      	mov	r3, r0
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	d001      	beq.n	8000a4c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000a48:	f000 f8b8 	bl	8000bbc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000a50:	2300      	movs	r3, #0
 8000a52:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000a54:	463b      	mov	r3, r7
 8000a56:	4619      	mov	r1, r3
 8000a58:	4805      	ldr	r0, [pc, #20]	@ (8000a70 <MX_TIM2_Init+0x94>)
 8000a5a:	f002 fa3b 	bl	8002ed4 <HAL_TIMEx_MasterConfigSynchronization>
 8000a5e:	4603      	mov	r3, r0
 8000a60:	2b00      	cmp	r3, #0
 8000a62:	d001      	beq.n	8000a68 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000a64:	f000 f8aa 	bl	8000bbc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000a68:	bf00      	nop
 8000a6a:	3718      	adds	r7, #24
 8000a6c:	46bd      	mov	sp, r7
 8000a6e:	bd80      	pop	{r7, pc}
 8000a70:	200000e0 	.word	0x200000e0

08000a74 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000a74:	b580      	push	{r7, lr}
 8000a76:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000a78:	4b11      	ldr	r3, [pc, #68]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000a7a:	4a12      	ldr	r2, [pc, #72]	@ (8000ac4 <MX_USART2_UART_Init+0x50>)
 8000a7c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8000a7e:	4b10      	ldr	r3, [pc, #64]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000a80:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000a84:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000a86:	4b0e      	ldr	r3, [pc, #56]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000a88:	2200      	movs	r2, #0
 8000a8a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000a8c:	4b0c      	ldr	r3, [pc, #48]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000a92:	4b0b      	ldr	r3, [pc, #44]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000a94:	2200      	movs	r2, #0
 8000a96:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000a98:	4b09      	ldr	r3, [pc, #36]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000a9a:	220c      	movs	r2, #12
 8000a9c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000a9e:	4b08      	ldr	r3, [pc, #32]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000aa4:	4b06      	ldr	r3, [pc, #24]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000aaa:	4805      	ldr	r0, [pc, #20]	@ (8000ac0 <MX_USART2_UART_Init+0x4c>)
 8000aac:	f002 fa70 	bl	8002f90 <HAL_UART_Init>
 8000ab0:	4603      	mov	r3, r0
 8000ab2:	2b00      	cmp	r3, #0
 8000ab4:	d001      	beq.n	8000aba <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000ab6:	f000 f881 	bl	8000bbc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000aba:	bf00      	nop
 8000abc:	bd80      	pop	{r7, pc}
 8000abe:	bf00      	nop
 8000ac0:	20000128 	.word	0x20000128
 8000ac4:	40004400 	.word	0x40004400

08000ac8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	b088      	sub	sp, #32
 8000acc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ace:	f107 0310 	add.w	r3, r7, #16
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	601a      	str	r2, [r3, #0]
 8000ad6:	605a      	str	r2, [r3, #4]
 8000ad8:	609a      	str	r2, [r3, #8]
 8000ada:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000adc:	4b33      	ldr	r3, [pc, #204]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000ade:	699b      	ldr	r3, [r3, #24]
 8000ae0:	4a32      	ldr	r2, [pc, #200]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000ae2:	f043 0310 	orr.w	r3, r3, #16
 8000ae6:	6193      	str	r3, [r2, #24]
 8000ae8:	4b30      	ldr	r3, [pc, #192]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000aea:	699b      	ldr	r3, [r3, #24]
 8000aec:	f003 0310 	and.w	r3, r3, #16
 8000af0:	60fb      	str	r3, [r7, #12]
 8000af2:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000af4:	4b2d      	ldr	r3, [pc, #180]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000af6:	699b      	ldr	r3, [r3, #24]
 8000af8:	4a2c      	ldr	r2, [pc, #176]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000afa:	f043 0320 	orr.w	r3, r3, #32
 8000afe:	6193      	str	r3, [r2, #24]
 8000b00:	4b2a      	ldr	r3, [pc, #168]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b02:	699b      	ldr	r3, [r3, #24]
 8000b04:	f003 0320 	and.w	r3, r3, #32
 8000b08:	60bb      	str	r3, [r7, #8]
 8000b0a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b0c:	4b27      	ldr	r3, [pc, #156]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b0e:	699b      	ldr	r3, [r3, #24]
 8000b10:	4a26      	ldr	r2, [pc, #152]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b12:	f043 0304 	orr.w	r3, r3, #4
 8000b16:	6193      	str	r3, [r2, #24]
 8000b18:	4b24      	ldr	r3, [pc, #144]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b1a:	699b      	ldr	r3, [r3, #24]
 8000b1c:	f003 0304 	and.w	r3, r3, #4
 8000b20:	607b      	str	r3, [r7, #4]
 8000b22:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b24:	4b21      	ldr	r3, [pc, #132]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b26:	699b      	ldr	r3, [r3, #24]
 8000b28:	4a20      	ldr	r2, [pc, #128]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b2a:	f043 0308 	orr.w	r3, r3, #8
 8000b2e:	6193      	str	r3, [r2, #24]
 8000b30:	4b1e      	ldr	r3, [pc, #120]	@ (8000bac <MX_GPIO_Init+0xe4>)
 8000b32:	699b      	ldr	r3, [r3, #24]
 8000b34:	f003 0308 	and.w	r3, r3, #8
 8000b38:	603b      	str	r3, [r7, #0]
 8000b3a:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000b3c:	2200      	movs	r2, #0
 8000b3e:	2120      	movs	r1, #32
 8000b40:	481b      	ldr	r0, [pc, #108]	@ (8000bb0 <MX_GPIO_Init+0xe8>)
 8000b42:	f000 fd4c 	bl	80015de <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8000b46:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b4a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000b4c:	4b19      	ldr	r3, [pc, #100]	@ (8000bb4 <MX_GPIO_Init+0xec>)
 8000b4e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b50:	2300      	movs	r3, #0
 8000b52:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000b54:	f107 0310 	add.w	r3, r7, #16
 8000b58:	4619      	mov	r1, r3
 8000b5a:	4817      	ldr	r0, [pc, #92]	@ (8000bb8 <MX_GPIO_Init+0xf0>)
 8000b5c:	f000 fba4 	bl	80012a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : DHT11_Pin */
  GPIO_InitStruct.Pin = DHT11_Pin;
 8000b60:	2301      	movs	r3, #1
 8000b62:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b64:	2300      	movs	r3, #0
 8000b66:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b68:	2300      	movs	r3, #0
 8000b6a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(DHT11_GPIO_Port, &GPIO_InitStruct);
 8000b6c:	f107 0310 	add.w	r3, r7, #16
 8000b70:	4619      	mov	r1, r3
 8000b72:	480f      	ldr	r0, [pc, #60]	@ (8000bb0 <MX_GPIO_Init+0xe8>)
 8000b74:	f000 fb98 	bl	80012a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8000b78:	2320      	movs	r3, #32
 8000b7a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b7c:	2301      	movs	r3, #1
 8000b7e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b80:	2300      	movs	r3, #0
 8000b82:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b84:	2302      	movs	r3, #2
 8000b86:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000b88:	f107 0310 	add.w	r3, r7, #16
 8000b8c:	4619      	mov	r1, r3
 8000b8e:	4808      	ldr	r0, [pc, #32]	@ (8000bb0 <MX_GPIO_Init+0xe8>)
 8000b90:	f000 fb8a 	bl	80012a8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000b94:	2200      	movs	r2, #0
 8000b96:	2100      	movs	r1, #0
 8000b98:	2028      	movs	r0, #40	@ 0x28
 8000b9a:	f000 fb4e 	bl	800123a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000b9e:	2028      	movs	r0, #40	@ 0x28
 8000ba0:	f000 fb67 	bl	8001272 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000ba4:	bf00      	nop
 8000ba6:	3720      	adds	r7, #32
 8000ba8:	46bd      	mov	sp, r7
 8000baa:	bd80      	pop	{r7, pc}
 8000bac:	40021000 	.word	0x40021000
 8000bb0:	40010800 	.word	0x40010800
 8000bb4:	10110000 	.word	0x10110000
 8000bb8:	40011000 	.word	0x40011000

08000bbc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000bbc:	b480      	push	{r7}
 8000bbe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000bc0:	b672      	cpsid	i
}
 8000bc2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000bc4:	bf00      	nop
 8000bc6:	e7fd      	b.n	8000bc4 <Error_Handler+0x8>

08000bc8 <HAL_MspInit>:
 8000bc8:	b480      	push	{r7}
 8000bca:	b085      	sub	sp, #20
 8000bcc:	af00      	add	r7, sp, #0
 8000bce:	4b15      	ldr	r3, [pc, #84]	@ (8000c24 <HAL_MspInit+0x5c>)
 8000bd0:	699b      	ldr	r3, [r3, #24]
 8000bd2:	4a14      	ldr	r2, [pc, #80]	@ (8000c24 <HAL_MspInit+0x5c>)
 8000bd4:	f043 0301 	orr.w	r3, r3, #1
 8000bd8:	6193      	str	r3, [r2, #24]
 8000bda:	4b12      	ldr	r3, [pc, #72]	@ (8000c24 <HAL_MspInit+0x5c>)
 8000bdc:	699b      	ldr	r3, [r3, #24]
 8000bde:	f003 0301 	and.w	r3, r3, #1
 8000be2:	60bb      	str	r3, [r7, #8]
 8000be4:	68bb      	ldr	r3, [r7, #8]
 8000be6:	4b0f      	ldr	r3, [pc, #60]	@ (8000c24 <HAL_MspInit+0x5c>)
 8000be8:	69db      	ldr	r3, [r3, #28]
 8000bea:	4a0e      	ldr	r2, [pc, #56]	@ (8000c24 <HAL_MspInit+0x5c>)
 8000bec:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000bf0:	61d3      	str	r3, [r2, #28]
 8000bf2:	4b0c      	ldr	r3, [pc, #48]	@ (8000c24 <HAL_MspInit+0x5c>)
 8000bf4:	69db      	ldr	r3, [r3, #28]
 8000bf6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000bfa:	607b      	str	r3, [r7, #4]
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	4b0a      	ldr	r3, [pc, #40]	@ (8000c28 <HAL_MspInit+0x60>)
 8000c00:	685b      	ldr	r3, [r3, #4]
 8000c02:	60fb      	str	r3, [r7, #12]
 8000c04:	68fb      	ldr	r3, [r7, #12]
 8000c06:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000c0a:	60fb      	str	r3, [r7, #12]
 8000c0c:	68fb      	ldr	r3, [r7, #12]
 8000c0e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000c12:	60fb      	str	r3, [r7, #12]
 8000c14:	4a04      	ldr	r2, [pc, #16]	@ (8000c28 <HAL_MspInit+0x60>)
 8000c16:	68fb      	ldr	r3, [r7, #12]
 8000c18:	6053      	str	r3, [r2, #4]
 8000c1a:	bf00      	nop
 8000c1c:	3714      	adds	r7, #20
 8000c1e:	46bd      	mov	sp, r7
 8000c20:	bc80      	pop	{r7}
 8000c22:	4770      	bx	lr
 8000c24:	40021000 	.word	0x40021000
 8000c28:	40010000 	.word	0x40010000

08000c2c <HAL_I2C_MspInit>:
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	b08a      	sub	sp, #40	@ 0x28
 8000c30:	af00      	add	r7, sp, #0
 8000c32:	6078      	str	r0, [r7, #4]
 8000c34:	f107 0314 	add.w	r3, r7, #20
 8000c38:	2200      	movs	r2, #0
 8000c3a:	601a      	str	r2, [r3, #0]
 8000c3c:	605a      	str	r2, [r3, #4]
 8000c3e:	609a      	str	r2, [r3, #8]
 8000c40:	60da      	str	r2, [r3, #12]
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	681b      	ldr	r3, [r3, #0]
 8000c46:	4a1d      	ldr	r2, [pc, #116]	@ (8000cbc <HAL_I2C_MspInit+0x90>)
 8000c48:	4293      	cmp	r3, r2
 8000c4a:	d132      	bne.n	8000cb2 <HAL_I2C_MspInit+0x86>
 8000c4c:	4b1c      	ldr	r3, [pc, #112]	@ (8000cc0 <HAL_I2C_MspInit+0x94>)
 8000c4e:	699b      	ldr	r3, [r3, #24]
 8000c50:	4a1b      	ldr	r2, [pc, #108]	@ (8000cc0 <HAL_I2C_MspInit+0x94>)
 8000c52:	f043 0308 	orr.w	r3, r3, #8
 8000c56:	6193      	str	r3, [r2, #24]
 8000c58:	4b19      	ldr	r3, [pc, #100]	@ (8000cc0 <HAL_I2C_MspInit+0x94>)
 8000c5a:	699b      	ldr	r3, [r3, #24]
 8000c5c:	f003 0308 	and.w	r3, r3, #8
 8000c60:	613b      	str	r3, [r7, #16]
 8000c62:	693b      	ldr	r3, [r7, #16]
 8000c64:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8000c68:	617b      	str	r3, [r7, #20]
 8000c6a:	2312      	movs	r3, #18
 8000c6c:	61bb      	str	r3, [r7, #24]
 8000c6e:	2303      	movs	r3, #3
 8000c70:	623b      	str	r3, [r7, #32]
 8000c72:	f107 0314 	add.w	r3, r7, #20
 8000c76:	4619      	mov	r1, r3
 8000c78:	4812      	ldr	r0, [pc, #72]	@ (8000cc4 <HAL_I2C_MspInit+0x98>)
 8000c7a:	f000 fb15 	bl	80012a8 <HAL_GPIO_Init>
 8000c7e:	4b12      	ldr	r3, [pc, #72]	@ (8000cc8 <HAL_I2C_MspInit+0x9c>)
 8000c80:	685b      	ldr	r3, [r3, #4]
 8000c82:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c86:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 8000c8a:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c8e:	f043 0302 	orr.w	r3, r3, #2
 8000c92:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c94:	4a0c      	ldr	r2, [pc, #48]	@ (8000cc8 <HAL_I2C_MspInit+0x9c>)
 8000c96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c98:	6053      	str	r3, [r2, #4]
 8000c9a:	4b09      	ldr	r3, [pc, #36]	@ (8000cc0 <HAL_I2C_MspInit+0x94>)
 8000c9c:	69db      	ldr	r3, [r3, #28]
 8000c9e:	4a08      	ldr	r2, [pc, #32]	@ (8000cc0 <HAL_I2C_MspInit+0x94>)
 8000ca0:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000ca4:	61d3      	str	r3, [r2, #28]
 8000ca6:	4b06      	ldr	r3, [pc, #24]	@ (8000cc0 <HAL_I2C_MspInit+0x94>)
 8000ca8:	69db      	ldr	r3, [r3, #28]
 8000caa:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000cae:	60fb      	str	r3, [r7, #12]
 8000cb0:	68fb      	ldr	r3, [r7, #12]
 8000cb2:	bf00      	nop
 8000cb4:	3728      	adds	r7, #40	@ 0x28
 8000cb6:	46bd      	mov	sp, r7
 8000cb8:	bd80      	pop	{r7, pc}
 8000cba:	bf00      	nop
 8000cbc:	40005400 	.word	0x40005400
 8000cc0:	40021000 	.word	0x40021000
 8000cc4:	40010c00 	.word	0x40010c00
 8000cc8:	40010000 	.word	0x40010000

08000ccc <HAL_TIM_Base_MspInit>:
 8000ccc:	b480      	push	{r7}
 8000cce:	b085      	sub	sp, #20
 8000cd0:	af00      	add	r7, sp, #0
 8000cd2:	6078      	str	r0, [r7, #4]
 8000cd4:	687b      	ldr	r3, [r7, #4]
 8000cd6:	681b      	ldr	r3, [r3, #0]
 8000cd8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000cdc:	d10b      	bne.n	8000cf6 <HAL_TIM_Base_MspInit+0x2a>
 8000cde:	4b08      	ldr	r3, [pc, #32]	@ (8000d00 <HAL_TIM_Base_MspInit+0x34>)
 8000ce0:	69db      	ldr	r3, [r3, #28]
 8000ce2:	4a07      	ldr	r2, [pc, #28]	@ (8000d00 <HAL_TIM_Base_MspInit+0x34>)
 8000ce4:	f043 0301 	orr.w	r3, r3, #1
 8000ce8:	61d3      	str	r3, [r2, #28]
 8000cea:	4b05      	ldr	r3, [pc, #20]	@ (8000d00 <HAL_TIM_Base_MspInit+0x34>)
 8000cec:	69db      	ldr	r3, [r3, #28]
 8000cee:	f003 0301 	and.w	r3, r3, #1
 8000cf2:	60fb      	str	r3, [r7, #12]
 8000cf4:	68fb      	ldr	r3, [r7, #12]
 8000cf6:	bf00      	nop
 8000cf8:	3714      	adds	r7, #20
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	bc80      	pop	{r7}
 8000cfe:	4770      	bx	lr
 8000d00:	40021000 	.word	0x40021000

08000d04 <HAL_UART_MspInit>:
 8000d04:	b580      	push	{r7, lr}
 8000d06:	b088      	sub	sp, #32
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	6078      	str	r0, [r7, #4]
 8000d0c:	f107 0310 	add.w	r3, r7, #16
 8000d10:	2200      	movs	r2, #0
 8000d12:	601a      	str	r2, [r3, #0]
 8000d14:	605a      	str	r2, [r3, #4]
 8000d16:	609a      	str	r2, [r3, #8]
 8000d18:	60da      	str	r2, [r3, #12]
 8000d1a:	687b      	ldr	r3, [r7, #4]
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	4a15      	ldr	r2, [pc, #84]	@ (8000d74 <HAL_UART_MspInit+0x70>)
 8000d20:	4293      	cmp	r3, r2
 8000d22:	d123      	bne.n	8000d6c <HAL_UART_MspInit+0x68>
 8000d24:	4b14      	ldr	r3, [pc, #80]	@ (8000d78 <HAL_UART_MspInit+0x74>)
 8000d26:	69db      	ldr	r3, [r3, #28]
 8000d28:	4a13      	ldr	r2, [pc, #76]	@ (8000d78 <HAL_UART_MspInit+0x74>)
 8000d2a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000d2e:	61d3      	str	r3, [r2, #28]
 8000d30:	4b11      	ldr	r3, [pc, #68]	@ (8000d78 <HAL_UART_MspInit+0x74>)
 8000d32:	69db      	ldr	r3, [r3, #28]
 8000d34:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000d38:	60fb      	str	r3, [r7, #12]
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	4b0e      	ldr	r3, [pc, #56]	@ (8000d78 <HAL_UART_MspInit+0x74>)
 8000d3e:	699b      	ldr	r3, [r3, #24]
 8000d40:	4a0d      	ldr	r2, [pc, #52]	@ (8000d78 <HAL_UART_MspInit+0x74>)
 8000d42:	f043 0304 	orr.w	r3, r3, #4
 8000d46:	6193      	str	r3, [r2, #24]
 8000d48:	4b0b      	ldr	r3, [pc, #44]	@ (8000d78 <HAL_UART_MspInit+0x74>)
 8000d4a:	699b      	ldr	r3, [r3, #24]
 8000d4c:	f003 0304 	and.w	r3, r3, #4
 8000d50:	60bb      	str	r3, [r7, #8]
 8000d52:	68bb      	ldr	r3, [r7, #8]
 8000d54:	230c      	movs	r3, #12
 8000d56:	613b      	str	r3, [r7, #16]
 8000d58:	2302      	movs	r3, #2
 8000d5a:	617b      	str	r3, [r7, #20]
 8000d5c:	2302      	movs	r3, #2
 8000d5e:	61fb      	str	r3, [r7, #28]
 8000d60:	f107 0310 	add.w	r3, r7, #16
 8000d64:	4619      	mov	r1, r3
 8000d66:	4805      	ldr	r0, [pc, #20]	@ (8000d7c <HAL_UART_MspInit+0x78>)
 8000d68:	f000 fa9e 	bl	80012a8 <HAL_GPIO_Init>
 8000d6c:	bf00      	nop
 8000d6e:	3720      	adds	r7, #32
 8000d70:	46bd      	mov	sp, r7
 8000d72:	bd80      	pop	{r7, pc}
 8000d74:	40004400 	.word	0x40004400
 8000d78:	40021000 	.word	0x40021000
 8000d7c:	40010800 	.word	0x40010800

08000d80 <NMI_Handler>:
 8000d80:	b480      	push	{r7}
 8000d82:	af00      	add	r7, sp, #0
 8000d84:	bf00      	nop
 8000d86:	e7fd      	b.n	8000d84 <NMI_Handler+0x4>

08000d88 <HardFault_Handler>:
 8000d88:	b480      	push	{r7}
 8000d8a:	af00      	add	r7, sp, #0
 8000d8c:	bf00      	nop
 8000d8e:	e7fd      	b.n	8000d8c <HardFault_Handler+0x4>

08000d90 <MemManage_Handler>:
 8000d90:	b480      	push	{r7}
 8000d92:	af00      	add	r7, sp, #0
 8000d94:	bf00      	nop
 8000d96:	e7fd      	b.n	8000d94 <MemManage_Handler+0x4>

08000d98 <BusFault_Handler>:
 8000d98:	b480      	push	{r7}
 8000d9a:	af00      	add	r7, sp, #0
 8000d9c:	bf00      	nop
 8000d9e:	e7fd      	b.n	8000d9c <BusFault_Handler+0x4>

08000da0 <UsageFault_Handler>:
 8000da0:	b480      	push	{r7}
 8000da2:	af00      	add	r7, sp, #0
 8000da4:	bf00      	nop
 8000da6:	e7fd      	b.n	8000da4 <UsageFault_Handler+0x4>

08000da8 <SVC_Handler>:
 8000da8:	b480      	push	{r7}
 8000daa:	af00      	add	r7, sp, #0
 8000dac:	bf00      	nop
 8000dae:	46bd      	mov	sp, r7
 8000db0:	bc80      	pop	{r7}
 8000db2:	4770      	bx	lr

08000db4 <DebugMon_Handler>:
 8000db4:	b480      	push	{r7}
 8000db6:	af00      	add	r7, sp, #0
 8000db8:	bf00      	nop
 8000dba:	46bd      	mov	sp, r7
 8000dbc:	bc80      	pop	{r7}
 8000dbe:	4770      	bx	lr

08000dc0 <PendSV_Handler>:
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
 8000dc4:	bf00      	nop
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	bc80      	pop	{r7}
 8000dca:	4770      	bx	lr

08000dcc <SysTick_Handler>:
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	af00      	add	r7, sp, #0
 8000dd0:	f000 f91c 	bl	800100c <HAL_IncTick>
 8000dd4:	bf00      	nop
 8000dd6:	bd80      	pop	{r7, pc}

08000dd8 <EXTI15_10_IRQHandler>:
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	af00      	add	r7, sp, #0
 8000ddc:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8000de0:	f000 fc16 	bl	8001610 <HAL_GPIO_EXTI_IRQHandler>
 8000de4:	bf00      	nop
 8000de6:	bd80      	pop	{r7, pc}

08000de8 <_read>:
 8000de8:	b580      	push	{r7, lr}
 8000dea:	b086      	sub	sp, #24
 8000dec:	af00      	add	r7, sp, #0
 8000dee:	60f8      	str	r0, [r7, #12]
 8000df0:	60b9      	str	r1, [r7, #8]
 8000df2:	607a      	str	r2, [r7, #4]
 8000df4:	2300      	movs	r3, #0
 8000df6:	617b      	str	r3, [r7, #20]
 8000df8:	e00a      	b.n	8000e10 <_read+0x28>
 8000dfa:	f3af 8000 	nop.w
 8000dfe:	4601      	mov	r1, r0
 8000e00:	68bb      	ldr	r3, [r7, #8]
 8000e02:	1c5a      	adds	r2, r3, #1
 8000e04:	60ba      	str	r2, [r7, #8]
 8000e06:	b2ca      	uxtb	r2, r1
 8000e08:	701a      	strb	r2, [r3, #0]
 8000e0a:	697b      	ldr	r3, [r7, #20]
 8000e0c:	3301      	adds	r3, #1
 8000e0e:	617b      	str	r3, [r7, #20]
 8000e10:	697a      	ldr	r2, [r7, #20]
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	429a      	cmp	r2, r3
 8000e16:	dbf0      	blt.n	8000dfa <_read+0x12>
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	3718      	adds	r7, #24
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}

08000e22 <_write>:
 8000e22:	b580      	push	{r7, lr}
 8000e24:	b086      	sub	sp, #24
 8000e26:	af00      	add	r7, sp, #0
 8000e28:	60f8      	str	r0, [r7, #12]
 8000e2a:	60b9      	str	r1, [r7, #8]
 8000e2c:	607a      	str	r2, [r7, #4]
 8000e2e:	2300      	movs	r3, #0
 8000e30:	617b      	str	r3, [r7, #20]
 8000e32:	e009      	b.n	8000e48 <_write+0x26>
 8000e34:	68bb      	ldr	r3, [r7, #8]
 8000e36:	1c5a      	adds	r2, r3, #1
 8000e38:	60ba      	str	r2, [r7, #8]
 8000e3a:	781b      	ldrb	r3, [r3, #0]
 8000e3c:	4618      	mov	r0, r3
 8000e3e:	f7ff fca1 	bl	8000784 <__io_putchar>
 8000e42:	697b      	ldr	r3, [r7, #20]
 8000e44:	3301      	adds	r3, #1
 8000e46:	617b      	str	r3, [r7, #20]
 8000e48:	697a      	ldr	r2, [r7, #20]
 8000e4a:	687b      	ldr	r3, [r7, #4]
 8000e4c:	429a      	cmp	r2, r3
 8000e4e:	dbf1      	blt.n	8000e34 <_write+0x12>
 8000e50:	687b      	ldr	r3, [r7, #4]
 8000e52:	4618      	mov	r0, r3
 8000e54:	3718      	adds	r7, #24
 8000e56:	46bd      	mov	sp, r7
 8000e58:	bd80      	pop	{r7, pc}

08000e5a <_close>:
 8000e5a:	b480      	push	{r7}
 8000e5c:	b083      	sub	sp, #12
 8000e5e:	af00      	add	r7, sp, #0
 8000e60:	6078      	str	r0, [r7, #4]
 8000e62:	f04f 33ff 	mov.w	r3, #4294967295
 8000e66:	4618      	mov	r0, r3
 8000e68:	370c      	adds	r7, #12
 8000e6a:	46bd      	mov	sp, r7
 8000e6c:	bc80      	pop	{r7}
 8000e6e:	4770      	bx	lr

08000e70 <_fstat>:
 8000e70:	b480      	push	{r7}
 8000e72:	b083      	sub	sp, #12
 8000e74:	af00      	add	r7, sp, #0
 8000e76:	6078      	str	r0, [r7, #4]
 8000e78:	6039      	str	r1, [r7, #0]
 8000e7a:	683b      	ldr	r3, [r7, #0]
 8000e7c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000e80:	605a      	str	r2, [r3, #4]
 8000e82:	2300      	movs	r3, #0
 8000e84:	4618      	mov	r0, r3
 8000e86:	370c      	adds	r7, #12
 8000e88:	46bd      	mov	sp, r7
 8000e8a:	bc80      	pop	{r7}
 8000e8c:	4770      	bx	lr

08000e8e <_isatty>:
 8000e8e:	b480      	push	{r7}
 8000e90:	b083      	sub	sp, #12
 8000e92:	af00      	add	r7, sp, #0
 8000e94:	6078      	str	r0, [r7, #4]
 8000e96:	2301      	movs	r3, #1
 8000e98:	4618      	mov	r0, r3
 8000e9a:	370c      	adds	r7, #12
 8000e9c:	46bd      	mov	sp, r7
 8000e9e:	bc80      	pop	{r7}
 8000ea0:	4770      	bx	lr

08000ea2 <_lseek>:
 8000ea2:	b480      	push	{r7}
 8000ea4:	b085      	sub	sp, #20
 8000ea6:	af00      	add	r7, sp, #0
 8000ea8:	60f8      	str	r0, [r7, #12]
 8000eaa:	60b9      	str	r1, [r7, #8]
 8000eac:	607a      	str	r2, [r7, #4]
 8000eae:	2300      	movs	r3, #0
 8000eb0:	4618      	mov	r0, r3
 8000eb2:	3714      	adds	r7, #20
 8000eb4:	46bd      	mov	sp, r7
 8000eb6:	bc80      	pop	{r7}
 8000eb8:	4770      	bx	lr
	...

08000ebc <_sbrk>:
 8000ebc:	b580      	push	{r7, lr}
 8000ebe:	b086      	sub	sp, #24
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	6078      	str	r0, [r7, #4]
 8000ec4:	4a14      	ldr	r2, [pc, #80]	@ (8000f18 <_sbrk+0x5c>)
 8000ec6:	4b15      	ldr	r3, [pc, #84]	@ (8000f1c <_sbrk+0x60>)
 8000ec8:	1ad3      	subs	r3, r2, r3
 8000eca:	617b      	str	r3, [r7, #20]
 8000ecc:	697b      	ldr	r3, [r7, #20]
 8000ece:	613b      	str	r3, [r7, #16]
 8000ed0:	4b13      	ldr	r3, [pc, #76]	@ (8000f20 <_sbrk+0x64>)
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d102      	bne.n	8000ede <_sbrk+0x22>
 8000ed8:	4b11      	ldr	r3, [pc, #68]	@ (8000f20 <_sbrk+0x64>)
 8000eda:	4a12      	ldr	r2, [pc, #72]	@ (8000f24 <_sbrk+0x68>)
 8000edc:	601a      	str	r2, [r3, #0]
 8000ede:	4b10      	ldr	r3, [pc, #64]	@ (8000f20 <_sbrk+0x64>)
 8000ee0:	681a      	ldr	r2, [r3, #0]
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	4413      	add	r3, r2
 8000ee6:	693a      	ldr	r2, [r7, #16]
 8000ee8:	429a      	cmp	r2, r3
 8000eea:	d207      	bcs.n	8000efc <_sbrk+0x40>
 8000eec:	f002 fcee 	bl	80038cc <__errno>
 8000ef0:	4603      	mov	r3, r0
 8000ef2:	220c      	movs	r2, #12
 8000ef4:	601a      	str	r2, [r3, #0]
 8000ef6:	f04f 33ff 	mov.w	r3, #4294967295
 8000efa:	e009      	b.n	8000f10 <_sbrk+0x54>
 8000efc:	4b08      	ldr	r3, [pc, #32]	@ (8000f20 <_sbrk+0x64>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	60fb      	str	r3, [r7, #12]
 8000f02:	4b07      	ldr	r3, [pc, #28]	@ (8000f20 <_sbrk+0x64>)
 8000f04:	681a      	ldr	r2, [r3, #0]
 8000f06:	687b      	ldr	r3, [r7, #4]
 8000f08:	4413      	add	r3, r2
 8000f0a:	4a05      	ldr	r2, [pc, #20]	@ (8000f20 <_sbrk+0x64>)
 8000f0c:	6013      	str	r3, [r2, #0]
 8000f0e:	68fb      	ldr	r3, [r7, #12]
 8000f10:	4618      	mov	r0, r3
 8000f12:	3718      	adds	r7, #24
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bd80      	pop	{r7, pc}
 8000f18:	20005000 	.word	0x20005000
 8000f1c:	00000400 	.word	0x00000400
 8000f20:	200002a4 	.word	0x200002a4
 8000f24:	200003f8 	.word	0x200003f8

08000f28 <SystemInit>:
 8000f28:	b480      	push	{r7}
 8000f2a:	af00      	add	r7, sp, #0
 8000f2c:	bf00      	nop
 8000f2e:	46bd      	mov	sp, r7
 8000f30:	bc80      	pop	{r7}
 8000f32:	4770      	bx	lr

08000f34 <Reset_Handler>:
 8000f34:	f7ff fff8 	bl	8000f28 <SystemInit>
 8000f38:	480b      	ldr	r0, [pc, #44]	@ (8000f68 <LoopFillZerobss+0xe>)
 8000f3a:	490c      	ldr	r1, [pc, #48]	@ (8000f6c <LoopFillZerobss+0x12>)
 8000f3c:	4a0c      	ldr	r2, [pc, #48]	@ (8000f70 <LoopFillZerobss+0x16>)
 8000f3e:	2300      	movs	r3, #0
 8000f40:	e002      	b.n	8000f48 <LoopCopyDataInit>

08000f42 <CopyDataInit>:
 8000f42:	58d4      	ldr	r4, [r2, r3]
 8000f44:	50c4      	str	r4, [r0, r3]
 8000f46:	3304      	adds	r3, #4

08000f48 <LoopCopyDataInit>:
 8000f48:	18c4      	adds	r4, r0, r3
 8000f4a:	428c      	cmp	r4, r1
 8000f4c:	d3f9      	bcc.n	8000f42 <CopyDataInit>
 8000f4e:	4a09      	ldr	r2, [pc, #36]	@ (8000f74 <LoopFillZerobss+0x1a>)
 8000f50:	4c09      	ldr	r4, [pc, #36]	@ (8000f78 <LoopFillZerobss+0x1e>)
 8000f52:	2300      	movs	r3, #0
 8000f54:	e001      	b.n	8000f5a <LoopFillZerobss>

08000f56 <FillZerobss>:
 8000f56:	6013      	str	r3, [r2, #0]
 8000f58:	3204      	adds	r2, #4

08000f5a <LoopFillZerobss>:
 8000f5a:	42a2      	cmp	r2, r4
 8000f5c:	d3fb      	bcc.n	8000f56 <FillZerobss>
 8000f5e:	f002 fcbb 	bl	80038d8 <__libc_init_array>
 8000f62:	f7ff fc2d 	bl	80007c0 <main>
 8000f66:	4770      	bx	lr
 8000f68:	20000000 	.word	0x20000000
 8000f6c:	20000068 	.word	0x20000068
 8000f70:	080047f4 	.word	0x080047f4
 8000f74:	20000068 	.word	0x20000068
 8000f78:	200003f8 	.word	0x200003f8

08000f7c <ADC1_2_IRQHandler>:
 8000f7c:	e7fe      	b.n	8000f7c <ADC1_2_IRQHandler>
	...

08000f80 <HAL_Init>:
 8000f80:	b580      	push	{r7, lr}
 8000f82:	af00      	add	r7, sp, #0
 8000f84:	4b08      	ldr	r3, [pc, #32]	@ (8000fa8 <HAL_Init+0x28>)
 8000f86:	681b      	ldr	r3, [r3, #0]
 8000f88:	4a07      	ldr	r2, [pc, #28]	@ (8000fa8 <HAL_Init+0x28>)
 8000f8a:	f043 0310 	orr.w	r3, r3, #16
 8000f8e:	6013      	str	r3, [r2, #0]
 8000f90:	2003      	movs	r0, #3
 8000f92:	f000 f947 	bl	8001224 <HAL_NVIC_SetPriorityGrouping>
 8000f96:	2000      	movs	r0, #0
 8000f98:	f000 f808 	bl	8000fac <HAL_InitTick>
 8000f9c:	f7ff fe14 	bl	8000bc8 <HAL_MspInit>
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	4618      	mov	r0, r3
 8000fa4:	bd80      	pop	{r7, pc}
 8000fa6:	bf00      	nop
 8000fa8:	40022000 	.word	0x40022000

08000fac <HAL_InitTick>:
 8000fac:	b580      	push	{r7, lr}
 8000fae:	b082      	sub	sp, #8
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	6078      	str	r0, [r7, #4]
 8000fb4:	4b12      	ldr	r3, [pc, #72]	@ (8001000 <HAL_InitTick+0x54>)
 8000fb6:	681a      	ldr	r2, [r3, #0]
 8000fb8:	4b12      	ldr	r3, [pc, #72]	@ (8001004 <HAL_InitTick+0x58>)
 8000fba:	781b      	ldrb	r3, [r3, #0]
 8000fbc:	4619      	mov	r1, r3
 8000fbe:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000fc2:	fbb3 f3f1 	udiv	r3, r3, r1
 8000fc6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000fca:	4618      	mov	r0, r3
 8000fcc:	f000 f95f 	bl	800128e <HAL_SYSTICK_Config>
 8000fd0:	4603      	mov	r3, r0
 8000fd2:	2b00      	cmp	r3, #0
 8000fd4:	d001      	beq.n	8000fda <HAL_InitTick+0x2e>
 8000fd6:	2301      	movs	r3, #1
 8000fd8:	e00e      	b.n	8000ff8 <HAL_InitTick+0x4c>
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	2b0f      	cmp	r3, #15
 8000fde:	d80a      	bhi.n	8000ff6 <HAL_InitTick+0x4a>
 8000fe0:	2200      	movs	r2, #0
 8000fe2:	6879      	ldr	r1, [r7, #4]
 8000fe4:	f04f 30ff 	mov.w	r0, #4294967295
 8000fe8:	f000 f927 	bl	800123a <HAL_NVIC_SetPriority>
 8000fec:	4a06      	ldr	r2, [pc, #24]	@ (8001008 <HAL_InitTick+0x5c>)
 8000fee:	687b      	ldr	r3, [r7, #4]
 8000ff0:	6013      	str	r3, [r2, #0]
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	e000      	b.n	8000ff8 <HAL_InitTick+0x4c>
 8000ff6:	2301      	movs	r3, #1
 8000ff8:	4618      	mov	r0, r3
 8000ffa:	3708      	adds	r7, #8
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	bd80      	pop	{r7, pc}
 8001000:	20000000 	.word	0x20000000
 8001004:	20000008 	.word	0x20000008
 8001008:	20000004 	.word	0x20000004

0800100c <HAL_IncTick>:
 800100c:	b480      	push	{r7}
 800100e:	af00      	add	r7, sp, #0
 8001010:	4b05      	ldr	r3, [pc, #20]	@ (8001028 <HAL_IncTick+0x1c>)
 8001012:	781b      	ldrb	r3, [r3, #0]
 8001014:	461a      	mov	r2, r3
 8001016:	4b05      	ldr	r3, [pc, #20]	@ (800102c <HAL_IncTick+0x20>)
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	4413      	add	r3, r2
 800101c:	4a03      	ldr	r2, [pc, #12]	@ (800102c <HAL_IncTick+0x20>)
 800101e:	6013      	str	r3, [r2, #0]
 8001020:	bf00      	nop
 8001022:	46bd      	mov	sp, r7
 8001024:	bc80      	pop	{r7}
 8001026:	4770      	bx	lr
 8001028:	20000008 	.word	0x20000008
 800102c:	200002a8 	.word	0x200002a8

08001030 <HAL_GetTick>:
 8001030:	b480      	push	{r7}
 8001032:	af00      	add	r7, sp, #0
 8001034:	4b02      	ldr	r3, [pc, #8]	@ (8001040 <HAL_GetTick+0x10>)
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	4618      	mov	r0, r3
 800103a:	46bd      	mov	sp, r7
 800103c:	bc80      	pop	{r7}
 800103e:	4770      	bx	lr
 8001040:	200002a8 	.word	0x200002a8

08001044 <HAL_Delay>:
 8001044:	b580      	push	{r7, lr}
 8001046:	b084      	sub	sp, #16
 8001048:	af00      	add	r7, sp, #0
 800104a:	6078      	str	r0, [r7, #4]
 800104c:	f7ff fff0 	bl	8001030 <HAL_GetTick>
 8001050:	60b8      	str	r0, [r7, #8]
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	60fb      	str	r3, [r7, #12]
 8001056:	68fb      	ldr	r3, [r7, #12]
 8001058:	f1b3 3fff 	cmp.w	r3, #4294967295
 800105c:	d005      	beq.n	800106a <HAL_Delay+0x26>
 800105e:	4b0a      	ldr	r3, [pc, #40]	@ (8001088 <HAL_Delay+0x44>)
 8001060:	781b      	ldrb	r3, [r3, #0]
 8001062:	461a      	mov	r2, r3
 8001064:	68fb      	ldr	r3, [r7, #12]
 8001066:	4413      	add	r3, r2
 8001068:	60fb      	str	r3, [r7, #12]
 800106a:	bf00      	nop
 800106c:	f7ff ffe0 	bl	8001030 <HAL_GetTick>
 8001070:	4602      	mov	r2, r0
 8001072:	68bb      	ldr	r3, [r7, #8]
 8001074:	1ad3      	subs	r3, r2, r3
 8001076:	68fa      	ldr	r2, [r7, #12]
 8001078:	429a      	cmp	r2, r3
 800107a:	d8f7      	bhi.n	800106c <HAL_Delay+0x28>
 800107c:	bf00      	nop
 800107e:	bf00      	nop
 8001080:	3710      	adds	r7, #16
 8001082:	46bd      	mov	sp, r7
 8001084:	bd80      	pop	{r7, pc}
 8001086:	bf00      	nop
 8001088:	20000008 	.word	0x20000008

0800108c <__NVIC_SetPriorityGrouping>:
 800108c:	b480      	push	{r7}
 800108e:	b085      	sub	sp, #20
 8001090:	af00      	add	r7, sp, #0
 8001092:	6078      	str	r0, [r7, #4]
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	f003 0307 	and.w	r3, r3, #7
 800109a:	60fb      	str	r3, [r7, #12]
 800109c:	4b0c      	ldr	r3, [pc, #48]	@ (80010d0 <__NVIC_SetPriorityGrouping+0x44>)
 800109e:	68db      	ldr	r3, [r3, #12]
 80010a0:	60bb      	str	r3, [r7, #8]
 80010a2:	68ba      	ldr	r2, [r7, #8]
 80010a4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80010a8:	4013      	ands	r3, r2
 80010aa:	60bb      	str	r3, [r7, #8]
 80010ac:	68fb      	ldr	r3, [r7, #12]
 80010ae:	021a      	lsls	r2, r3, #8
 80010b0:	68bb      	ldr	r3, [r7, #8]
 80010b2:	4313      	orrs	r3, r2
 80010b4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80010b8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80010bc:	60bb      	str	r3, [r7, #8]
 80010be:	4a04      	ldr	r2, [pc, #16]	@ (80010d0 <__NVIC_SetPriorityGrouping+0x44>)
 80010c0:	68bb      	ldr	r3, [r7, #8]
 80010c2:	60d3      	str	r3, [r2, #12]
 80010c4:	bf00      	nop
 80010c6:	3714      	adds	r7, #20
 80010c8:	46bd      	mov	sp, r7
 80010ca:	bc80      	pop	{r7}
 80010cc:	4770      	bx	lr
 80010ce:	bf00      	nop
 80010d0:	e000ed00 	.word	0xe000ed00

080010d4 <__NVIC_GetPriorityGrouping>:
 80010d4:	b480      	push	{r7}
 80010d6:	af00      	add	r7, sp, #0
 80010d8:	4b04      	ldr	r3, [pc, #16]	@ (80010ec <__NVIC_GetPriorityGrouping+0x18>)
 80010da:	68db      	ldr	r3, [r3, #12]
 80010dc:	0a1b      	lsrs	r3, r3, #8
 80010de:	f003 0307 	and.w	r3, r3, #7
 80010e2:	4618      	mov	r0, r3
 80010e4:	46bd      	mov	sp, r7
 80010e6:	bc80      	pop	{r7}
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop
 80010ec:	e000ed00 	.word	0xe000ed00

080010f0 <__NVIC_EnableIRQ>:
 80010f0:	b480      	push	{r7}
 80010f2:	b083      	sub	sp, #12
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	4603      	mov	r3, r0
 80010f8:	71fb      	strb	r3, [r7, #7]
 80010fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010fe:	2b00      	cmp	r3, #0
 8001100:	db0b      	blt.n	800111a <__NVIC_EnableIRQ+0x2a>
 8001102:	79fb      	ldrb	r3, [r7, #7]
 8001104:	f003 021f 	and.w	r2, r3, #31
 8001108:	4906      	ldr	r1, [pc, #24]	@ (8001124 <__NVIC_EnableIRQ+0x34>)
 800110a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800110e:	095b      	lsrs	r3, r3, #5
 8001110:	2001      	movs	r0, #1
 8001112:	fa00 f202 	lsl.w	r2, r0, r2
 8001116:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800111a:	bf00      	nop
 800111c:	370c      	adds	r7, #12
 800111e:	46bd      	mov	sp, r7
 8001120:	bc80      	pop	{r7}
 8001122:	4770      	bx	lr
 8001124:	e000e100 	.word	0xe000e100

08001128 <__NVIC_SetPriority>:
 8001128:	b480      	push	{r7}
 800112a:	b083      	sub	sp, #12
 800112c:	af00      	add	r7, sp, #0
 800112e:	4603      	mov	r3, r0
 8001130:	6039      	str	r1, [r7, #0]
 8001132:	71fb      	strb	r3, [r7, #7]
 8001134:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001138:	2b00      	cmp	r3, #0
 800113a:	db0a      	blt.n	8001152 <__NVIC_SetPriority+0x2a>
 800113c:	683b      	ldr	r3, [r7, #0]
 800113e:	b2da      	uxtb	r2, r3
 8001140:	490c      	ldr	r1, [pc, #48]	@ (8001174 <__NVIC_SetPriority+0x4c>)
 8001142:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001146:	0112      	lsls	r2, r2, #4
 8001148:	b2d2      	uxtb	r2, r2
 800114a:	440b      	add	r3, r1
 800114c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001150:	e00a      	b.n	8001168 <__NVIC_SetPriority+0x40>
 8001152:	683b      	ldr	r3, [r7, #0]
 8001154:	b2da      	uxtb	r2, r3
 8001156:	4908      	ldr	r1, [pc, #32]	@ (8001178 <__NVIC_SetPriority+0x50>)
 8001158:	79fb      	ldrb	r3, [r7, #7]
 800115a:	f003 030f 	and.w	r3, r3, #15
 800115e:	3b04      	subs	r3, #4
 8001160:	0112      	lsls	r2, r2, #4
 8001162:	b2d2      	uxtb	r2, r2
 8001164:	440b      	add	r3, r1
 8001166:	761a      	strb	r2, [r3, #24]
 8001168:	bf00      	nop
 800116a:	370c      	adds	r7, #12
 800116c:	46bd      	mov	sp, r7
 800116e:	bc80      	pop	{r7}
 8001170:	4770      	bx	lr
 8001172:	bf00      	nop
 8001174:	e000e100 	.word	0xe000e100
 8001178:	e000ed00 	.word	0xe000ed00

0800117c <NVIC_EncodePriority>:
 800117c:	b480      	push	{r7}
 800117e:	b089      	sub	sp, #36	@ 0x24
 8001180:	af00      	add	r7, sp, #0
 8001182:	60f8      	str	r0, [r7, #12]
 8001184:	60b9      	str	r1, [r7, #8]
 8001186:	607a      	str	r2, [r7, #4]
 8001188:	68fb      	ldr	r3, [r7, #12]
 800118a:	f003 0307 	and.w	r3, r3, #7
 800118e:	61fb      	str	r3, [r7, #28]
 8001190:	69fb      	ldr	r3, [r7, #28]
 8001192:	f1c3 0307 	rsb	r3, r3, #7
 8001196:	2b04      	cmp	r3, #4
 8001198:	bf28      	it	cs
 800119a:	2304      	movcs	r3, #4
 800119c:	61bb      	str	r3, [r7, #24]
 800119e:	69fb      	ldr	r3, [r7, #28]
 80011a0:	3304      	adds	r3, #4
 80011a2:	2b06      	cmp	r3, #6
 80011a4:	d902      	bls.n	80011ac <NVIC_EncodePriority+0x30>
 80011a6:	69fb      	ldr	r3, [r7, #28]
 80011a8:	3b03      	subs	r3, #3
 80011aa:	e000      	b.n	80011ae <NVIC_EncodePriority+0x32>
 80011ac:	2300      	movs	r3, #0
 80011ae:	617b      	str	r3, [r7, #20]
 80011b0:	f04f 32ff 	mov.w	r2, #4294967295
 80011b4:	69bb      	ldr	r3, [r7, #24]
 80011b6:	fa02 f303 	lsl.w	r3, r2, r3
 80011ba:	43da      	mvns	r2, r3
 80011bc:	68bb      	ldr	r3, [r7, #8]
 80011be:	401a      	ands	r2, r3
 80011c0:	697b      	ldr	r3, [r7, #20]
 80011c2:	409a      	lsls	r2, r3
 80011c4:	f04f 31ff 	mov.w	r1, #4294967295
 80011c8:	697b      	ldr	r3, [r7, #20]
 80011ca:	fa01 f303 	lsl.w	r3, r1, r3
 80011ce:	43d9      	mvns	r1, r3
 80011d0:	687b      	ldr	r3, [r7, #4]
 80011d2:	400b      	ands	r3, r1
 80011d4:	4313      	orrs	r3, r2
 80011d6:	4618      	mov	r0, r3
 80011d8:	3724      	adds	r7, #36	@ 0x24
 80011da:	46bd      	mov	sp, r7
 80011dc:	bc80      	pop	{r7}
 80011de:	4770      	bx	lr

080011e0 <SysTick_Config>:
 80011e0:	b580      	push	{r7, lr}
 80011e2:	b082      	sub	sp, #8
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	6078      	str	r0, [r7, #4]
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	3b01      	subs	r3, #1
 80011ec:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80011f0:	d301      	bcc.n	80011f6 <SysTick_Config+0x16>
 80011f2:	2301      	movs	r3, #1
 80011f4:	e00f      	b.n	8001216 <SysTick_Config+0x36>
 80011f6:	4a0a      	ldr	r2, [pc, #40]	@ (8001220 <SysTick_Config+0x40>)
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	3b01      	subs	r3, #1
 80011fc:	6053      	str	r3, [r2, #4]
 80011fe:	210f      	movs	r1, #15
 8001200:	f04f 30ff 	mov.w	r0, #4294967295
 8001204:	f7ff ff90 	bl	8001128 <__NVIC_SetPriority>
 8001208:	4b05      	ldr	r3, [pc, #20]	@ (8001220 <SysTick_Config+0x40>)
 800120a:	2200      	movs	r2, #0
 800120c:	609a      	str	r2, [r3, #8]
 800120e:	4b04      	ldr	r3, [pc, #16]	@ (8001220 <SysTick_Config+0x40>)
 8001210:	2207      	movs	r2, #7
 8001212:	601a      	str	r2, [r3, #0]
 8001214:	2300      	movs	r3, #0
 8001216:	4618      	mov	r0, r3
 8001218:	3708      	adds	r7, #8
 800121a:	46bd      	mov	sp, r7
 800121c:	bd80      	pop	{r7, pc}
 800121e:	bf00      	nop
 8001220:	e000e010 	.word	0xe000e010

08001224 <HAL_NVIC_SetPriorityGrouping>:
 8001224:	b580      	push	{r7, lr}
 8001226:	b082      	sub	sp, #8
 8001228:	af00      	add	r7, sp, #0
 800122a:	6078      	str	r0, [r7, #4]
 800122c:	6878      	ldr	r0, [r7, #4]
 800122e:	f7ff ff2d 	bl	800108c <__NVIC_SetPriorityGrouping>
 8001232:	bf00      	nop
 8001234:	3708      	adds	r7, #8
 8001236:	46bd      	mov	sp, r7
 8001238:	bd80      	pop	{r7, pc}

0800123a <HAL_NVIC_SetPriority>:
 800123a:	b580      	push	{r7, lr}
 800123c:	b086      	sub	sp, #24
 800123e:	af00      	add	r7, sp, #0
 8001240:	4603      	mov	r3, r0
 8001242:	60b9      	str	r1, [r7, #8]
 8001244:	607a      	str	r2, [r7, #4]
 8001246:	73fb      	strb	r3, [r7, #15]
 8001248:	2300      	movs	r3, #0
 800124a:	617b      	str	r3, [r7, #20]
 800124c:	f7ff ff42 	bl	80010d4 <__NVIC_GetPriorityGrouping>
 8001250:	6178      	str	r0, [r7, #20]
 8001252:	687a      	ldr	r2, [r7, #4]
 8001254:	68b9      	ldr	r1, [r7, #8]
 8001256:	6978      	ldr	r0, [r7, #20]
 8001258:	f7ff ff90 	bl	800117c <NVIC_EncodePriority>
 800125c:	4602      	mov	r2, r0
 800125e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001262:	4611      	mov	r1, r2
 8001264:	4618      	mov	r0, r3
 8001266:	f7ff ff5f 	bl	8001128 <__NVIC_SetPriority>
 800126a:	bf00      	nop
 800126c:	3718      	adds	r7, #24
 800126e:	46bd      	mov	sp, r7
 8001270:	bd80      	pop	{r7, pc}

08001272 <HAL_NVIC_EnableIRQ>:
 8001272:	b580      	push	{r7, lr}
 8001274:	b082      	sub	sp, #8
 8001276:	af00      	add	r7, sp, #0
 8001278:	4603      	mov	r3, r0
 800127a:	71fb      	strb	r3, [r7, #7]
 800127c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001280:	4618      	mov	r0, r3
 8001282:	f7ff ff35 	bl	80010f0 <__NVIC_EnableIRQ>
 8001286:	bf00      	nop
 8001288:	3708      	adds	r7, #8
 800128a:	46bd      	mov	sp, r7
 800128c:	bd80      	pop	{r7, pc}

0800128e <HAL_SYSTICK_Config>:
 800128e:	b580      	push	{r7, lr}
 8001290:	b082      	sub	sp, #8
 8001292:	af00      	add	r7, sp, #0
 8001294:	6078      	str	r0, [r7, #4]
 8001296:	6878      	ldr	r0, [r7, #4]
 8001298:	f7ff ffa2 	bl	80011e0 <SysTick_Config>
 800129c:	4603      	mov	r3, r0
 800129e:	4618      	mov	r0, r3
 80012a0:	3708      	adds	r7, #8
 80012a2:	46bd      	mov	sp, r7
 80012a4:	bd80      	pop	{r7, pc}
	...

080012a8 <HAL_GPIO_Init>:
 80012a8:	b480      	push	{r7}
 80012aa:	b08b      	sub	sp, #44	@ 0x2c
 80012ac:	af00      	add	r7, sp, #0
 80012ae:	6078      	str	r0, [r7, #4]
 80012b0:	6039      	str	r1, [r7, #0]
 80012b2:	2300      	movs	r3, #0
 80012b4:	627b      	str	r3, [r7, #36]	@ 0x24
 80012b6:	2300      	movs	r3, #0
 80012b8:	623b      	str	r3, [r7, #32]
 80012ba:	e169      	b.n	8001590 <HAL_GPIO_Init+0x2e8>
 80012bc:	2201      	movs	r2, #1
 80012be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80012c0:	fa02 f303 	lsl.w	r3, r2, r3
 80012c4:	61fb      	str	r3, [r7, #28]
 80012c6:	683b      	ldr	r3, [r7, #0]
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	69fa      	ldr	r2, [r7, #28]
 80012cc:	4013      	ands	r3, r2
 80012ce:	61bb      	str	r3, [r7, #24]
 80012d0:	69ba      	ldr	r2, [r7, #24]
 80012d2:	69fb      	ldr	r3, [r7, #28]
 80012d4:	429a      	cmp	r2, r3
 80012d6:	f040 8158 	bne.w	800158a <HAL_GPIO_Init+0x2e2>
 80012da:	683b      	ldr	r3, [r7, #0]
 80012dc:	685b      	ldr	r3, [r3, #4]
 80012de:	4a9a      	ldr	r2, [pc, #616]	@ (8001548 <HAL_GPIO_Init+0x2a0>)
 80012e0:	4293      	cmp	r3, r2
 80012e2:	d05e      	beq.n	80013a2 <HAL_GPIO_Init+0xfa>
 80012e4:	4a98      	ldr	r2, [pc, #608]	@ (8001548 <HAL_GPIO_Init+0x2a0>)
 80012e6:	4293      	cmp	r3, r2
 80012e8:	d875      	bhi.n	80013d6 <HAL_GPIO_Init+0x12e>
 80012ea:	4a98      	ldr	r2, [pc, #608]	@ (800154c <HAL_GPIO_Init+0x2a4>)
 80012ec:	4293      	cmp	r3, r2
 80012ee:	d058      	beq.n	80013a2 <HAL_GPIO_Init+0xfa>
 80012f0:	4a96      	ldr	r2, [pc, #600]	@ (800154c <HAL_GPIO_Init+0x2a4>)
 80012f2:	4293      	cmp	r3, r2
 80012f4:	d86f      	bhi.n	80013d6 <HAL_GPIO_Init+0x12e>
 80012f6:	4a96      	ldr	r2, [pc, #600]	@ (8001550 <HAL_GPIO_Init+0x2a8>)
 80012f8:	4293      	cmp	r3, r2
 80012fa:	d052      	beq.n	80013a2 <HAL_GPIO_Init+0xfa>
 80012fc:	4a94      	ldr	r2, [pc, #592]	@ (8001550 <HAL_GPIO_Init+0x2a8>)
 80012fe:	4293      	cmp	r3, r2
 8001300:	d869      	bhi.n	80013d6 <HAL_GPIO_Init+0x12e>
 8001302:	4a94      	ldr	r2, [pc, #592]	@ (8001554 <HAL_GPIO_Init+0x2ac>)
 8001304:	4293      	cmp	r3, r2
 8001306:	d04c      	beq.n	80013a2 <HAL_GPIO_Init+0xfa>
 8001308:	4a92      	ldr	r2, [pc, #584]	@ (8001554 <HAL_GPIO_Init+0x2ac>)
 800130a:	4293      	cmp	r3, r2
 800130c:	d863      	bhi.n	80013d6 <HAL_GPIO_Init+0x12e>
 800130e:	4a92      	ldr	r2, [pc, #584]	@ (8001558 <HAL_GPIO_Init+0x2b0>)
 8001310:	4293      	cmp	r3, r2
 8001312:	d046      	beq.n	80013a2 <HAL_GPIO_Init+0xfa>
 8001314:	4a90      	ldr	r2, [pc, #576]	@ (8001558 <HAL_GPIO_Init+0x2b0>)
 8001316:	4293      	cmp	r3, r2
 8001318:	d85d      	bhi.n	80013d6 <HAL_GPIO_Init+0x12e>
 800131a:	2b12      	cmp	r3, #18
 800131c:	d82a      	bhi.n	8001374 <HAL_GPIO_Init+0xcc>
 800131e:	2b12      	cmp	r3, #18
 8001320:	d859      	bhi.n	80013d6 <HAL_GPIO_Init+0x12e>
 8001322:	a201      	add	r2, pc, #4	@ (adr r2, 8001328 <HAL_GPIO_Init+0x80>)
 8001324:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001328:	080013a3 	.word	0x080013a3
 800132c:	0800137d 	.word	0x0800137d
 8001330:	0800138f 	.word	0x0800138f
 8001334:	080013d1 	.word	0x080013d1
 8001338:	080013d7 	.word	0x080013d7
 800133c:	080013d7 	.word	0x080013d7
 8001340:	080013d7 	.word	0x080013d7
 8001344:	080013d7 	.word	0x080013d7
 8001348:	080013d7 	.word	0x080013d7
 800134c:	080013d7 	.word	0x080013d7
 8001350:	080013d7 	.word	0x080013d7
 8001354:	080013d7 	.word	0x080013d7
 8001358:	080013d7 	.word	0x080013d7
 800135c:	080013d7 	.word	0x080013d7
 8001360:	080013d7 	.word	0x080013d7
 8001364:	080013d7 	.word	0x080013d7
 8001368:	080013d7 	.word	0x080013d7
 800136c:	08001385 	.word	0x08001385
 8001370:	08001399 	.word	0x08001399
 8001374:	4a79      	ldr	r2, [pc, #484]	@ (800155c <HAL_GPIO_Init+0x2b4>)
 8001376:	4293      	cmp	r3, r2
 8001378:	d013      	beq.n	80013a2 <HAL_GPIO_Init+0xfa>
 800137a:	e02c      	b.n	80013d6 <HAL_GPIO_Init+0x12e>
 800137c:	683b      	ldr	r3, [r7, #0]
 800137e:	68db      	ldr	r3, [r3, #12]
 8001380:	623b      	str	r3, [r7, #32]
 8001382:	e029      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 8001384:	683b      	ldr	r3, [r7, #0]
 8001386:	68db      	ldr	r3, [r3, #12]
 8001388:	3304      	adds	r3, #4
 800138a:	623b      	str	r3, [r7, #32]
 800138c:	e024      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 800138e:	683b      	ldr	r3, [r7, #0]
 8001390:	68db      	ldr	r3, [r3, #12]
 8001392:	3308      	adds	r3, #8
 8001394:	623b      	str	r3, [r7, #32]
 8001396:	e01f      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 8001398:	683b      	ldr	r3, [r7, #0]
 800139a:	68db      	ldr	r3, [r3, #12]
 800139c:	330c      	adds	r3, #12
 800139e:	623b      	str	r3, [r7, #32]
 80013a0:	e01a      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 80013a2:	683b      	ldr	r3, [r7, #0]
 80013a4:	689b      	ldr	r3, [r3, #8]
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d102      	bne.n	80013b0 <HAL_GPIO_Init+0x108>
 80013aa:	2304      	movs	r3, #4
 80013ac:	623b      	str	r3, [r7, #32]
 80013ae:	e013      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 80013b0:	683b      	ldr	r3, [r7, #0]
 80013b2:	689b      	ldr	r3, [r3, #8]
 80013b4:	2b01      	cmp	r3, #1
 80013b6:	d105      	bne.n	80013c4 <HAL_GPIO_Init+0x11c>
 80013b8:	2308      	movs	r3, #8
 80013ba:	623b      	str	r3, [r7, #32]
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	69fa      	ldr	r2, [r7, #28]
 80013c0:	611a      	str	r2, [r3, #16]
 80013c2:	e009      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 80013c4:	2308      	movs	r3, #8
 80013c6:	623b      	str	r3, [r7, #32]
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	69fa      	ldr	r2, [r7, #28]
 80013cc:	615a      	str	r2, [r3, #20]
 80013ce:	e003      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 80013d0:	2300      	movs	r3, #0
 80013d2:	623b      	str	r3, [r7, #32]
 80013d4:	e000      	b.n	80013d8 <HAL_GPIO_Init+0x130>
 80013d6:	bf00      	nop
 80013d8:	69bb      	ldr	r3, [r7, #24]
 80013da:	2bff      	cmp	r3, #255	@ 0xff
 80013dc:	d801      	bhi.n	80013e2 <HAL_GPIO_Init+0x13a>
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	e001      	b.n	80013e6 <HAL_GPIO_Init+0x13e>
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	3304      	adds	r3, #4
 80013e6:	617b      	str	r3, [r7, #20]
 80013e8:	69bb      	ldr	r3, [r7, #24]
 80013ea:	2bff      	cmp	r3, #255	@ 0xff
 80013ec:	d802      	bhi.n	80013f4 <HAL_GPIO_Init+0x14c>
 80013ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013f0:	009b      	lsls	r3, r3, #2
 80013f2:	e002      	b.n	80013fa <HAL_GPIO_Init+0x152>
 80013f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80013f6:	3b08      	subs	r3, #8
 80013f8:	009b      	lsls	r3, r3, #2
 80013fa:	613b      	str	r3, [r7, #16]
 80013fc:	697b      	ldr	r3, [r7, #20]
 80013fe:	681a      	ldr	r2, [r3, #0]
 8001400:	210f      	movs	r1, #15
 8001402:	693b      	ldr	r3, [r7, #16]
 8001404:	fa01 f303 	lsl.w	r3, r1, r3
 8001408:	43db      	mvns	r3, r3
 800140a:	401a      	ands	r2, r3
 800140c:	6a39      	ldr	r1, [r7, #32]
 800140e:	693b      	ldr	r3, [r7, #16]
 8001410:	fa01 f303 	lsl.w	r3, r1, r3
 8001414:	431a      	orrs	r2, r3
 8001416:	697b      	ldr	r3, [r7, #20]
 8001418:	601a      	str	r2, [r3, #0]
 800141a:	683b      	ldr	r3, [r7, #0]
 800141c:	685b      	ldr	r3, [r3, #4]
 800141e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001422:	2b00      	cmp	r3, #0
 8001424:	f000 80b1 	beq.w	800158a <HAL_GPIO_Init+0x2e2>
 8001428:	4b4d      	ldr	r3, [pc, #308]	@ (8001560 <HAL_GPIO_Init+0x2b8>)
 800142a:	699b      	ldr	r3, [r3, #24]
 800142c:	4a4c      	ldr	r2, [pc, #304]	@ (8001560 <HAL_GPIO_Init+0x2b8>)
 800142e:	f043 0301 	orr.w	r3, r3, #1
 8001432:	6193      	str	r3, [r2, #24]
 8001434:	4b4a      	ldr	r3, [pc, #296]	@ (8001560 <HAL_GPIO_Init+0x2b8>)
 8001436:	699b      	ldr	r3, [r3, #24]
 8001438:	f003 0301 	and.w	r3, r3, #1
 800143c:	60bb      	str	r3, [r7, #8]
 800143e:	68bb      	ldr	r3, [r7, #8]
 8001440:	4a48      	ldr	r2, [pc, #288]	@ (8001564 <HAL_GPIO_Init+0x2bc>)
 8001442:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001444:	089b      	lsrs	r3, r3, #2
 8001446:	3302      	adds	r3, #2
 8001448:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800144c:	60fb      	str	r3, [r7, #12]
 800144e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001450:	f003 0303 	and.w	r3, r3, #3
 8001454:	009b      	lsls	r3, r3, #2
 8001456:	220f      	movs	r2, #15
 8001458:	fa02 f303 	lsl.w	r3, r2, r3
 800145c:	43db      	mvns	r3, r3
 800145e:	68fa      	ldr	r2, [r7, #12]
 8001460:	4013      	ands	r3, r2
 8001462:	60fb      	str	r3, [r7, #12]
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	4a40      	ldr	r2, [pc, #256]	@ (8001568 <HAL_GPIO_Init+0x2c0>)
 8001468:	4293      	cmp	r3, r2
 800146a:	d013      	beq.n	8001494 <HAL_GPIO_Init+0x1ec>
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	4a3f      	ldr	r2, [pc, #252]	@ (800156c <HAL_GPIO_Init+0x2c4>)
 8001470:	4293      	cmp	r3, r2
 8001472:	d00d      	beq.n	8001490 <HAL_GPIO_Init+0x1e8>
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	4a3e      	ldr	r2, [pc, #248]	@ (8001570 <HAL_GPIO_Init+0x2c8>)
 8001478:	4293      	cmp	r3, r2
 800147a:	d007      	beq.n	800148c <HAL_GPIO_Init+0x1e4>
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	4a3d      	ldr	r2, [pc, #244]	@ (8001574 <HAL_GPIO_Init+0x2cc>)
 8001480:	4293      	cmp	r3, r2
 8001482:	d101      	bne.n	8001488 <HAL_GPIO_Init+0x1e0>
 8001484:	2303      	movs	r3, #3
 8001486:	e006      	b.n	8001496 <HAL_GPIO_Init+0x1ee>
 8001488:	2304      	movs	r3, #4
 800148a:	e004      	b.n	8001496 <HAL_GPIO_Init+0x1ee>
 800148c:	2302      	movs	r3, #2
 800148e:	e002      	b.n	8001496 <HAL_GPIO_Init+0x1ee>
 8001490:	2301      	movs	r3, #1
 8001492:	e000      	b.n	8001496 <HAL_GPIO_Init+0x1ee>
 8001494:	2300      	movs	r3, #0
 8001496:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001498:	f002 0203 	and.w	r2, r2, #3
 800149c:	0092      	lsls	r2, r2, #2
 800149e:	4093      	lsls	r3, r2
 80014a0:	68fa      	ldr	r2, [r7, #12]
 80014a2:	4313      	orrs	r3, r2
 80014a4:	60fb      	str	r3, [r7, #12]
 80014a6:	492f      	ldr	r1, [pc, #188]	@ (8001564 <HAL_GPIO_Init+0x2bc>)
 80014a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80014aa:	089b      	lsrs	r3, r3, #2
 80014ac:	3302      	adds	r3, #2
 80014ae:	68fa      	ldr	r2, [r7, #12]
 80014b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80014b4:	683b      	ldr	r3, [r7, #0]
 80014b6:	685b      	ldr	r3, [r3, #4]
 80014b8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d006      	beq.n	80014ce <HAL_GPIO_Init+0x226>
 80014c0:	4b2d      	ldr	r3, [pc, #180]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014c2:	689a      	ldr	r2, [r3, #8]
 80014c4:	492c      	ldr	r1, [pc, #176]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014c6:	69bb      	ldr	r3, [r7, #24]
 80014c8:	4313      	orrs	r3, r2
 80014ca:	608b      	str	r3, [r1, #8]
 80014cc:	e006      	b.n	80014dc <HAL_GPIO_Init+0x234>
 80014ce:	4b2a      	ldr	r3, [pc, #168]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014d0:	689a      	ldr	r2, [r3, #8]
 80014d2:	69bb      	ldr	r3, [r7, #24]
 80014d4:	43db      	mvns	r3, r3
 80014d6:	4928      	ldr	r1, [pc, #160]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014d8:	4013      	ands	r3, r2
 80014da:	608b      	str	r3, [r1, #8]
 80014dc:	683b      	ldr	r3, [r7, #0]
 80014de:	685b      	ldr	r3, [r3, #4]
 80014e0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d006      	beq.n	80014f6 <HAL_GPIO_Init+0x24e>
 80014e8:	4b23      	ldr	r3, [pc, #140]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014ea:	68da      	ldr	r2, [r3, #12]
 80014ec:	4922      	ldr	r1, [pc, #136]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014ee:	69bb      	ldr	r3, [r7, #24]
 80014f0:	4313      	orrs	r3, r2
 80014f2:	60cb      	str	r3, [r1, #12]
 80014f4:	e006      	b.n	8001504 <HAL_GPIO_Init+0x25c>
 80014f6:	4b20      	ldr	r3, [pc, #128]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 80014f8:	68da      	ldr	r2, [r3, #12]
 80014fa:	69bb      	ldr	r3, [r7, #24]
 80014fc:	43db      	mvns	r3, r3
 80014fe:	491e      	ldr	r1, [pc, #120]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 8001500:	4013      	ands	r3, r2
 8001502:	60cb      	str	r3, [r1, #12]
 8001504:	683b      	ldr	r3, [r7, #0]
 8001506:	685b      	ldr	r3, [r3, #4]
 8001508:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800150c:	2b00      	cmp	r3, #0
 800150e:	d006      	beq.n	800151e <HAL_GPIO_Init+0x276>
 8001510:	4b19      	ldr	r3, [pc, #100]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 8001512:	685a      	ldr	r2, [r3, #4]
 8001514:	4918      	ldr	r1, [pc, #96]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 8001516:	69bb      	ldr	r3, [r7, #24]
 8001518:	4313      	orrs	r3, r2
 800151a:	604b      	str	r3, [r1, #4]
 800151c:	e006      	b.n	800152c <HAL_GPIO_Init+0x284>
 800151e:	4b16      	ldr	r3, [pc, #88]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 8001520:	685a      	ldr	r2, [r3, #4]
 8001522:	69bb      	ldr	r3, [r7, #24]
 8001524:	43db      	mvns	r3, r3
 8001526:	4914      	ldr	r1, [pc, #80]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 8001528:	4013      	ands	r3, r2
 800152a:	604b      	str	r3, [r1, #4]
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	685b      	ldr	r3, [r3, #4]
 8001530:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001534:	2b00      	cmp	r3, #0
 8001536:	d021      	beq.n	800157c <HAL_GPIO_Init+0x2d4>
 8001538:	4b0f      	ldr	r3, [pc, #60]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 800153a:	681a      	ldr	r2, [r3, #0]
 800153c:	490e      	ldr	r1, [pc, #56]	@ (8001578 <HAL_GPIO_Init+0x2d0>)
 800153e:	69bb      	ldr	r3, [r7, #24]
 8001540:	4313      	orrs	r3, r2
 8001542:	600b      	str	r3, [r1, #0]
 8001544:	e021      	b.n	800158a <HAL_GPIO_Init+0x2e2>
 8001546:	bf00      	nop
 8001548:	10320000 	.word	0x10320000
 800154c:	10310000 	.word	0x10310000
 8001550:	10220000 	.word	0x10220000
 8001554:	10210000 	.word	0x10210000
 8001558:	10120000 	.word	0x10120000
 800155c:	10110000 	.word	0x10110000
 8001560:	40021000 	.word	0x40021000
 8001564:	40010000 	.word	0x40010000
 8001568:	40010800 	.word	0x40010800
 800156c:	40010c00 	.word	0x40010c00
 8001570:	40011000 	.word	0x40011000
 8001574:	40011400 	.word	0x40011400
 8001578:	40010400 	.word	0x40010400
 800157c:	4b0b      	ldr	r3, [pc, #44]	@ (80015ac <HAL_GPIO_Init+0x304>)
 800157e:	681a      	ldr	r2, [r3, #0]
 8001580:	69bb      	ldr	r3, [r7, #24]
 8001582:	43db      	mvns	r3, r3
 8001584:	4909      	ldr	r1, [pc, #36]	@ (80015ac <HAL_GPIO_Init+0x304>)
 8001586:	4013      	ands	r3, r2
 8001588:	600b      	str	r3, [r1, #0]
 800158a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800158c:	3301      	adds	r3, #1
 800158e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001590:	683b      	ldr	r3, [r7, #0]
 8001592:	681a      	ldr	r2, [r3, #0]
 8001594:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001596:	fa22 f303 	lsr.w	r3, r2, r3
 800159a:	2b00      	cmp	r3, #0
 800159c:	f47f ae8e 	bne.w	80012bc <HAL_GPIO_Init+0x14>
 80015a0:	bf00      	nop
 80015a2:	bf00      	nop
 80015a4:	372c      	adds	r7, #44	@ 0x2c
 80015a6:	46bd      	mov	sp, r7
 80015a8:	bc80      	pop	{r7}
 80015aa:	4770      	bx	lr
 80015ac:	40010400 	.word	0x40010400

080015b0 <HAL_GPIO_ReadPin>:
 80015b0:	b480      	push	{r7}
 80015b2:	b085      	sub	sp, #20
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	6078      	str	r0, [r7, #4]
 80015b8:	460b      	mov	r3, r1
 80015ba:	807b      	strh	r3, [r7, #2]
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	689a      	ldr	r2, [r3, #8]
 80015c0:	887b      	ldrh	r3, [r7, #2]
 80015c2:	4013      	ands	r3, r2
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d002      	beq.n	80015ce <HAL_GPIO_ReadPin+0x1e>
 80015c8:	2301      	movs	r3, #1
 80015ca:	73fb      	strb	r3, [r7, #15]
 80015cc:	e001      	b.n	80015d2 <HAL_GPIO_ReadPin+0x22>
 80015ce:	2300      	movs	r3, #0
 80015d0:	73fb      	strb	r3, [r7, #15]
 80015d2:	7bfb      	ldrb	r3, [r7, #15]
 80015d4:	4618      	mov	r0, r3
 80015d6:	3714      	adds	r7, #20
 80015d8:	46bd      	mov	sp, r7
 80015da:	bc80      	pop	{r7}
 80015dc:	4770      	bx	lr

080015de <HAL_GPIO_WritePin>:
 80015de:	b480      	push	{r7}
 80015e0:	b083      	sub	sp, #12
 80015e2:	af00      	add	r7, sp, #0
 80015e4:	6078      	str	r0, [r7, #4]
 80015e6:	460b      	mov	r3, r1
 80015e8:	807b      	strh	r3, [r7, #2]
 80015ea:	4613      	mov	r3, r2
 80015ec:	707b      	strb	r3, [r7, #1]
 80015ee:	787b      	ldrb	r3, [r7, #1]
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d003      	beq.n	80015fc <HAL_GPIO_WritePin+0x1e>
 80015f4:	887a      	ldrh	r2, [r7, #2]
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	611a      	str	r2, [r3, #16]
 80015fa:	e003      	b.n	8001604 <HAL_GPIO_WritePin+0x26>
 80015fc:	887b      	ldrh	r3, [r7, #2]
 80015fe:	041a      	lsls	r2, r3, #16
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	611a      	str	r2, [r3, #16]
 8001604:	bf00      	nop
 8001606:	370c      	adds	r7, #12
 8001608:	46bd      	mov	sp, r7
 800160a:	bc80      	pop	{r7}
 800160c:	4770      	bx	lr
	...

08001610 <HAL_GPIO_EXTI_IRQHandler>:
 8001610:	b580      	push	{r7, lr}
 8001612:	b082      	sub	sp, #8
 8001614:	af00      	add	r7, sp, #0
 8001616:	4603      	mov	r3, r0
 8001618:	80fb      	strh	r3, [r7, #6]
 800161a:	4b08      	ldr	r3, [pc, #32]	@ (800163c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800161c:	695a      	ldr	r2, [r3, #20]
 800161e:	88fb      	ldrh	r3, [r7, #6]
 8001620:	4013      	ands	r3, r2
 8001622:	2b00      	cmp	r3, #0
 8001624:	d006      	beq.n	8001634 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001626:	4a05      	ldr	r2, [pc, #20]	@ (800163c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001628:	88fb      	ldrh	r3, [r7, #6]
 800162a:	6153      	str	r3, [r2, #20]
 800162c:	88fb      	ldrh	r3, [r7, #6]
 800162e:	4618      	mov	r0, r3
 8001630:	f000 f806 	bl	8001640 <HAL_GPIO_EXTI_Callback>
 8001634:	bf00      	nop
 8001636:	3708      	adds	r7, #8
 8001638:	46bd      	mov	sp, r7
 800163a:	bd80      	pop	{r7, pc}
 800163c:	40010400 	.word	0x40010400

08001640 <HAL_GPIO_EXTI_Callback>:
 8001640:	b480      	push	{r7}
 8001642:	b083      	sub	sp, #12
 8001644:	af00      	add	r7, sp, #0
 8001646:	4603      	mov	r3, r0
 8001648:	80fb      	strh	r3, [r7, #6]
 800164a:	bf00      	nop
 800164c:	370c      	adds	r7, #12
 800164e:	46bd      	mov	sp, r7
 8001650:	bc80      	pop	{r7}
 8001652:	4770      	bx	lr

08001654 <HAL_I2C_Init>:
 8001654:	b580      	push	{r7, lr}
 8001656:	b084      	sub	sp, #16
 8001658:	af00      	add	r7, sp, #0
 800165a:	6078      	str	r0, [r7, #4]
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	2b00      	cmp	r3, #0
 8001660:	d101      	bne.n	8001666 <HAL_I2C_Init+0x12>
 8001662:	2301      	movs	r3, #1
 8001664:	e12b      	b.n	80018be <HAL_I2C_Init+0x26a>
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800166c:	b2db      	uxtb	r3, r3
 800166e:	2b00      	cmp	r3, #0
 8001670:	d106      	bne.n	8001680 <HAL_I2C_Init+0x2c>
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	2200      	movs	r2, #0
 8001676:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800167a:	6878      	ldr	r0, [r7, #4]
 800167c:	f7ff fad6 	bl	8000c2c <HAL_I2C_MspInit>
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	2224      	movs	r2, #36	@ 0x24
 8001684:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	681a      	ldr	r2, [r3, #0]
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	f022 0201 	bic.w	r2, r2, #1
 8001696:	601a      	str	r2, [r3, #0]
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	681a      	ldr	r2, [r3, #0]
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	681b      	ldr	r3, [r3, #0]
 80016a2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80016a6:	601a      	str	r2, [r3, #0]
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	681a      	ldr	r2, [r3, #0]
 80016ae:	687b      	ldr	r3, [r7, #4]
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80016b6:	601a      	str	r2, [r3, #0]
 80016b8:	f001 f960 	bl	800297c <HAL_RCC_GetPCLK1Freq>
 80016bc:	60f8      	str	r0, [r7, #12]
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	685b      	ldr	r3, [r3, #4]
 80016c2:	4a81      	ldr	r2, [pc, #516]	@ (80018c8 <HAL_I2C_Init+0x274>)
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d807      	bhi.n	80016d8 <HAL_I2C_Init+0x84>
 80016c8:	68fb      	ldr	r3, [r7, #12]
 80016ca:	4a80      	ldr	r2, [pc, #512]	@ (80018cc <HAL_I2C_Init+0x278>)
 80016cc:	4293      	cmp	r3, r2
 80016ce:	bf94      	ite	ls
 80016d0:	2301      	movls	r3, #1
 80016d2:	2300      	movhi	r3, #0
 80016d4:	b2db      	uxtb	r3, r3
 80016d6:	e006      	b.n	80016e6 <HAL_I2C_Init+0x92>
 80016d8:	68fb      	ldr	r3, [r7, #12]
 80016da:	4a7d      	ldr	r2, [pc, #500]	@ (80018d0 <HAL_I2C_Init+0x27c>)
 80016dc:	4293      	cmp	r3, r2
 80016de:	bf94      	ite	ls
 80016e0:	2301      	movls	r3, #1
 80016e2:	2300      	movhi	r3, #0
 80016e4:	b2db      	uxtb	r3, r3
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d001      	beq.n	80016ee <HAL_I2C_Init+0x9a>
 80016ea:	2301      	movs	r3, #1
 80016ec:	e0e7      	b.n	80018be <HAL_I2C_Init+0x26a>
 80016ee:	68fb      	ldr	r3, [r7, #12]
 80016f0:	4a78      	ldr	r2, [pc, #480]	@ (80018d4 <HAL_I2C_Init+0x280>)
 80016f2:	fba2 2303 	umull	r2, r3, r2, r3
 80016f6:	0c9b      	lsrs	r3, r3, #18
 80016f8:	60bb      	str	r3, [r7, #8]
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	685b      	ldr	r3, [r3, #4]
 8001700:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	681b      	ldr	r3, [r3, #0]
 8001708:	68ba      	ldr	r2, [r7, #8]
 800170a:	430a      	orrs	r2, r1
 800170c:	605a      	str	r2, [r3, #4]
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	6a1b      	ldr	r3, [r3, #32]
 8001714:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	685b      	ldr	r3, [r3, #4]
 800171c:	4a6a      	ldr	r2, [pc, #424]	@ (80018c8 <HAL_I2C_Init+0x274>)
 800171e:	4293      	cmp	r3, r2
 8001720:	d802      	bhi.n	8001728 <HAL_I2C_Init+0xd4>
 8001722:	68bb      	ldr	r3, [r7, #8]
 8001724:	3301      	adds	r3, #1
 8001726:	e009      	b.n	800173c <HAL_I2C_Init+0xe8>
 8001728:	68bb      	ldr	r3, [r7, #8]
 800172a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800172e:	fb02 f303 	mul.w	r3, r2, r3
 8001732:	4a69      	ldr	r2, [pc, #420]	@ (80018d8 <HAL_I2C_Init+0x284>)
 8001734:	fba2 2303 	umull	r2, r3, r2, r3
 8001738:	099b      	lsrs	r3, r3, #6
 800173a:	3301      	adds	r3, #1
 800173c:	687a      	ldr	r2, [r7, #4]
 800173e:	6812      	ldr	r2, [r2, #0]
 8001740:	430b      	orrs	r3, r1
 8001742:	6213      	str	r3, [r2, #32]
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	681b      	ldr	r3, [r3, #0]
 8001748:	69db      	ldr	r3, [r3, #28]
 800174a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800174e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8001752:	687b      	ldr	r3, [r7, #4]
 8001754:	685b      	ldr	r3, [r3, #4]
 8001756:	495c      	ldr	r1, [pc, #368]	@ (80018c8 <HAL_I2C_Init+0x274>)
 8001758:	428b      	cmp	r3, r1
 800175a:	d819      	bhi.n	8001790 <HAL_I2C_Init+0x13c>
 800175c:	68fb      	ldr	r3, [r7, #12]
 800175e:	1e59      	subs	r1, r3, #1
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	005b      	lsls	r3, r3, #1
 8001766:	fbb1 f3f3 	udiv	r3, r1, r3
 800176a:	1c59      	adds	r1, r3, #1
 800176c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8001770:	400b      	ands	r3, r1
 8001772:	2b00      	cmp	r3, #0
 8001774:	d00a      	beq.n	800178c <HAL_I2C_Init+0x138>
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	1e59      	subs	r1, r3, #1
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	685b      	ldr	r3, [r3, #4]
 800177e:	005b      	lsls	r3, r3, #1
 8001780:	fbb1 f3f3 	udiv	r3, r1, r3
 8001784:	3301      	adds	r3, #1
 8001786:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800178a:	e051      	b.n	8001830 <HAL_I2C_Init+0x1dc>
 800178c:	2304      	movs	r3, #4
 800178e:	e04f      	b.n	8001830 <HAL_I2C_Init+0x1dc>
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	689b      	ldr	r3, [r3, #8]
 8001794:	2b00      	cmp	r3, #0
 8001796:	d111      	bne.n	80017bc <HAL_I2C_Init+0x168>
 8001798:	68fb      	ldr	r3, [r7, #12]
 800179a:	1e58      	subs	r0, r3, #1
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	6859      	ldr	r1, [r3, #4]
 80017a0:	460b      	mov	r3, r1
 80017a2:	005b      	lsls	r3, r3, #1
 80017a4:	440b      	add	r3, r1
 80017a6:	fbb0 f3f3 	udiv	r3, r0, r3
 80017aa:	3301      	adds	r3, #1
 80017ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	bf0c      	ite	eq
 80017b4:	2301      	moveq	r3, #1
 80017b6:	2300      	movne	r3, #0
 80017b8:	b2db      	uxtb	r3, r3
 80017ba:	e012      	b.n	80017e2 <HAL_I2C_Init+0x18e>
 80017bc:	68fb      	ldr	r3, [r7, #12]
 80017be:	1e58      	subs	r0, r3, #1
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	6859      	ldr	r1, [r3, #4]
 80017c4:	460b      	mov	r3, r1
 80017c6:	009b      	lsls	r3, r3, #2
 80017c8:	440b      	add	r3, r1
 80017ca:	0099      	lsls	r1, r3, #2
 80017cc:	440b      	add	r3, r1
 80017ce:	fbb0 f3f3 	udiv	r3, r0, r3
 80017d2:	3301      	adds	r3, #1
 80017d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80017d8:	2b00      	cmp	r3, #0
 80017da:	bf0c      	ite	eq
 80017dc:	2301      	moveq	r3, #1
 80017de:	2300      	movne	r3, #0
 80017e0:	b2db      	uxtb	r3, r3
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d001      	beq.n	80017ea <HAL_I2C_Init+0x196>
 80017e6:	2301      	movs	r3, #1
 80017e8:	e022      	b.n	8001830 <HAL_I2C_Init+0x1dc>
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	689b      	ldr	r3, [r3, #8]
 80017ee:	2b00      	cmp	r3, #0
 80017f0:	d10e      	bne.n	8001810 <HAL_I2C_Init+0x1bc>
 80017f2:	68fb      	ldr	r3, [r7, #12]
 80017f4:	1e58      	subs	r0, r3, #1
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	6859      	ldr	r1, [r3, #4]
 80017fa:	460b      	mov	r3, r1
 80017fc:	005b      	lsls	r3, r3, #1
 80017fe:	440b      	add	r3, r1
 8001800:	fbb0 f3f3 	udiv	r3, r0, r3
 8001804:	3301      	adds	r3, #1
 8001806:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800180a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800180e:	e00f      	b.n	8001830 <HAL_I2C_Init+0x1dc>
 8001810:	68fb      	ldr	r3, [r7, #12]
 8001812:	1e58      	subs	r0, r3, #1
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	6859      	ldr	r1, [r3, #4]
 8001818:	460b      	mov	r3, r1
 800181a:	009b      	lsls	r3, r3, #2
 800181c:	440b      	add	r3, r1
 800181e:	0099      	lsls	r1, r3, #2
 8001820:	440b      	add	r3, r1
 8001822:	fbb0 f3f3 	udiv	r3, r0, r3
 8001826:	3301      	adds	r3, #1
 8001828:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800182c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001830:	6879      	ldr	r1, [r7, #4]
 8001832:	6809      	ldr	r1, [r1, #0]
 8001834:	4313      	orrs	r3, r2
 8001836:	61cb      	str	r3, [r1, #28]
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	681b      	ldr	r3, [r3, #0]
 800183e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	69da      	ldr	r2, [r3, #28]
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	6a1b      	ldr	r3, [r3, #32]
 800184a:	431a      	orrs	r2, r3
 800184c:	687b      	ldr	r3, [r7, #4]
 800184e:	681b      	ldr	r3, [r3, #0]
 8001850:	430a      	orrs	r2, r1
 8001852:	601a      	str	r2, [r3, #0]
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	689b      	ldr	r3, [r3, #8]
 800185a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800185e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8001862:	687a      	ldr	r2, [r7, #4]
 8001864:	6911      	ldr	r1, [r2, #16]
 8001866:	687a      	ldr	r2, [r7, #4]
 8001868:	68d2      	ldr	r2, [r2, #12]
 800186a:	4311      	orrs	r1, r2
 800186c:	687a      	ldr	r2, [r7, #4]
 800186e:	6812      	ldr	r2, [r2, #0]
 8001870:	430b      	orrs	r3, r1
 8001872:	6093      	str	r3, [r2, #8]
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	68db      	ldr	r3, [r3, #12]
 800187a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	695a      	ldr	r2, [r3, #20]
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	699b      	ldr	r3, [r3, #24]
 8001886:	431a      	orrs	r2, r3
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	430a      	orrs	r2, r1
 800188e:	60da      	str	r2, [r3, #12]
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	681a      	ldr	r2, [r3, #0]
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	f042 0201 	orr.w	r2, r2, #1
 800189e:	601a      	str	r2, [r3, #0]
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	2200      	movs	r2, #0
 80018a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	2220      	movs	r2, #32
 80018aa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	2200      	movs	r2, #0
 80018b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	2200      	movs	r2, #0
 80018b8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80018bc:	2300      	movs	r3, #0
 80018be:	4618      	mov	r0, r3
 80018c0:	3710      	adds	r7, #16
 80018c2:	46bd      	mov	sp, r7
 80018c4:	bd80      	pop	{r7, pc}
 80018c6:	bf00      	nop
 80018c8:	000186a0 	.word	0x000186a0
 80018cc:	001e847f 	.word	0x001e847f
 80018d0:	003d08ff 	.word	0x003d08ff
 80018d4:	431bde83 	.word	0x431bde83
 80018d8:	10624dd3 	.word	0x10624dd3

080018dc <HAL_I2C_Master_Transmit>:
 80018dc:	b580      	push	{r7, lr}
 80018de:	b088      	sub	sp, #32
 80018e0:	af02      	add	r7, sp, #8
 80018e2:	60f8      	str	r0, [r7, #12]
 80018e4:	607a      	str	r2, [r7, #4]
 80018e6:	461a      	mov	r2, r3
 80018e8:	460b      	mov	r3, r1
 80018ea:	817b      	strh	r3, [r7, #10]
 80018ec:	4613      	mov	r3, r2
 80018ee:	813b      	strh	r3, [r7, #8]
 80018f0:	f7ff fb9e 	bl	8001030 <HAL_GetTick>
 80018f4:	6178      	str	r0, [r7, #20]
 80018f6:	68fb      	ldr	r3, [r7, #12]
 80018f8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80018fc:	b2db      	uxtb	r3, r3
 80018fe:	2b20      	cmp	r3, #32
 8001900:	f040 80e0 	bne.w	8001ac4 <HAL_I2C_Master_Transmit+0x1e8>
 8001904:	697b      	ldr	r3, [r7, #20]
 8001906:	9300      	str	r3, [sp, #0]
 8001908:	2319      	movs	r3, #25
 800190a:	2201      	movs	r2, #1
 800190c:	4970      	ldr	r1, [pc, #448]	@ (8001ad0 <HAL_I2C_Master_Transmit+0x1f4>)
 800190e:	68f8      	ldr	r0, [r7, #12]
 8001910:	f000 fa92 	bl	8001e38 <I2C_WaitOnFlagUntilTimeout>
 8001914:	4603      	mov	r3, r0
 8001916:	2b00      	cmp	r3, #0
 8001918:	d001      	beq.n	800191e <HAL_I2C_Master_Transmit+0x42>
 800191a:	2302      	movs	r3, #2
 800191c:	e0d3      	b.n	8001ac6 <HAL_I2C_Master_Transmit+0x1ea>
 800191e:	68fb      	ldr	r3, [r7, #12]
 8001920:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001924:	2b01      	cmp	r3, #1
 8001926:	d101      	bne.n	800192c <HAL_I2C_Master_Transmit+0x50>
 8001928:	2302      	movs	r3, #2
 800192a:	e0cc      	b.n	8001ac6 <HAL_I2C_Master_Transmit+0x1ea>
 800192c:	68fb      	ldr	r3, [r7, #12]
 800192e:	2201      	movs	r2, #1
 8001930:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001934:	68fb      	ldr	r3, [r7, #12]
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	681b      	ldr	r3, [r3, #0]
 800193a:	f003 0301 	and.w	r3, r3, #1
 800193e:	2b01      	cmp	r3, #1
 8001940:	d007      	beq.n	8001952 <HAL_I2C_Master_Transmit+0x76>
 8001942:	68fb      	ldr	r3, [r7, #12]
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	681a      	ldr	r2, [r3, #0]
 8001948:	68fb      	ldr	r3, [r7, #12]
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	f042 0201 	orr.w	r2, r2, #1
 8001950:	601a      	str	r2, [r3, #0]
 8001952:	68fb      	ldr	r3, [r7, #12]
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	681a      	ldr	r2, [r3, #0]
 8001958:	68fb      	ldr	r3, [r7, #12]
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001960:	601a      	str	r2, [r3, #0]
 8001962:	68fb      	ldr	r3, [r7, #12]
 8001964:	2221      	movs	r2, #33	@ 0x21
 8001966:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800196a:	68fb      	ldr	r3, [r7, #12]
 800196c:	2210      	movs	r2, #16
 800196e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001972:	68fb      	ldr	r3, [r7, #12]
 8001974:	2200      	movs	r2, #0
 8001976:	641a      	str	r2, [r3, #64]	@ 0x40
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	687a      	ldr	r2, [r7, #4]
 800197c:	625a      	str	r2, [r3, #36]	@ 0x24
 800197e:	68fb      	ldr	r3, [r7, #12]
 8001980:	893a      	ldrh	r2, [r7, #8]
 8001982:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001984:	68fb      	ldr	r3, [r7, #12]
 8001986:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001988:	b29a      	uxth	r2, r3
 800198a:	68fb      	ldr	r3, [r7, #12]
 800198c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800198e:	68fb      	ldr	r3, [r7, #12]
 8001990:	4a50      	ldr	r2, [pc, #320]	@ (8001ad4 <HAL_I2C_Master_Transmit+0x1f8>)
 8001992:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001994:	8979      	ldrh	r1, [r7, #10]
 8001996:	697b      	ldr	r3, [r7, #20]
 8001998:	6a3a      	ldr	r2, [r7, #32]
 800199a:	68f8      	ldr	r0, [r7, #12]
 800199c:	f000 f9ca 	bl	8001d34 <I2C_MasterRequestWrite>
 80019a0:	4603      	mov	r3, r0
 80019a2:	2b00      	cmp	r3, #0
 80019a4:	d001      	beq.n	80019aa <HAL_I2C_Master_Transmit+0xce>
 80019a6:	2301      	movs	r3, #1
 80019a8:	e08d      	b.n	8001ac6 <HAL_I2C_Master_Transmit+0x1ea>
 80019aa:	2300      	movs	r3, #0
 80019ac:	613b      	str	r3, [r7, #16]
 80019ae:	68fb      	ldr	r3, [r7, #12]
 80019b0:	681b      	ldr	r3, [r3, #0]
 80019b2:	695b      	ldr	r3, [r3, #20]
 80019b4:	613b      	str	r3, [r7, #16]
 80019b6:	68fb      	ldr	r3, [r7, #12]
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	699b      	ldr	r3, [r3, #24]
 80019bc:	613b      	str	r3, [r7, #16]
 80019be:	693b      	ldr	r3, [r7, #16]
 80019c0:	e066      	b.n	8001a90 <HAL_I2C_Master_Transmit+0x1b4>
 80019c2:	697a      	ldr	r2, [r7, #20]
 80019c4:	6a39      	ldr	r1, [r7, #32]
 80019c6:	68f8      	ldr	r0, [r7, #12]
 80019c8:	f000 fb50 	bl	800206c <I2C_WaitOnTXEFlagUntilTimeout>
 80019cc:	4603      	mov	r3, r0
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d00d      	beq.n	80019ee <HAL_I2C_Master_Transmit+0x112>
 80019d2:	68fb      	ldr	r3, [r7, #12]
 80019d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80019d6:	2b04      	cmp	r3, #4
 80019d8:	d107      	bne.n	80019ea <HAL_I2C_Master_Transmit+0x10e>
 80019da:	68fb      	ldr	r3, [r7, #12]
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	681a      	ldr	r2, [r3, #0]
 80019e0:	68fb      	ldr	r3, [r7, #12]
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80019e8:	601a      	str	r2, [r3, #0]
 80019ea:	2301      	movs	r3, #1
 80019ec:	e06b      	b.n	8001ac6 <HAL_I2C_Master_Transmit+0x1ea>
 80019ee:	68fb      	ldr	r3, [r7, #12]
 80019f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019f2:	781a      	ldrb	r2, [r3, #0]
 80019f4:	68fb      	ldr	r3, [r7, #12]
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	611a      	str	r2, [r3, #16]
 80019fa:	68fb      	ldr	r3, [r7, #12]
 80019fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80019fe:	1c5a      	adds	r2, r3, #1
 8001a00:	68fb      	ldr	r3, [r7, #12]
 8001a02:	625a      	str	r2, [r3, #36]	@ 0x24
 8001a04:	68fb      	ldr	r3, [r7, #12]
 8001a06:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001a08:	b29b      	uxth	r3, r3
 8001a0a:	3b01      	subs	r3, #1
 8001a0c:	b29a      	uxth	r2, r3
 8001a0e:	68fb      	ldr	r3, [r7, #12]
 8001a10:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001a12:	68fb      	ldr	r3, [r7, #12]
 8001a14:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001a16:	3b01      	subs	r3, #1
 8001a18:	b29a      	uxth	r2, r3
 8001a1a:	68fb      	ldr	r3, [r7, #12]
 8001a1c:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001a1e:	68fb      	ldr	r3, [r7, #12]
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	695b      	ldr	r3, [r3, #20]
 8001a24:	f003 0304 	and.w	r3, r3, #4
 8001a28:	2b04      	cmp	r3, #4
 8001a2a:	d11b      	bne.n	8001a64 <HAL_I2C_Master_Transmit+0x188>
 8001a2c:	68fb      	ldr	r3, [r7, #12]
 8001a2e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001a30:	2b00      	cmp	r3, #0
 8001a32:	d017      	beq.n	8001a64 <HAL_I2C_Master_Transmit+0x188>
 8001a34:	68fb      	ldr	r3, [r7, #12]
 8001a36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a38:	781a      	ldrb	r2, [r3, #0]
 8001a3a:	68fb      	ldr	r3, [r7, #12]
 8001a3c:	681b      	ldr	r3, [r3, #0]
 8001a3e:	611a      	str	r2, [r3, #16]
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001a44:	1c5a      	adds	r2, r3, #1
 8001a46:	68fb      	ldr	r3, [r7, #12]
 8001a48:	625a      	str	r2, [r3, #36]	@ 0x24
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001a4e:	b29b      	uxth	r3, r3
 8001a50:	3b01      	subs	r3, #1
 8001a52:	b29a      	uxth	r2, r3
 8001a54:	68fb      	ldr	r3, [r7, #12]
 8001a56:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001a58:	68fb      	ldr	r3, [r7, #12]
 8001a5a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001a5c:	3b01      	subs	r3, #1
 8001a5e:	b29a      	uxth	r2, r3
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001a64:	697a      	ldr	r2, [r7, #20]
 8001a66:	6a39      	ldr	r1, [r7, #32]
 8001a68:	68f8      	ldr	r0, [r7, #12]
 8001a6a:	f000 fb47 	bl	80020fc <I2C_WaitOnBTFFlagUntilTimeout>
 8001a6e:	4603      	mov	r3, r0
 8001a70:	2b00      	cmp	r3, #0
 8001a72:	d00d      	beq.n	8001a90 <HAL_I2C_Master_Transmit+0x1b4>
 8001a74:	68fb      	ldr	r3, [r7, #12]
 8001a76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a78:	2b04      	cmp	r3, #4
 8001a7a:	d107      	bne.n	8001a8c <HAL_I2C_Master_Transmit+0x1b0>
 8001a7c:	68fb      	ldr	r3, [r7, #12]
 8001a7e:	681b      	ldr	r3, [r3, #0]
 8001a80:	681a      	ldr	r2, [r3, #0]
 8001a82:	68fb      	ldr	r3, [r7, #12]
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001a8a:	601a      	str	r2, [r3, #0]
 8001a8c:	2301      	movs	r3, #1
 8001a8e:	e01a      	b.n	8001ac6 <HAL_I2C_Master_Transmit+0x1ea>
 8001a90:	68fb      	ldr	r3, [r7, #12]
 8001a92:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001a94:	2b00      	cmp	r3, #0
 8001a96:	d194      	bne.n	80019c2 <HAL_I2C_Master_Transmit+0xe6>
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	681a      	ldr	r2, [r3, #0]
 8001a9e:	68fb      	ldr	r3, [r7, #12]
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001aa6:	601a      	str	r2, [r3, #0]
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	2220      	movs	r2, #32
 8001aac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	2200      	movs	r2, #0
 8001ab4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	2200      	movs	r2, #0
 8001abc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ac0:	2300      	movs	r3, #0
 8001ac2:	e000      	b.n	8001ac6 <HAL_I2C_Master_Transmit+0x1ea>
 8001ac4:	2302      	movs	r3, #2
 8001ac6:	4618      	mov	r0, r3
 8001ac8:	3718      	adds	r7, #24
 8001aca:	46bd      	mov	sp, r7
 8001acc:	bd80      	pop	{r7, pc}
 8001ace:	bf00      	nop
 8001ad0:	00100002 	.word	0x00100002
 8001ad4:	ffff0000 	.word	0xffff0000

08001ad8 <HAL_I2C_IsDeviceReady>:
 8001ad8:	b580      	push	{r7, lr}
 8001ada:	b08a      	sub	sp, #40	@ 0x28
 8001adc:	af02      	add	r7, sp, #8
 8001ade:	60f8      	str	r0, [r7, #12]
 8001ae0:	607a      	str	r2, [r7, #4]
 8001ae2:	603b      	str	r3, [r7, #0]
 8001ae4:	460b      	mov	r3, r1
 8001ae6:	817b      	strh	r3, [r7, #10]
 8001ae8:	f7ff faa2 	bl	8001030 <HAL_GetTick>
 8001aec:	61f8      	str	r0, [r7, #28]
 8001aee:	2300      	movs	r3, #0
 8001af0:	61bb      	str	r3, [r7, #24]
 8001af2:	68fb      	ldr	r3, [r7, #12]
 8001af4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001af8:	b2db      	uxtb	r3, r3
 8001afa:	2b20      	cmp	r3, #32
 8001afc:	f040 8111 	bne.w	8001d22 <HAL_I2C_IsDeviceReady+0x24a>
 8001b00:	69fb      	ldr	r3, [r7, #28]
 8001b02:	9300      	str	r3, [sp, #0]
 8001b04:	2319      	movs	r3, #25
 8001b06:	2201      	movs	r2, #1
 8001b08:	4988      	ldr	r1, [pc, #544]	@ (8001d2c <HAL_I2C_IsDeviceReady+0x254>)
 8001b0a:	68f8      	ldr	r0, [r7, #12]
 8001b0c:	f000 f994 	bl	8001e38 <I2C_WaitOnFlagUntilTimeout>
 8001b10:	4603      	mov	r3, r0
 8001b12:	2b00      	cmp	r3, #0
 8001b14:	d001      	beq.n	8001b1a <HAL_I2C_IsDeviceReady+0x42>
 8001b16:	2302      	movs	r3, #2
 8001b18:	e104      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001b1a:	68fb      	ldr	r3, [r7, #12]
 8001b1c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001b20:	2b01      	cmp	r3, #1
 8001b22:	d101      	bne.n	8001b28 <HAL_I2C_IsDeviceReady+0x50>
 8001b24:	2302      	movs	r3, #2
 8001b26:	e0fd      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	2201      	movs	r2, #1
 8001b2c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	f003 0301 	and.w	r3, r3, #1
 8001b3a:	2b01      	cmp	r3, #1
 8001b3c:	d007      	beq.n	8001b4e <HAL_I2C_IsDeviceReady+0x76>
 8001b3e:	68fb      	ldr	r3, [r7, #12]
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	681a      	ldr	r2, [r3, #0]
 8001b44:	68fb      	ldr	r3, [r7, #12]
 8001b46:	681b      	ldr	r3, [r3, #0]
 8001b48:	f042 0201 	orr.w	r2, r2, #1
 8001b4c:	601a      	str	r2, [r3, #0]
 8001b4e:	68fb      	ldr	r3, [r7, #12]
 8001b50:	681b      	ldr	r3, [r3, #0]
 8001b52:	681a      	ldr	r2, [r3, #0]
 8001b54:	68fb      	ldr	r3, [r7, #12]
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001b5c:	601a      	str	r2, [r3, #0]
 8001b5e:	68fb      	ldr	r3, [r7, #12]
 8001b60:	2224      	movs	r2, #36	@ 0x24
 8001b62:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001b66:	68fb      	ldr	r3, [r7, #12]
 8001b68:	2200      	movs	r2, #0
 8001b6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	4a70      	ldr	r2, [pc, #448]	@ (8001d30 <HAL_I2C_IsDeviceReady+0x258>)
 8001b70:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001b72:	68fb      	ldr	r3, [r7, #12]
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	681a      	ldr	r2, [r3, #0]
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001b80:	601a      	str	r2, [r3, #0]
 8001b82:	69fb      	ldr	r3, [r7, #28]
 8001b84:	9300      	str	r3, [sp, #0]
 8001b86:	683b      	ldr	r3, [r7, #0]
 8001b88:	2200      	movs	r2, #0
 8001b8a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8001b8e:	68f8      	ldr	r0, [r7, #12]
 8001b90:	f000 f952 	bl	8001e38 <I2C_WaitOnFlagUntilTimeout>
 8001b94:	4603      	mov	r3, r0
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d00d      	beq.n	8001bb6 <HAL_I2C_IsDeviceReady+0xde>
 8001b9a:	68fb      	ldr	r3, [r7, #12]
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001ba4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001ba8:	d103      	bne.n	8001bb2 <HAL_I2C_IsDeviceReady+0xda>
 8001baa:	68fb      	ldr	r3, [r7, #12]
 8001bac:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001bb0:	641a      	str	r2, [r3, #64]	@ 0x40
 8001bb2:	2303      	movs	r3, #3
 8001bb4:	e0b6      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001bb6:	897b      	ldrh	r3, [r7, #10]
 8001bb8:	b2db      	uxtb	r3, r3
 8001bba:	461a      	mov	r2, r3
 8001bbc:	68fb      	ldr	r3, [r7, #12]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8001bc4:	611a      	str	r2, [r3, #16]
 8001bc6:	f7ff fa33 	bl	8001030 <HAL_GetTick>
 8001bca:	61f8      	str	r0, [r7, #28]
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	695b      	ldr	r3, [r3, #20]
 8001bd2:	f003 0302 	and.w	r3, r3, #2
 8001bd6:	2b02      	cmp	r3, #2
 8001bd8:	bf0c      	ite	eq
 8001bda:	2301      	moveq	r3, #1
 8001bdc:	2300      	movne	r3, #0
 8001bde:	b2db      	uxtb	r3, r3
 8001be0:	75fb      	strb	r3, [r7, #23]
 8001be2:	68fb      	ldr	r3, [r7, #12]
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	695b      	ldr	r3, [r3, #20]
 8001be8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001bec:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001bf0:	bf0c      	ite	eq
 8001bf2:	2301      	moveq	r3, #1
 8001bf4:	2300      	movne	r3, #0
 8001bf6:	b2db      	uxtb	r3, r3
 8001bf8:	75bb      	strb	r3, [r7, #22]
 8001bfa:	e025      	b.n	8001c48 <HAL_I2C_IsDeviceReady+0x170>
 8001bfc:	f7ff fa18 	bl	8001030 <HAL_GetTick>
 8001c00:	4602      	mov	r2, r0
 8001c02:	69fb      	ldr	r3, [r7, #28]
 8001c04:	1ad3      	subs	r3, r2, r3
 8001c06:	683a      	ldr	r2, [r7, #0]
 8001c08:	429a      	cmp	r2, r3
 8001c0a:	d302      	bcc.n	8001c12 <HAL_I2C_IsDeviceReady+0x13a>
 8001c0c:	683b      	ldr	r3, [r7, #0]
 8001c0e:	2b00      	cmp	r3, #0
 8001c10:	d103      	bne.n	8001c1a <HAL_I2C_IsDeviceReady+0x142>
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	22a0      	movs	r2, #160	@ 0xa0
 8001c16:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001c1a:	68fb      	ldr	r3, [r7, #12]
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	695b      	ldr	r3, [r3, #20]
 8001c20:	f003 0302 	and.w	r3, r3, #2
 8001c24:	2b02      	cmp	r3, #2
 8001c26:	bf0c      	ite	eq
 8001c28:	2301      	moveq	r3, #1
 8001c2a:	2300      	movne	r3, #0
 8001c2c:	b2db      	uxtb	r3, r3
 8001c2e:	75fb      	strb	r3, [r7, #23]
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	695b      	ldr	r3, [r3, #20]
 8001c36:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001c3a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001c3e:	bf0c      	ite	eq
 8001c40:	2301      	moveq	r3, #1
 8001c42:	2300      	movne	r3, #0
 8001c44:	b2db      	uxtb	r3, r3
 8001c46:	75bb      	strb	r3, [r7, #22]
 8001c48:	68fb      	ldr	r3, [r7, #12]
 8001c4a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001c4e:	b2db      	uxtb	r3, r3
 8001c50:	2ba0      	cmp	r3, #160	@ 0xa0
 8001c52:	d005      	beq.n	8001c60 <HAL_I2C_IsDeviceReady+0x188>
 8001c54:	7dfb      	ldrb	r3, [r7, #23]
 8001c56:	2b00      	cmp	r3, #0
 8001c58:	d102      	bne.n	8001c60 <HAL_I2C_IsDeviceReady+0x188>
 8001c5a:	7dbb      	ldrb	r3, [r7, #22]
 8001c5c:	2b00      	cmp	r3, #0
 8001c5e:	d0cd      	beq.n	8001bfc <HAL_I2C_IsDeviceReady+0x124>
 8001c60:	68fb      	ldr	r3, [r7, #12]
 8001c62:	2220      	movs	r2, #32
 8001c64:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001c68:	68fb      	ldr	r3, [r7, #12]
 8001c6a:	681b      	ldr	r3, [r3, #0]
 8001c6c:	695b      	ldr	r3, [r3, #20]
 8001c6e:	f003 0302 	and.w	r3, r3, #2
 8001c72:	2b02      	cmp	r3, #2
 8001c74:	d129      	bne.n	8001cca <HAL_I2C_IsDeviceReady+0x1f2>
 8001c76:	68fb      	ldr	r3, [r7, #12]
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	681a      	ldr	r2, [r3, #0]
 8001c7c:	68fb      	ldr	r3, [r7, #12]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001c84:	601a      	str	r2, [r3, #0]
 8001c86:	2300      	movs	r3, #0
 8001c88:	613b      	str	r3, [r7, #16]
 8001c8a:	68fb      	ldr	r3, [r7, #12]
 8001c8c:	681b      	ldr	r3, [r3, #0]
 8001c8e:	695b      	ldr	r3, [r3, #20]
 8001c90:	613b      	str	r3, [r7, #16]
 8001c92:	68fb      	ldr	r3, [r7, #12]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	699b      	ldr	r3, [r3, #24]
 8001c98:	613b      	str	r3, [r7, #16]
 8001c9a:	693b      	ldr	r3, [r7, #16]
 8001c9c:	69fb      	ldr	r3, [r7, #28]
 8001c9e:	9300      	str	r3, [sp, #0]
 8001ca0:	2319      	movs	r3, #25
 8001ca2:	2201      	movs	r2, #1
 8001ca4:	4921      	ldr	r1, [pc, #132]	@ (8001d2c <HAL_I2C_IsDeviceReady+0x254>)
 8001ca6:	68f8      	ldr	r0, [r7, #12]
 8001ca8:	f000 f8c6 	bl	8001e38 <I2C_WaitOnFlagUntilTimeout>
 8001cac:	4603      	mov	r3, r0
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	d001      	beq.n	8001cb6 <HAL_I2C_IsDeviceReady+0x1de>
 8001cb2:	2301      	movs	r3, #1
 8001cb4:	e036      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001cb6:	68fb      	ldr	r3, [r7, #12]
 8001cb8:	2220      	movs	r2, #32
 8001cba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001cbe:	68fb      	ldr	r3, [r7, #12]
 8001cc0:	2200      	movs	r2, #0
 8001cc2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001cc6:	2300      	movs	r3, #0
 8001cc8:	e02c      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001cca:	68fb      	ldr	r3, [r7, #12]
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	681a      	ldr	r2, [r3, #0]
 8001cd0:	68fb      	ldr	r3, [r7, #12]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001cd8:	601a      	str	r2, [r3, #0]
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8001ce2:	615a      	str	r2, [r3, #20]
 8001ce4:	69fb      	ldr	r3, [r7, #28]
 8001ce6:	9300      	str	r3, [sp, #0]
 8001ce8:	2319      	movs	r3, #25
 8001cea:	2201      	movs	r2, #1
 8001cec:	490f      	ldr	r1, [pc, #60]	@ (8001d2c <HAL_I2C_IsDeviceReady+0x254>)
 8001cee:	68f8      	ldr	r0, [r7, #12]
 8001cf0:	f000 f8a2 	bl	8001e38 <I2C_WaitOnFlagUntilTimeout>
 8001cf4:	4603      	mov	r3, r0
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	d001      	beq.n	8001cfe <HAL_I2C_IsDeviceReady+0x226>
 8001cfa:	2301      	movs	r3, #1
 8001cfc:	e012      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001cfe:	69bb      	ldr	r3, [r7, #24]
 8001d00:	3301      	adds	r3, #1
 8001d02:	61bb      	str	r3, [r7, #24]
 8001d04:	69ba      	ldr	r2, [r7, #24]
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	429a      	cmp	r2, r3
 8001d0a:	f4ff af32 	bcc.w	8001b72 <HAL_I2C_IsDeviceReady+0x9a>
 8001d0e:	68fb      	ldr	r3, [r7, #12]
 8001d10:	2220      	movs	r2, #32
 8001d12:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001d16:	68fb      	ldr	r3, [r7, #12]
 8001d18:	2200      	movs	r2, #0
 8001d1a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d1e:	2301      	movs	r3, #1
 8001d20:	e000      	b.n	8001d24 <HAL_I2C_IsDeviceReady+0x24c>
 8001d22:	2302      	movs	r3, #2
 8001d24:	4618      	mov	r0, r3
 8001d26:	3720      	adds	r7, #32
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	bd80      	pop	{r7, pc}
 8001d2c:	00100002 	.word	0x00100002
 8001d30:	ffff0000 	.word	0xffff0000

08001d34 <I2C_MasterRequestWrite>:
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b088      	sub	sp, #32
 8001d38:	af02      	add	r7, sp, #8
 8001d3a:	60f8      	str	r0, [r7, #12]
 8001d3c:	607a      	str	r2, [r7, #4]
 8001d3e:	603b      	str	r3, [r7, #0]
 8001d40:	460b      	mov	r3, r1
 8001d42:	817b      	strh	r3, [r7, #10]
 8001d44:	68fb      	ldr	r3, [r7, #12]
 8001d46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001d48:	617b      	str	r3, [r7, #20]
 8001d4a:	697b      	ldr	r3, [r7, #20]
 8001d4c:	2b08      	cmp	r3, #8
 8001d4e:	d006      	beq.n	8001d5e <I2C_MasterRequestWrite+0x2a>
 8001d50:	697b      	ldr	r3, [r7, #20]
 8001d52:	2b01      	cmp	r3, #1
 8001d54:	d003      	beq.n	8001d5e <I2C_MasterRequestWrite+0x2a>
 8001d56:	697b      	ldr	r3, [r7, #20]
 8001d58:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8001d5c:	d108      	bne.n	8001d70 <I2C_MasterRequestWrite+0x3c>
 8001d5e:	68fb      	ldr	r3, [r7, #12]
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	681a      	ldr	r2, [r3, #0]
 8001d64:	68fb      	ldr	r3, [r7, #12]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001d6c:	601a      	str	r2, [r3, #0]
 8001d6e:	e00b      	b.n	8001d88 <I2C_MasterRequestWrite+0x54>
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d74:	2b12      	cmp	r3, #18
 8001d76:	d107      	bne.n	8001d88 <I2C_MasterRequestWrite+0x54>
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	681a      	ldr	r2, [r3, #0]
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	681b      	ldr	r3, [r3, #0]
 8001d82:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001d86:	601a      	str	r2, [r3, #0]
 8001d88:	683b      	ldr	r3, [r7, #0]
 8001d8a:	9300      	str	r3, [sp, #0]
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	2200      	movs	r2, #0
 8001d90:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8001d94:	68f8      	ldr	r0, [r7, #12]
 8001d96:	f000 f84f 	bl	8001e38 <I2C_WaitOnFlagUntilTimeout>
 8001d9a:	4603      	mov	r3, r0
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d00d      	beq.n	8001dbc <I2C_MasterRequestWrite+0x88>
 8001da0:	68fb      	ldr	r3, [r7, #12]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001daa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001dae:	d103      	bne.n	8001db8 <I2C_MasterRequestWrite+0x84>
 8001db0:	68fb      	ldr	r3, [r7, #12]
 8001db2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001db6:	641a      	str	r2, [r3, #64]	@ 0x40
 8001db8:	2303      	movs	r3, #3
 8001dba:	e035      	b.n	8001e28 <I2C_MasterRequestWrite+0xf4>
 8001dbc:	68fb      	ldr	r3, [r7, #12]
 8001dbe:	691b      	ldr	r3, [r3, #16]
 8001dc0:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8001dc4:	d108      	bne.n	8001dd8 <I2C_MasterRequestWrite+0xa4>
 8001dc6:	897b      	ldrh	r3, [r7, #10]
 8001dc8:	b2db      	uxtb	r3, r3
 8001dca:	461a      	mov	r2, r3
 8001dcc:	68fb      	ldr	r3, [r7, #12]
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8001dd4:	611a      	str	r2, [r3, #16]
 8001dd6:	e01b      	b.n	8001e10 <I2C_MasterRequestWrite+0xdc>
 8001dd8:	897b      	ldrh	r3, [r7, #10]
 8001dda:	11db      	asrs	r3, r3, #7
 8001ddc:	b2db      	uxtb	r3, r3
 8001dde:	f003 0306 	and.w	r3, r3, #6
 8001de2:	b2db      	uxtb	r3, r3
 8001de4:	f063 030f 	orn	r3, r3, #15
 8001de8:	b2da      	uxtb	r2, r3
 8001dea:	68fb      	ldr	r3, [r7, #12]
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	611a      	str	r2, [r3, #16]
 8001df0:	683b      	ldr	r3, [r7, #0]
 8001df2:	687a      	ldr	r2, [r7, #4]
 8001df4:	490e      	ldr	r1, [pc, #56]	@ (8001e30 <I2C_MasterRequestWrite+0xfc>)
 8001df6:	68f8      	ldr	r0, [r7, #12]
 8001df8:	f000 f898 	bl	8001f2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001dfc:	4603      	mov	r3, r0
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d001      	beq.n	8001e06 <I2C_MasterRequestWrite+0xd2>
 8001e02:	2301      	movs	r3, #1
 8001e04:	e010      	b.n	8001e28 <I2C_MasterRequestWrite+0xf4>
 8001e06:	897b      	ldrh	r3, [r7, #10]
 8001e08:	b2da      	uxtb	r2, r3
 8001e0a:	68fb      	ldr	r3, [r7, #12]
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	611a      	str	r2, [r3, #16]
 8001e10:	683b      	ldr	r3, [r7, #0]
 8001e12:	687a      	ldr	r2, [r7, #4]
 8001e14:	4907      	ldr	r1, [pc, #28]	@ (8001e34 <I2C_MasterRequestWrite+0x100>)
 8001e16:	68f8      	ldr	r0, [r7, #12]
 8001e18:	f000 f888 	bl	8001f2c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001e1c:	4603      	mov	r3, r0
 8001e1e:	2b00      	cmp	r3, #0
 8001e20:	d001      	beq.n	8001e26 <I2C_MasterRequestWrite+0xf2>
 8001e22:	2301      	movs	r3, #1
 8001e24:	e000      	b.n	8001e28 <I2C_MasterRequestWrite+0xf4>
 8001e26:	2300      	movs	r3, #0
 8001e28:	4618      	mov	r0, r3
 8001e2a:	3718      	adds	r7, #24
 8001e2c:	46bd      	mov	sp, r7
 8001e2e:	bd80      	pop	{r7, pc}
 8001e30:	00010008 	.word	0x00010008
 8001e34:	00010002 	.word	0x00010002

08001e38 <I2C_WaitOnFlagUntilTimeout>:
 8001e38:	b580      	push	{r7, lr}
 8001e3a:	b084      	sub	sp, #16
 8001e3c:	af00      	add	r7, sp, #0
 8001e3e:	60f8      	str	r0, [r7, #12]
 8001e40:	60b9      	str	r1, [r7, #8]
 8001e42:	603b      	str	r3, [r7, #0]
 8001e44:	4613      	mov	r3, r2
 8001e46:	71fb      	strb	r3, [r7, #7]
 8001e48:	e048      	b.n	8001edc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001e4a:	683b      	ldr	r3, [r7, #0]
 8001e4c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001e50:	d044      	beq.n	8001edc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001e52:	f7ff f8ed 	bl	8001030 <HAL_GetTick>
 8001e56:	4602      	mov	r2, r0
 8001e58:	69bb      	ldr	r3, [r7, #24]
 8001e5a:	1ad3      	subs	r3, r2, r3
 8001e5c:	683a      	ldr	r2, [r7, #0]
 8001e5e:	429a      	cmp	r2, r3
 8001e60:	d302      	bcc.n	8001e68 <I2C_WaitOnFlagUntilTimeout+0x30>
 8001e62:	683b      	ldr	r3, [r7, #0]
 8001e64:	2b00      	cmp	r3, #0
 8001e66:	d139      	bne.n	8001edc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001e68:	68bb      	ldr	r3, [r7, #8]
 8001e6a:	0c1b      	lsrs	r3, r3, #16
 8001e6c:	b2db      	uxtb	r3, r3
 8001e6e:	2b01      	cmp	r3, #1
 8001e70:	d10d      	bne.n	8001e8e <I2C_WaitOnFlagUntilTimeout+0x56>
 8001e72:	68fb      	ldr	r3, [r7, #12]
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	695b      	ldr	r3, [r3, #20]
 8001e78:	43da      	mvns	r2, r3
 8001e7a:	68bb      	ldr	r3, [r7, #8]
 8001e7c:	4013      	ands	r3, r2
 8001e7e:	b29b      	uxth	r3, r3
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	bf0c      	ite	eq
 8001e84:	2301      	moveq	r3, #1
 8001e86:	2300      	movne	r3, #0
 8001e88:	b2db      	uxtb	r3, r3
 8001e8a:	461a      	mov	r2, r3
 8001e8c:	e00c      	b.n	8001ea8 <I2C_WaitOnFlagUntilTimeout+0x70>
 8001e8e:	68fb      	ldr	r3, [r7, #12]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	699b      	ldr	r3, [r3, #24]
 8001e94:	43da      	mvns	r2, r3
 8001e96:	68bb      	ldr	r3, [r7, #8]
 8001e98:	4013      	ands	r3, r2
 8001e9a:	b29b      	uxth	r3, r3
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	bf0c      	ite	eq
 8001ea0:	2301      	moveq	r3, #1
 8001ea2:	2300      	movne	r3, #0
 8001ea4:	b2db      	uxtb	r3, r3
 8001ea6:	461a      	mov	r2, r3
 8001ea8:	79fb      	ldrb	r3, [r7, #7]
 8001eaa:	429a      	cmp	r2, r3
 8001eac:	d116      	bne.n	8001edc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8001eae:	68fb      	ldr	r3, [r7, #12]
 8001eb0:	2200      	movs	r2, #0
 8001eb2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001eb4:	68fb      	ldr	r3, [r7, #12]
 8001eb6:	2220      	movs	r2, #32
 8001eb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ebc:	68fb      	ldr	r3, [r7, #12]
 8001ebe:	2200      	movs	r2, #0
 8001ec0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001ec4:	68fb      	ldr	r3, [r7, #12]
 8001ec6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ec8:	f043 0220 	orr.w	r2, r3, #32
 8001ecc:	68fb      	ldr	r3, [r7, #12]
 8001ece:	641a      	str	r2, [r3, #64]	@ 0x40
 8001ed0:	68fb      	ldr	r3, [r7, #12]
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ed8:	2301      	movs	r3, #1
 8001eda:	e023      	b.n	8001f24 <I2C_WaitOnFlagUntilTimeout+0xec>
 8001edc:	68bb      	ldr	r3, [r7, #8]
 8001ede:	0c1b      	lsrs	r3, r3, #16
 8001ee0:	b2db      	uxtb	r3, r3
 8001ee2:	2b01      	cmp	r3, #1
 8001ee4:	d10d      	bne.n	8001f02 <I2C_WaitOnFlagUntilTimeout+0xca>
 8001ee6:	68fb      	ldr	r3, [r7, #12]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	695b      	ldr	r3, [r3, #20]
 8001eec:	43da      	mvns	r2, r3
 8001eee:	68bb      	ldr	r3, [r7, #8]
 8001ef0:	4013      	ands	r3, r2
 8001ef2:	b29b      	uxth	r3, r3
 8001ef4:	2b00      	cmp	r3, #0
 8001ef6:	bf0c      	ite	eq
 8001ef8:	2301      	moveq	r3, #1
 8001efa:	2300      	movne	r3, #0
 8001efc:	b2db      	uxtb	r3, r3
 8001efe:	461a      	mov	r2, r3
 8001f00:	e00c      	b.n	8001f1c <I2C_WaitOnFlagUntilTimeout+0xe4>
 8001f02:	68fb      	ldr	r3, [r7, #12]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	699b      	ldr	r3, [r3, #24]
 8001f08:	43da      	mvns	r2, r3
 8001f0a:	68bb      	ldr	r3, [r7, #8]
 8001f0c:	4013      	ands	r3, r2
 8001f0e:	b29b      	uxth	r3, r3
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	bf0c      	ite	eq
 8001f14:	2301      	moveq	r3, #1
 8001f16:	2300      	movne	r3, #0
 8001f18:	b2db      	uxtb	r3, r3
 8001f1a:	461a      	mov	r2, r3
 8001f1c:	79fb      	ldrb	r3, [r7, #7]
 8001f1e:	429a      	cmp	r2, r3
 8001f20:	d093      	beq.n	8001e4a <I2C_WaitOnFlagUntilTimeout+0x12>
 8001f22:	2300      	movs	r3, #0
 8001f24:	4618      	mov	r0, r3
 8001f26:	3710      	adds	r7, #16
 8001f28:	46bd      	mov	sp, r7
 8001f2a:	bd80      	pop	{r7, pc}

08001f2c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8001f2c:	b580      	push	{r7, lr}
 8001f2e:	b084      	sub	sp, #16
 8001f30:	af00      	add	r7, sp, #0
 8001f32:	60f8      	str	r0, [r7, #12]
 8001f34:	60b9      	str	r1, [r7, #8]
 8001f36:	607a      	str	r2, [r7, #4]
 8001f38:	603b      	str	r3, [r7, #0]
 8001f3a:	e071      	b.n	8002020 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	695b      	ldr	r3, [r3, #20]
 8001f42:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001f46:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001f4a:	d123      	bne.n	8001f94 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8001f4c:	68fb      	ldr	r3, [r7, #12]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	681a      	ldr	r2, [r3, #0]
 8001f52:	68fb      	ldr	r3, [r7, #12]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001f5a:	601a      	str	r2, [r3, #0]
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8001f64:	615a      	str	r2, [r3, #20]
 8001f66:	68fb      	ldr	r3, [r7, #12]
 8001f68:	2200      	movs	r2, #0
 8001f6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001f6c:	68fb      	ldr	r3, [r7, #12]
 8001f6e:	2220      	movs	r2, #32
 8001f70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001f74:	68fb      	ldr	r3, [r7, #12]
 8001f76:	2200      	movs	r2, #0
 8001f78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f80:	f043 0204 	orr.w	r2, r3, #4
 8001f84:	68fb      	ldr	r3, [r7, #12]
 8001f86:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f88:	68fb      	ldr	r3, [r7, #12]
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f90:	2301      	movs	r3, #1
 8001f92:	e067      	b.n	8002064 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f9a:	d041      	beq.n	8002020 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001f9c:	f7ff f848 	bl	8001030 <HAL_GetTick>
 8001fa0:	4602      	mov	r2, r0
 8001fa2:	683b      	ldr	r3, [r7, #0]
 8001fa4:	1ad3      	subs	r3, r2, r3
 8001fa6:	687a      	ldr	r2, [r7, #4]
 8001fa8:	429a      	cmp	r2, r3
 8001faa:	d302      	bcc.n	8001fb2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	2b00      	cmp	r3, #0
 8001fb0:	d136      	bne.n	8002020 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001fb2:	68bb      	ldr	r3, [r7, #8]
 8001fb4:	0c1b      	lsrs	r3, r3, #16
 8001fb6:	b2db      	uxtb	r3, r3
 8001fb8:	2b01      	cmp	r3, #1
 8001fba:	d10c      	bne.n	8001fd6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8001fbc:	68fb      	ldr	r3, [r7, #12]
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	695b      	ldr	r3, [r3, #20]
 8001fc2:	43da      	mvns	r2, r3
 8001fc4:	68bb      	ldr	r3, [r7, #8]
 8001fc6:	4013      	ands	r3, r2
 8001fc8:	b29b      	uxth	r3, r3
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	bf14      	ite	ne
 8001fce:	2301      	movne	r3, #1
 8001fd0:	2300      	moveq	r3, #0
 8001fd2:	b2db      	uxtb	r3, r3
 8001fd4:	e00b      	b.n	8001fee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	699b      	ldr	r3, [r3, #24]
 8001fdc:	43da      	mvns	r2, r3
 8001fde:	68bb      	ldr	r3, [r7, #8]
 8001fe0:	4013      	ands	r3, r2
 8001fe2:	b29b      	uxth	r3, r3
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	bf14      	ite	ne
 8001fe8:	2301      	movne	r3, #1
 8001fea:	2300      	moveq	r3, #0
 8001fec:	b2db      	uxtb	r3, r3
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d016      	beq.n	8002020 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	2200      	movs	r2, #0
 8001ff6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ff8:	68fb      	ldr	r3, [r7, #12]
 8001ffa:	2220      	movs	r2, #32
 8001ffc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	2200      	movs	r2, #0
 8002004:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002008:	68fb      	ldr	r3, [r7, #12]
 800200a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800200c:	f043 0220 	orr.w	r2, r3, #32
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	641a      	str	r2, [r3, #64]	@ 0x40
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	2200      	movs	r2, #0
 8002018:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800201c:	2301      	movs	r3, #1
 800201e:	e021      	b.n	8002064 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002020:	68bb      	ldr	r3, [r7, #8]
 8002022:	0c1b      	lsrs	r3, r3, #16
 8002024:	b2db      	uxtb	r3, r3
 8002026:	2b01      	cmp	r3, #1
 8002028:	d10c      	bne.n	8002044 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 800202a:	68fb      	ldr	r3, [r7, #12]
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	695b      	ldr	r3, [r3, #20]
 8002030:	43da      	mvns	r2, r3
 8002032:	68bb      	ldr	r3, [r7, #8]
 8002034:	4013      	ands	r3, r2
 8002036:	b29b      	uxth	r3, r3
 8002038:	2b00      	cmp	r3, #0
 800203a:	bf14      	ite	ne
 800203c:	2301      	movne	r3, #1
 800203e:	2300      	moveq	r3, #0
 8002040:	b2db      	uxtb	r3, r3
 8002042:	e00b      	b.n	800205c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8002044:	68fb      	ldr	r3, [r7, #12]
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	699b      	ldr	r3, [r3, #24]
 800204a:	43da      	mvns	r2, r3
 800204c:	68bb      	ldr	r3, [r7, #8]
 800204e:	4013      	ands	r3, r2
 8002050:	b29b      	uxth	r3, r3
 8002052:	2b00      	cmp	r3, #0
 8002054:	bf14      	ite	ne
 8002056:	2301      	movne	r3, #1
 8002058:	2300      	moveq	r3, #0
 800205a:	b2db      	uxtb	r3, r3
 800205c:	2b00      	cmp	r3, #0
 800205e:	f47f af6d 	bne.w	8001f3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002062:	2300      	movs	r3, #0
 8002064:	4618      	mov	r0, r3
 8002066:	3710      	adds	r7, #16
 8002068:	46bd      	mov	sp, r7
 800206a:	bd80      	pop	{r7, pc}

0800206c <I2C_WaitOnTXEFlagUntilTimeout>:
 800206c:	b580      	push	{r7, lr}
 800206e:	b084      	sub	sp, #16
 8002070:	af00      	add	r7, sp, #0
 8002072:	60f8      	str	r0, [r7, #12]
 8002074:	60b9      	str	r1, [r7, #8]
 8002076:	607a      	str	r2, [r7, #4]
 8002078:	e034      	b.n	80020e4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800207a:	68f8      	ldr	r0, [r7, #12]
 800207c:	f000 f886 	bl	800218c <I2C_IsAcknowledgeFailed>
 8002080:	4603      	mov	r3, r0
 8002082:	2b00      	cmp	r3, #0
 8002084:	d001      	beq.n	800208a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8002086:	2301      	movs	r3, #1
 8002088:	e034      	b.n	80020f4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800208a:	68bb      	ldr	r3, [r7, #8]
 800208c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002090:	d028      	beq.n	80020e4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002092:	f7fe ffcd 	bl	8001030 <HAL_GetTick>
 8002096:	4602      	mov	r2, r0
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	1ad3      	subs	r3, r2, r3
 800209c:	68ba      	ldr	r2, [r7, #8]
 800209e:	429a      	cmp	r2, r3
 80020a0:	d302      	bcc.n	80020a8 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80020a2:	68bb      	ldr	r3, [r7, #8]
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d11d      	bne.n	80020e4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80020a8:	68fb      	ldr	r3, [r7, #12]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	695b      	ldr	r3, [r3, #20]
 80020ae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80020b2:	2b80      	cmp	r3, #128	@ 0x80
 80020b4:	d016      	beq.n	80020e4 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	2200      	movs	r2, #0
 80020ba:	631a      	str	r2, [r3, #48]	@ 0x30
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	2220      	movs	r2, #32
 80020c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	2200      	movs	r2, #0
 80020c8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80020cc:	68fb      	ldr	r3, [r7, #12]
 80020ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020d0:	f043 0220 	orr.w	r2, r3, #32
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	641a      	str	r2, [r3, #64]	@ 0x40
 80020d8:	68fb      	ldr	r3, [r7, #12]
 80020da:	2200      	movs	r2, #0
 80020dc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80020e0:	2301      	movs	r3, #1
 80020e2:	e007      	b.n	80020f4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	695b      	ldr	r3, [r3, #20]
 80020ea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80020ee:	2b80      	cmp	r3, #128	@ 0x80
 80020f0:	d1c3      	bne.n	800207a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80020f2:	2300      	movs	r3, #0
 80020f4:	4618      	mov	r0, r3
 80020f6:	3710      	adds	r7, #16
 80020f8:	46bd      	mov	sp, r7
 80020fa:	bd80      	pop	{r7, pc}

080020fc <I2C_WaitOnBTFFlagUntilTimeout>:
 80020fc:	b580      	push	{r7, lr}
 80020fe:	b084      	sub	sp, #16
 8002100:	af00      	add	r7, sp, #0
 8002102:	60f8      	str	r0, [r7, #12]
 8002104:	60b9      	str	r1, [r7, #8]
 8002106:	607a      	str	r2, [r7, #4]
 8002108:	e034      	b.n	8002174 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800210a:	68f8      	ldr	r0, [r7, #12]
 800210c:	f000 f83e 	bl	800218c <I2C_IsAcknowledgeFailed>
 8002110:	4603      	mov	r3, r0
 8002112:	2b00      	cmp	r3, #0
 8002114:	d001      	beq.n	800211a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002116:	2301      	movs	r3, #1
 8002118:	e034      	b.n	8002184 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800211a:	68bb      	ldr	r3, [r7, #8]
 800211c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002120:	d028      	beq.n	8002174 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002122:	f7fe ff85 	bl	8001030 <HAL_GetTick>
 8002126:	4602      	mov	r2, r0
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	1ad3      	subs	r3, r2, r3
 800212c:	68ba      	ldr	r2, [r7, #8]
 800212e:	429a      	cmp	r2, r3
 8002130:	d302      	bcc.n	8002138 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002132:	68bb      	ldr	r3, [r7, #8]
 8002134:	2b00      	cmp	r3, #0
 8002136:	d11d      	bne.n	8002174 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	681b      	ldr	r3, [r3, #0]
 800213c:	695b      	ldr	r3, [r3, #20]
 800213e:	f003 0304 	and.w	r3, r3, #4
 8002142:	2b04      	cmp	r3, #4
 8002144:	d016      	beq.n	8002174 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002146:	68fb      	ldr	r3, [r7, #12]
 8002148:	2200      	movs	r2, #0
 800214a:	631a      	str	r2, [r3, #48]	@ 0x30
 800214c:	68fb      	ldr	r3, [r7, #12]
 800214e:	2220      	movs	r2, #32
 8002150:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002154:	68fb      	ldr	r3, [r7, #12]
 8002156:	2200      	movs	r2, #0
 8002158:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800215c:	68fb      	ldr	r3, [r7, #12]
 800215e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002160:	f043 0220 	orr.w	r2, r3, #32
 8002164:	68fb      	ldr	r3, [r7, #12]
 8002166:	641a      	str	r2, [r3, #64]	@ 0x40
 8002168:	68fb      	ldr	r3, [r7, #12]
 800216a:	2200      	movs	r2, #0
 800216c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002170:	2301      	movs	r3, #1
 8002172:	e007      	b.n	8002184 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002174:	68fb      	ldr	r3, [r7, #12]
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	695b      	ldr	r3, [r3, #20]
 800217a:	f003 0304 	and.w	r3, r3, #4
 800217e:	2b04      	cmp	r3, #4
 8002180:	d1c3      	bne.n	800210a <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002182:	2300      	movs	r3, #0
 8002184:	4618      	mov	r0, r3
 8002186:	3710      	adds	r7, #16
 8002188:	46bd      	mov	sp, r7
 800218a:	bd80      	pop	{r7, pc}

0800218c <I2C_IsAcknowledgeFailed>:
 800218c:	b480      	push	{r7}
 800218e:	b083      	sub	sp, #12
 8002190:	af00      	add	r7, sp, #0
 8002192:	6078      	str	r0, [r7, #4]
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	695b      	ldr	r3, [r3, #20]
 800219a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800219e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80021a2:	d11b      	bne.n	80021dc <I2C_IsAcknowledgeFailed+0x50>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80021ac:	615a      	str	r2, [r3, #20]
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	2200      	movs	r2, #0
 80021b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	2220      	movs	r2, #32
 80021b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	2200      	movs	r2, #0
 80021c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021c8:	f043 0204 	orr.w	r2, r3, #4
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	2200      	movs	r2, #0
 80021d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80021d8:	2301      	movs	r3, #1
 80021da:	e000      	b.n	80021de <I2C_IsAcknowledgeFailed+0x52>
 80021dc:	2300      	movs	r3, #0
 80021de:	4618      	mov	r0, r3
 80021e0:	370c      	adds	r7, #12
 80021e2:	46bd      	mov	sp, r7
 80021e4:	bc80      	pop	{r7}
 80021e6:	4770      	bx	lr

080021e8 <HAL_RCC_OscConfig>:
 80021e8:	b580      	push	{r7, lr}
 80021ea:	b086      	sub	sp, #24
 80021ec:	af00      	add	r7, sp, #0
 80021ee:	6078      	str	r0, [r7, #4]
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	2b00      	cmp	r3, #0
 80021f4:	d101      	bne.n	80021fa <HAL_RCC_OscConfig+0x12>
 80021f6:	2301      	movs	r3, #1
 80021f8:	e272      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f003 0301 	and.w	r3, r3, #1
 8002202:	2b00      	cmp	r3, #0
 8002204:	f000 8087 	beq.w	8002316 <HAL_RCC_OscConfig+0x12e>
 8002208:	4b92      	ldr	r3, [pc, #584]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800220a:	685b      	ldr	r3, [r3, #4]
 800220c:	f003 030c 	and.w	r3, r3, #12
 8002210:	2b04      	cmp	r3, #4
 8002212:	d00c      	beq.n	800222e <HAL_RCC_OscConfig+0x46>
 8002214:	4b8f      	ldr	r3, [pc, #572]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002216:	685b      	ldr	r3, [r3, #4]
 8002218:	f003 030c 	and.w	r3, r3, #12
 800221c:	2b08      	cmp	r3, #8
 800221e:	d112      	bne.n	8002246 <HAL_RCC_OscConfig+0x5e>
 8002220:	4b8c      	ldr	r3, [pc, #560]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002222:	685b      	ldr	r3, [r3, #4]
 8002224:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002228:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800222c:	d10b      	bne.n	8002246 <HAL_RCC_OscConfig+0x5e>
 800222e:	4b89      	ldr	r3, [pc, #548]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002236:	2b00      	cmp	r3, #0
 8002238:	d06c      	beq.n	8002314 <HAL_RCC_OscConfig+0x12c>
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	685b      	ldr	r3, [r3, #4]
 800223e:	2b00      	cmp	r3, #0
 8002240:	d168      	bne.n	8002314 <HAL_RCC_OscConfig+0x12c>
 8002242:	2301      	movs	r3, #1
 8002244:	e24c      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800224e:	d106      	bne.n	800225e <HAL_RCC_OscConfig+0x76>
 8002250:	4b80      	ldr	r3, [pc, #512]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	4a7f      	ldr	r2, [pc, #508]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002256:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800225a:	6013      	str	r3, [r2, #0]
 800225c:	e02e      	b.n	80022bc <HAL_RCC_OscConfig+0xd4>
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	685b      	ldr	r3, [r3, #4]
 8002262:	2b00      	cmp	r3, #0
 8002264:	d10c      	bne.n	8002280 <HAL_RCC_OscConfig+0x98>
 8002266:	4b7b      	ldr	r3, [pc, #492]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	4a7a      	ldr	r2, [pc, #488]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800226c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002270:	6013      	str	r3, [r2, #0]
 8002272:	4b78      	ldr	r3, [pc, #480]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	4a77      	ldr	r2, [pc, #476]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002278:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800227c:	6013      	str	r3, [r2, #0]
 800227e:	e01d      	b.n	80022bc <HAL_RCC_OscConfig+0xd4>
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	685b      	ldr	r3, [r3, #4]
 8002284:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002288:	d10c      	bne.n	80022a4 <HAL_RCC_OscConfig+0xbc>
 800228a:	4b72      	ldr	r3, [pc, #456]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	4a71      	ldr	r2, [pc, #452]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002290:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002294:	6013      	str	r3, [r2, #0]
 8002296:	4b6f      	ldr	r3, [pc, #444]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	4a6e      	ldr	r2, [pc, #440]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800229c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80022a0:	6013      	str	r3, [r2, #0]
 80022a2:	e00b      	b.n	80022bc <HAL_RCC_OscConfig+0xd4>
 80022a4:	4b6b      	ldr	r3, [pc, #428]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4a6a      	ldr	r2, [pc, #424]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022aa:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80022ae:	6013      	str	r3, [r2, #0]
 80022b0:	4b68      	ldr	r3, [pc, #416]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	4a67      	ldr	r2, [pc, #412]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022b6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80022ba:	6013      	str	r3, [r2, #0]
 80022bc:	687b      	ldr	r3, [r7, #4]
 80022be:	685b      	ldr	r3, [r3, #4]
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d013      	beq.n	80022ec <HAL_RCC_OscConfig+0x104>
 80022c4:	f7fe feb4 	bl	8001030 <HAL_GetTick>
 80022c8:	6138      	str	r0, [r7, #16]
 80022ca:	e008      	b.n	80022de <HAL_RCC_OscConfig+0xf6>
 80022cc:	f7fe feb0 	bl	8001030 <HAL_GetTick>
 80022d0:	4602      	mov	r2, r0
 80022d2:	693b      	ldr	r3, [r7, #16]
 80022d4:	1ad3      	subs	r3, r2, r3
 80022d6:	2b64      	cmp	r3, #100	@ 0x64
 80022d8:	d901      	bls.n	80022de <HAL_RCC_OscConfig+0xf6>
 80022da:	2303      	movs	r3, #3
 80022dc:	e200      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80022de:	4b5d      	ldr	r3, [pc, #372]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d0f0      	beq.n	80022cc <HAL_RCC_OscConfig+0xe4>
 80022ea:	e014      	b.n	8002316 <HAL_RCC_OscConfig+0x12e>
 80022ec:	f7fe fea0 	bl	8001030 <HAL_GetTick>
 80022f0:	6138      	str	r0, [r7, #16]
 80022f2:	e008      	b.n	8002306 <HAL_RCC_OscConfig+0x11e>
 80022f4:	f7fe fe9c 	bl	8001030 <HAL_GetTick>
 80022f8:	4602      	mov	r2, r0
 80022fa:	693b      	ldr	r3, [r7, #16]
 80022fc:	1ad3      	subs	r3, r2, r3
 80022fe:	2b64      	cmp	r3, #100	@ 0x64
 8002300:	d901      	bls.n	8002306 <HAL_RCC_OscConfig+0x11e>
 8002302:	2303      	movs	r3, #3
 8002304:	e1ec      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 8002306:	4b53      	ldr	r3, [pc, #332]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800230e:	2b00      	cmp	r3, #0
 8002310:	d1f0      	bne.n	80022f4 <HAL_RCC_OscConfig+0x10c>
 8002312:	e000      	b.n	8002316 <HAL_RCC_OscConfig+0x12e>
 8002314:	bf00      	nop
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	f003 0302 	and.w	r3, r3, #2
 800231e:	2b00      	cmp	r3, #0
 8002320:	d063      	beq.n	80023ea <HAL_RCC_OscConfig+0x202>
 8002322:	4b4c      	ldr	r3, [pc, #304]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002324:	685b      	ldr	r3, [r3, #4]
 8002326:	f003 030c 	and.w	r3, r3, #12
 800232a:	2b00      	cmp	r3, #0
 800232c:	d00b      	beq.n	8002346 <HAL_RCC_OscConfig+0x15e>
 800232e:	4b49      	ldr	r3, [pc, #292]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002330:	685b      	ldr	r3, [r3, #4]
 8002332:	f003 030c 	and.w	r3, r3, #12
 8002336:	2b08      	cmp	r3, #8
 8002338:	d11c      	bne.n	8002374 <HAL_RCC_OscConfig+0x18c>
 800233a:	4b46      	ldr	r3, [pc, #280]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800233c:	685b      	ldr	r3, [r3, #4]
 800233e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002342:	2b00      	cmp	r3, #0
 8002344:	d116      	bne.n	8002374 <HAL_RCC_OscConfig+0x18c>
 8002346:	4b43      	ldr	r3, [pc, #268]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f003 0302 	and.w	r3, r3, #2
 800234e:	2b00      	cmp	r3, #0
 8002350:	d005      	beq.n	800235e <HAL_RCC_OscConfig+0x176>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	691b      	ldr	r3, [r3, #16]
 8002356:	2b01      	cmp	r3, #1
 8002358:	d001      	beq.n	800235e <HAL_RCC_OscConfig+0x176>
 800235a:	2301      	movs	r3, #1
 800235c:	e1c0      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 800235e:	4b3d      	ldr	r3, [pc, #244]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	695b      	ldr	r3, [r3, #20]
 800236a:	00db      	lsls	r3, r3, #3
 800236c:	4939      	ldr	r1, [pc, #228]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800236e:	4313      	orrs	r3, r2
 8002370:	600b      	str	r3, [r1, #0]
 8002372:	e03a      	b.n	80023ea <HAL_RCC_OscConfig+0x202>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	691b      	ldr	r3, [r3, #16]
 8002378:	2b00      	cmp	r3, #0
 800237a:	d020      	beq.n	80023be <HAL_RCC_OscConfig+0x1d6>
 800237c:	4b36      	ldr	r3, [pc, #216]	@ (8002458 <HAL_RCC_OscConfig+0x270>)
 800237e:	2201      	movs	r2, #1
 8002380:	601a      	str	r2, [r3, #0]
 8002382:	f7fe fe55 	bl	8001030 <HAL_GetTick>
 8002386:	6138      	str	r0, [r7, #16]
 8002388:	e008      	b.n	800239c <HAL_RCC_OscConfig+0x1b4>
 800238a:	f7fe fe51 	bl	8001030 <HAL_GetTick>
 800238e:	4602      	mov	r2, r0
 8002390:	693b      	ldr	r3, [r7, #16]
 8002392:	1ad3      	subs	r3, r2, r3
 8002394:	2b02      	cmp	r3, #2
 8002396:	d901      	bls.n	800239c <HAL_RCC_OscConfig+0x1b4>
 8002398:	2303      	movs	r3, #3
 800239a:	e1a1      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 800239c:	4b2d      	ldr	r3, [pc, #180]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	f003 0302 	and.w	r3, r3, #2
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d0f0      	beq.n	800238a <HAL_RCC_OscConfig+0x1a2>
 80023a8:	4b2a      	ldr	r3, [pc, #168]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	695b      	ldr	r3, [r3, #20]
 80023b4:	00db      	lsls	r3, r3, #3
 80023b6:	4927      	ldr	r1, [pc, #156]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80023b8:	4313      	orrs	r3, r2
 80023ba:	600b      	str	r3, [r1, #0]
 80023bc:	e015      	b.n	80023ea <HAL_RCC_OscConfig+0x202>
 80023be:	4b26      	ldr	r3, [pc, #152]	@ (8002458 <HAL_RCC_OscConfig+0x270>)
 80023c0:	2200      	movs	r2, #0
 80023c2:	601a      	str	r2, [r3, #0]
 80023c4:	f7fe fe34 	bl	8001030 <HAL_GetTick>
 80023c8:	6138      	str	r0, [r7, #16]
 80023ca:	e008      	b.n	80023de <HAL_RCC_OscConfig+0x1f6>
 80023cc:	f7fe fe30 	bl	8001030 <HAL_GetTick>
 80023d0:	4602      	mov	r2, r0
 80023d2:	693b      	ldr	r3, [r7, #16]
 80023d4:	1ad3      	subs	r3, r2, r3
 80023d6:	2b02      	cmp	r3, #2
 80023d8:	d901      	bls.n	80023de <HAL_RCC_OscConfig+0x1f6>
 80023da:	2303      	movs	r3, #3
 80023dc:	e180      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80023de:	4b1d      	ldr	r3, [pc, #116]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	f003 0302 	and.w	r3, r3, #2
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	d1f0      	bne.n	80023cc <HAL_RCC_OscConfig+0x1e4>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f003 0308 	and.w	r3, r3, #8
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d03a      	beq.n	800246c <HAL_RCC_OscConfig+0x284>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	699b      	ldr	r3, [r3, #24]
 80023fa:	2b00      	cmp	r3, #0
 80023fc:	d019      	beq.n	8002432 <HAL_RCC_OscConfig+0x24a>
 80023fe:	4b17      	ldr	r3, [pc, #92]	@ (800245c <HAL_RCC_OscConfig+0x274>)
 8002400:	2201      	movs	r2, #1
 8002402:	601a      	str	r2, [r3, #0]
 8002404:	f7fe fe14 	bl	8001030 <HAL_GetTick>
 8002408:	6138      	str	r0, [r7, #16]
 800240a:	e008      	b.n	800241e <HAL_RCC_OscConfig+0x236>
 800240c:	f7fe fe10 	bl	8001030 <HAL_GetTick>
 8002410:	4602      	mov	r2, r0
 8002412:	693b      	ldr	r3, [r7, #16]
 8002414:	1ad3      	subs	r3, r2, r3
 8002416:	2b02      	cmp	r3, #2
 8002418:	d901      	bls.n	800241e <HAL_RCC_OscConfig+0x236>
 800241a:	2303      	movs	r3, #3
 800241c:	e160      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 800241e:	4b0d      	ldr	r3, [pc, #52]	@ (8002454 <HAL_RCC_OscConfig+0x26c>)
 8002420:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002422:	f003 0302 	and.w	r3, r3, #2
 8002426:	2b00      	cmp	r3, #0
 8002428:	d0f0      	beq.n	800240c <HAL_RCC_OscConfig+0x224>
 800242a:	2001      	movs	r0, #1
 800242c:	f000 face 	bl	80029cc <RCC_Delay>
 8002430:	e01c      	b.n	800246c <HAL_RCC_OscConfig+0x284>
 8002432:	4b0a      	ldr	r3, [pc, #40]	@ (800245c <HAL_RCC_OscConfig+0x274>)
 8002434:	2200      	movs	r2, #0
 8002436:	601a      	str	r2, [r3, #0]
 8002438:	f7fe fdfa 	bl	8001030 <HAL_GetTick>
 800243c:	6138      	str	r0, [r7, #16]
 800243e:	e00f      	b.n	8002460 <HAL_RCC_OscConfig+0x278>
 8002440:	f7fe fdf6 	bl	8001030 <HAL_GetTick>
 8002444:	4602      	mov	r2, r0
 8002446:	693b      	ldr	r3, [r7, #16]
 8002448:	1ad3      	subs	r3, r2, r3
 800244a:	2b02      	cmp	r3, #2
 800244c:	d908      	bls.n	8002460 <HAL_RCC_OscConfig+0x278>
 800244e:	2303      	movs	r3, #3
 8002450:	e146      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 8002452:	bf00      	nop
 8002454:	40021000 	.word	0x40021000
 8002458:	42420000 	.word	0x42420000
 800245c:	42420480 	.word	0x42420480
 8002460:	4b92      	ldr	r3, [pc, #584]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002462:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002464:	f003 0302 	and.w	r3, r3, #2
 8002468:	2b00      	cmp	r3, #0
 800246a:	d1e9      	bne.n	8002440 <HAL_RCC_OscConfig+0x258>
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	f003 0304 	and.w	r3, r3, #4
 8002474:	2b00      	cmp	r3, #0
 8002476:	f000 80a6 	beq.w	80025c6 <HAL_RCC_OscConfig+0x3de>
 800247a:	2300      	movs	r3, #0
 800247c:	75fb      	strb	r3, [r7, #23]
 800247e:	4b8b      	ldr	r3, [pc, #556]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002480:	69db      	ldr	r3, [r3, #28]
 8002482:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002486:	2b00      	cmp	r3, #0
 8002488:	d10d      	bne.n	80024a6 <HAL_RCC_OscConfig+0x2be>
 800248a:	4b88      	ldr	r3, [pc, #544]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 800248c:	69db      	ldr	r3, [r3, #28]
 800248e:	4a87      	ldr	r2, [pc, #540]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002490:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002494:	61d3      	str	r3, [r2, #28]
 8002496:	4b85      	ldr	r3, [pc, #532]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002498:	69db      	ldr	r3, [r3, #28]
 800249a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800249e:	60bb      	str	r3, [r7, #8]
 80024a0:	68bb      	ldr	r3, [r7, #8]
 80024a2:	2301      	movs	r3, #1
 80024a4:	75fb      	strb	r3, [r7, #23]
 80024a6:	4b82      	ldr	r3, [pc, #520]	@ (80026b0 <HAL_RCC_OscConfig+0x4c8>)
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d118      	bne.n	80024e4 <HAL_RCC_OscConfig+0x2fc>
 80024b2:	4b7f      	ldr	r3, [pc, #508]	@ (80026b0 <HAL_RCC_OscConfig+0x4c8>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	4a7e      	ldr	r2, [pc, #504]	@ (80026b0 <HAL_RCC_OscConfig+0x4c8>)
 80024b8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80024bc:	6013      	str	r3, [r2, #0]
 80024be:	f7fe fdb7 	bl	8001030 <HAL_GetTick>
 80024c2:	6138      	str	r0, [r7, #16]
 80024c4:	e008      	b.n	80024d8 <HAL_RCC_OscConfig+0x2f0>
 80024c6:	f7fe fdb3 	bl	8001030 <HAL_GetTick>
 80024ca:	4602      	mov	r2, r0
 80024cc:	693b      	ldr	r3, [r7, #16]
 80024ce:	1ad3      	subs	r3, r2, r3
 80024d0:	2b64      	cmp	r3, #100	@ 0x64
 80024d2:	d901      	bls.n	80024d8 <HAL_RCC_OscConfig+0x2f0>
 80024d4:	2303      	movs	r3, #3
 80024d6:	e103      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80024d8:	4b75      	ldr	r3, [pc, #468]	@ (80026b0 <HAL_RCC_OscConfig+0x4c8>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80024e0:	2b00      	cmp	r3, #0
 80024e2:	d0f0      	beq.n	80024c6 <HAL_RCC_OscConfig+0x2de>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	68db      	ldr	r3, [r3, #12]
 80024e8:	2b01      	cmp	r3, #1
 80024ea:	d106      	bne.n	80024fa <HAL_RCC_OscConfig+0x312>
 80024ec:	4b6f      	ldr	r3, [pc, #444]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 80024ee:	6a1b      	ldr	r3, [r3, #32]
 80024f0:	4a6e      	ldr	r2, [pc, #440]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 80024f2:	f043 0301 	orr.w	r3, r3, #1
 80024f6:	6213      	str	r3, [r2, #32]
 80024f8:	e02d      	b.n	8002556 <HAL_RCC_OscConfig+0x36e>
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	68db      	ldr	r3, [r3, #12]
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d10c      	bne.n	800251c <HAL_RCC_OscConfig+0x334>
 8002502:	4b6a      	ldr	r3, [pc, #424]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002504:	6a1b      	ldr	r3, [r3, #32]
 8002506:	4a69      	ldr	r2, [pc, #420]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002508:	f023 0301 	bic.w	r3, r3, #1
 800250c:	6213      	str	r3, [r2, #32]
 800250e:	4b67      	ldr	r3, [pc, #412]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002510:	6a1b      	ldr	r3, [r3, #32]
 8002512:	4a66      	ldr	r2, [pc, #408]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002514:	f023 0304 	bic.w	r3, r3, #4
 8002518:	6213      	str	r3, [r2, #32]
 800251a:	e01c      	b.n	8002556 <HAL_RCC_OscConfig+0x36e>
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	68db      	ldr	r3, [r3, #12]
 8002520:	2b05      	cmp	r3, #5
 8002522:	d10c      	bne.n	800253e <HAL_RCC_OscConfig+0x356>
 8002524:	4b61      	ldr	r3, [pc, #388]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002526:	6a1b      	ldr	r3, [r3, #32]
 8002528:	4a60      	ldr	r2, [pc, #384]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 800252a:	f043 0304 	orr.w	r3, r3, #4
 800252e:	6213      	str	r3, [r2, #32]
 8002530:	4b5e      	ldr	r3, [pc, #376]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002532:	6a1b      	ldr	r3, [r3, #32]
 8002534:	4a5d      	ldr	r2, [pc, #372]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002536:	f043 0301 	orr.w	r3, r3, #1
 800253a:	6213      	str	r3, [r2, #32]
 800253c:	e00b      	b.n	8002556 <HAL_RCC_OscConfig+0x36e>
 800253e:	4b5b      	ldr	r3, [pc, #364]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002540:	6a1b      	ldr	r3, [r3, #32]
 8002542:	4a5a      	ldr	r2, [pc, #360]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002544:	f023 0301 	bic.w	r3, r3, #1
 8002548:	6213      	str	r3, [r2, #32]
 800254a:	4b58      	ldr	r3, [pc, #352]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 800254c:	6a1b      	ldr	r3, [r3, #32]
 800254e:	4a57      	ldr	r2, [pc, #348]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002550:	f023 0304 	bic.w	r3, r3, #4
 8002554:	6213      	str	r3, [r2, #32]
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	68db      	ldr	r3, [r3, #12]
 800255a:	2b00      	cmp	r3, #0
 800255c:	d015      	beq.n	800258a <HAL_RCC_OscConfig+0x3a2>
 800255e:	f7fe fd67 	bl	8001030 <HAL_GetTick>
 8002562:	6138      	str	r0, [r7, #16]
 8002564:	e00a      	b.n	800257c <HAL_RCC_OscConfig+0x394>
 8002566:	f7fe fd63 	bl	8001030 <HAL_GetTick>
 800256a:	4602      	mov	r2, r0
 800256c:	693b      	ldr	r3, [r7, #16]
 800256e:	1ad3      	subs	r3, r2, r3
 8002570:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002574:	4293      	cmp	r3, r2
 8002576:	d901      	bls.n	800257c <HAL_RCC_OscConfig+0x394>
 8002578:	2303      	movs	r3, #3
 800257a:	e0b1      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 800257c:	4b4b      	ldr	r3, [pc, #300]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 800257e:	6a1b      	ldr	r3, [r3, #32]
 8002580:	f003 0302 	and.w	r3, r3, #2
 8002584:	2b00      	cmp	r3, #0
 8002586:	d0ee      	beq.n	8002566 <HAL_RCC_OscConfig+0x37e>
 8002588:	e014      	b.n	80025b4 <HAL_RCC_OscConfig+0x3cc>
 800258a:	f7fe fd51 	bl	8001030 <HAL_GetTick>
 800258e:	6138      	str	r0, [r7, #16]
 8002590:	e00a      	b.n	80025a8 <HAL_RCC_OscConfig+0x3c0>
 8002592:	f7fe fd4d 	bl	8001030 <HAL_GetTick>
 8002596:	4602      	mov	r2, r0
 8002598:	693b      	ldr	r3, [r7, #16]
 800259a:	1ad3      	subs	r3, r2, r3
 800259c:	f241 3288 	movw	r2, #5000	@ 0x1388
 80025a0:	4293      	cmp	r3, r2
 80025a2:	d901      	bls.n	80025a8 <HAL_RCC_OscConfig+0x3c0>
 80025a4:	2303      	movs	r3, #3
 80025a6:	e09b      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80025a8:	4b40      	ldr	r3, [pc, #256]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 80025aa:	6a1b      	ldr	r3, [r3, #32]
 80025ac:	f003 0302 	and.w	r3, r3, #2
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d1ee      	bne.n	8002592 <HAL_RCC_OscConfig+0x3aa>
 80025b4:	7dfb      	ldrb	r3, [r7, #23]
 80025b6:	2b01      	cmp	r3, #1
 80025b8:	d105      	bne.n	80025c6 <HAL_RCC_OscConfig+0x3de>
 80025ba:	4b3c      	ldr	r3, [pc, #240]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 80025bc:	69db      	ldr	r3, [r3, #28]
 80025be:	4a3b      	ldr	r2, [pc, #236]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 80025c0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80025c4:	61d3      	str	r3, [r2, #28]
 80025c6:	687b      	ldr	r3, [r7, #4]
 80025c8:	69db      	ldr	r3, [r3, #28]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	f000 8087 	beq.w	80026de <HAL_RCC_OscConfig+0x4f6>
 80025d0:	4b36      	ldr	r3, [pc, #216]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 80025d2:	685b      	ldr	r3, [r3, #4]
 80025d4:	f003 030c 	and.w	r3, r3, #12
 80025d8:	2b08      	cmp	r3, #8
 80025da:	d061      	beq.n	80026a0 <HAL_RCC_OscConfig+0x4b8>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	69db      	ldr	r3, [r3, #28]
 80025e0:	2b02      	cmp	r3, #2
 80025e2:	d146      	bne.n	8002672 <HAL_RCC_OscConfig+0x48a>
 80025e4:	4b33      	ldr	r3, [pc, #204]	@ (80026b4 <HAL_RCC_OscConfig+0x4cc>)
 80025e6:	2200      	movs	r2, #0
 80025e8:	601a      	str	r2, [r3, #0]
 80025ea:	f7fe fd21 	bl	8001030 <HAL_GetTick>
 80025ee:	6138      	str	r0, [r7, #16]
 80025f0:	e008      	b.n	8002604 <HAL_RCC_OscConfig+0x41c>
 80025f2:	f7fe fd1d 	bl	8001030 <HAL_GetTick>
 80025f6:	4602      	mov	r2, r0
 80025f8:	693b      	ldr	r3, [r7, #16]
 80025fa:	1ad3      	subs	r3, r2, r3
 80025fc:	2b02      	cmp	r3, #2
 80025fe:	d901      	bls.n	8002604 <HAL_RCC_OscConfig+0x41c>
 8002600:	2303      	movs	r3, #3
 8002602:	e06d      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 8002604:	4b29      	ldr	r3, [pc, #164]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800260c:	2b00      	cmp	r3, #0
 800260e:	d1f0      	bne.n	80025f2 <HAL_RCC_OscConfig+0x40a>
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	6a1b      	ldr	r3, [r3, #32]
 8002614:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002618:	d108      	bne.n	800262c <HAL_RCC_OscConfig+0x444>
 800261a:	4b24      	ldr	r3, [pc, #144]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 800261c:	685b      	ldr	r3, [r3, #4]
 800261e:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	689b      	ldr	r3, [r3, #8]
 8002626:	4921      	ldr	r1, [pc, #132]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002628:	4313      	orrs	r3, r2
 800262a:	604b      	str	r3, [r1, #4]
 800262c:	4b1f      	ldr	r3, [pc, #124]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 800262e:	685b      	ldr	r3, [r3, #4]
 8002630:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	6a19      	ldr	r1, [r3, #32]
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800263c:	430b      	orrs	r3, r1
 800263e:	491b      	ldr	r1, [pc, #108]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002640:	4313      	orrs	r3, r2
 8002642:	604b      	str	r3, [r1, #4]
 8002644:	4b1b      	ldr	r3, [pc, #108]	@ (80026b4 <HAL_RCC_OscConfig+0x4cc>)
 8002646:	2201      	movs	r2, #1
 8002648:	601a      	str	r2, [r3, #0]
 800264a:	f7fe fcf1 	bl	8001030 <HAL_GetTick>
 800264e:	6138      	str	r0, [r7, #16]
 8002650:	e008      	b.n	8002664 <HAL_RCC_OscConfig+0x47c>
 8002652:	f7fe fced 	bl	8001030 <HAL_GetTick>
 8002656:	4602      	mov	r2, r0
 8002658:	693b      	ldr	r3, [r7, #16]
 800265a:	1ad3      	subs	r3, r2, r3
 800265c:	2b02      	cmp	r3, #2
 800265e:	d901      	bls.n	8002664 <HAL_RCC_OscConfig+0x47c>
 8002660:	2303      	movs	r3, #3
 8002662:	e03d      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 8002664:	4b11      	ldr	r3, [pc, #68]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800266c:	2b00      	cmp	r3, #0
 800266e:	d0f0      	beq.n	8002652 <HAL_RCC_OscConfig+0x46a>
 8002670:	e035      	b.n	80026de <HAL_RCC_OscConfig+0x4f6>
 8002672:	4b10      	ldr	r3, [pc, #64]	@ (80026b4 <HAL_RCC_OscConfig+0x4cc>)
 8002674:	2200      	movs	r2, #0
 8002676:	601a      	str	r2, [r3, #0]
 8002678:	f7fe fcda 	bl	8001030 <HAL_GetTick>
 800267c:	6138      	str	r0, [r7, #16]
 800267e:	e008      	b.n	8002692 <HAL_RCC_OscConfig+0x4aa>
 8002680:	f7fe fcd6 	bl	8001030 <HAL_GetTick>
 8002684:	4602      	mov	r2, r0
 8002686:	693b      	ldr	r3, [r7, #16]
 8002688:	1ad3      	subs	r3, r2, r3
 800268a:	2b02      	cmp	r3, #2
 800268c:	d901      	bls.n	8002692 <HAL_RCC_OscConfig+0x4aa>
 800268e:	2303      	movs	r3, #3
 8002690:	e026      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 8002692:	4b06      	ldr	r3, [pc, #24]	@ (80026ac <HAL_RCC_OscConfig+0x4c4>)
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800269a:	2b00      	cmp	r3, #0
 800269c:	d1f0      	bne.n	8002680 <HAL_RCC_OscConfig+0x498>
 800269e:	e01e      	b.n	80026de <HAL_RCC_OscConfig+0x4f6>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	69db      	ldr	r3, [r3, #28]
 80026a4:	2b01      	cmp	r3, #1
 80026a6:	d107      	bne.n	80026b8 <HAL_RCC_OscConfig+0x4d0>
 80026a8:	2301      	movs	r3, #1
 80026aa:	e019      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80026ac:	40021000 	.word	0x40021000
 80026b0:	40007000 	.word	0x40007000
 80026b4:	42420060 	.word	0x42420060
 80026b8:	4b0b      	ldr	r3, [pc, #44]	@ (80026e8 <HAL_RCC_OscConfig+0x500>)
 80026ba:	685b      	ldr	r3, [r3, #4]
 80026bc:	60fb      	str	r3, [r7, #12]
 80026be:	68fb      	ldr	r3, [r7, #12]
 80026c0:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	6a1b      	ldr	r3, [r3, #32]
 80026c8:	429a      	cmp	r2, r3
 80026ca:	d106      	bne.n	80026da <HAL_RCC_OscConfig+0x4f2>
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80026d6:	429a      	cmp	r2, r3
 80026d8:	d001      	beq.n	80026de <HAL_RCC_OscConfig+0x4f6>
 80026da:	2301      	movs	r3, #1
 80026dc:	e000      	b.n	80026e0 <HAL_RCC_OscConfig+0x4f8>
 80026de:	2300      	movs	r3, #0
 80026e0:	4618      	mov	r0, r3
 80026e2:	3718      	adds	r7, #24
 80026e4:	46bd      	mov	sp, r7
 80026e6:	bd80      	pop	{r7, pc}
 80026e8:	40021000 	.word	0x40021000

080026ec <HAL_RCC_ClockConfig>:
 80026ec:	b580      	push	{r7, lr}
 80026ee:	b084      	sub	sp, #16
 80026f0:	af00      	add	r7, sp, #0
 80026f2:	6078      	str	r0, [r7, #4]
 80026f4:	6039      	str	r1, [r7, #0]
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d101      	bne.n	8002700 <HAL_RCC_ClockConfig+0x14>
 80026fc:	2301      	movs	r3, #1
 80026fe:	e0d0      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 8002700:	4b6a      	ldr	r3, [pc, #424]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	f003 0307 	and.w	r3, r3, #7
 8002708:	683a      	ldr	r2, [r7, #0]
 800270a:	429a      	cmp	r2, r3
 800270c:	d910      	bls.n	8002730 <HAL_RCC_ClockConfig+0x44>
 800270e:	4b67      	ldr	r3, [pc, #412]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	f023 0207 	bic.w	r2, r3, #7
 8002716:	4965      	ldr	r1, [pc, #404]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 8002718:	683b      	ldr	r3, [r7, #0]
 800271a:	4313      	orrs	r3, r2
 800271c:	600b      	str	r3, [r1, #0]
 800271e:	4b63      	ldr	r3, [pc, #396]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	f003 0307 	and.w	r3, r3, #7
 8002726:	683a      	ldr	r2, [r7, #0]
 8002728:	429a      	cmp	r2, r3
 800272a:	d001      	beq.n	8002730 <HAL_RCC_ClockConfig+0x44>
 800272c:	2301      	movs	r3, #1
 800272e:	e0b8      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	f003 0302 	and.w	r3, r3, #2
 8002738:	2b00      	cmp	r3, #0
 800273a:	d020      	beq.n	800277e <HAL_RCC_ClockConfig+0x92>
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	f003 0304 	and.w	r3, r3, #4
 8002744:	2b00      	cmp	r3, #0
 8002746:	d005      	beq.n	8002754 <HAL_RCC_ClockConfig+0x68>
 8002748:	4b59      	ldr	r3, [pc, #356]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 800274a:	685b      	ldr	r3, [r3, #4]
 800274c:	4a58      	ldr	r2, [pc, #352]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 800274e:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002752:	6053      	str	r3, [r2, #4]
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	f003 0308 	and.w	r3, r3, #8
 800275c:	2b00      	cmp	r3, #0
 800275e:	d005      	beq.n	800276c <HAL_RCC_ClockConfig+0x80>
 8002760:	4b53      	ldr	r3, [pc, #332]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002762:	685b      	ldr	r3, [r3, #4]
 8002764:	4a52      	ldr	r2, [pc, #328]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002766:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 800276a:	6053      	str	r3, [r2, #4]
 800276c:	4b50      	ldr	r3, [pc, #320]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 800276e:	685b      	ldr	r3, [r3, #4]
 8002770:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	689b      	ldr	r3, [r3, #8]
 8002778:	494d      	ldr	r1, [pc, #308]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 800277a:	4313      	orrs	r3, r2
 800277c:	604b      	str	r3, [r1, #4]
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	f003 0301 	and.w	r3, r3, #1
 8002786:	2b00      	cmp	r3, #0
 8002788:	d040      	beq.n	800280c <HAL_RCC_ClockConfig+0x120>
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	685b      	ldr	r3, [r3, #4]
 800278e:	2b01      	cmp	r3, #1
 8002790:	d107      	bne.n	80027a2 <HAL_RCC_ClockConfig+0xb6>
 8002792:	4b47      	ldr	r3, [pc, #284]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800279a:	2b00      	cmp	r3, #0
 800279c:	d115      	bne.n	80027ca <HAL_RCC_ClockConfig+0xde>
 800279e:	2301      	movs	r3, #1
 80027a0:	e07f      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	685b      	ldr	r3, [r3, #4]
 80027a6:	2b02      	cmp	r3, #2
 80027a8:	d107      	bne.n	80027ba <HAL_RCC_ClockConfig+0xce>
 80027aa:	4b41      	ldr	r3, [pc, #260]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	d109      	bne.n	80027ca <HAL_RCC_ClockConfig+0xde>
 80027b6:	2301      	movs	r3, #1
 80027b8:	e073      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 80027ba:	4b3d      	ldr	r3, [pc, #244]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	f003 0302 	and.w	r3, r3, #2
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d101      	bne.n	80027ca <HAL_RCC_ClockConfig+0xde>
 80027c6:	2301      	movs	r3, #1
 80027c8:	e06b      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 80027ca:	4b39      	ldr	r3, [pc, #228]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 80027cc:	685b      	ldr	r3, [r3, #4]
 80027ce:	f023 0203 	bic.w	r2, r3, #3
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	685b      	ldr	r3, [r3, #4]
 80027d6:	4936      	ldr	r1, [pc, #216]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 80027d8:	4313      	orrs	r3, r2
 80027da:	604b      	str	r3, [r1, #4]
 80027dc:	f7fe fc28 	bl	8001030 <HAL_GetTick>
 80027e0:	60f8      	str	r0, [r7, #12]
 80027e2:	e00a      	b.n	80027fa <HAL_RCC_ClockConfig+0x10e>
 80027e4:	f7fe fc24 	bl	8001030 <HAL_GetTick>
 80027e8:	4602      	mov	r2, r0
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	1ad3      	subs	r3, r2, r3
 80027ee:	f241 3288 	movw	r2, #5000	@ 0x1388
 80027f2:	4293      	cmp	r3, r2
 80027f4:	d901      	bls.n	80027fa <HAL_RCC_ClockConfig+0x10e>
 80027f6:	2303      	movs	r3, #3
 80027f8:	e053      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 80027fa:	4b2d      	ldr	r3, [pc, #180]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 80027fc:	685b      	ldr	r3, [r3, #4]
 80027fe:	f003 020c 	and.w	r2, r3, #12
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	685b      	ldr	r3, [r3, #4]
 8002806:	009b      	lsls	r3, r3, #2
 8002808:	429a      	cmp	r2, r3
 800280a:	d1eb      	bne.n	80027e4 <HAL_RCC_ClockConfig+0xf8>
 800280c:	4b27      	ldr	r3, [pc, #156]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	f003 0307 	and.w	r3, r3, #7
 8002814:	683a      	ldr	r2, [r7, #0]
 8002816:	429a      	cmp	r2, r3
 8002818:	d210      	bcs.n	800283c <HAL_RCC_ClockConfig+0x150>
 800281a:	4b24      	ldr	r3, [pc, #144]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	f023 0207 	bic.w	r2, r3, #7
 8002822:	4922      	ldr	r1, [pc, #136]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 8002824:	683b      	ldr	r3, [r7, #0]
 8002826:	4313      	orrs	r3, r2
 8002828:	600b      	str	r3, [r1, #0]
 800282a:	4b20      	ldr	r3, [pc, #128]	@ (80028ac <HAL_RCC_ClockConfig+0x1c0>)
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f003 0307 	and.w	r3, r3, #7
 8002832:	683a      	ldr	r2, [r7, #0]
 8002834:	429a      	cmp	r2, r3
 8002836:	d001      	beq.n	800283c <HAL_RCC_ClockConfig+0x150>
 8002838:	2301      	movs	r3, #1
 800283a:	e032      	b.n	80028a2 <HAL_RCC_ClockConfig+0x1b6>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	f003 0304 	and.w	r3, r3, #4
 8002844:	2b00      	cmp	r3, #0
 8002846:	d008      	beq.n	800285a <HAL_RCC_ClockConfig+0x16e>
 8002848:	4b19      	ldr	r3, [pc, #100]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 800284a:	685b      	ldr	r3, [r3, #4]
 800284c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	68db      	ldr	r3, [r3, #12]
 8002854:	4916      	ldr	r1, [pc, #88]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002856:	4313      	orrs	r3, r2
 8002858:	604b      	str	r3, [r1, #4]
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	681b      	ldr	r3, [r3, #0]
 800285e:	f003 0308 	and.w	r3, r3, #8
 8002862:	2b00      	cmp	r3, #0
 8002864:	d009      	beq.n	800287a <HAL_RCC_ClockConfig+0x18e>
 8002866:	4b12      	ldr	r3, [pc, #72]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002868:	685b      	ldr	r3, [r3, #4]
 800286a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	691b      	ldr	r3, [r3, #16]
 8002872:	00db      	lsls	r3, r3, #3
 8002874:	490e      	ldr	r1, [pc, #56]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002876:	4313      	orrs	r3, r2
 8002878:	604b      	str	r3, [r1, #4]
 800287a:	f000 f821 	bl	80028c0 <HAL_RCC_GetSysClockFreq>
 800287e:	4602      	mov	r2, r0
 8002880:	4b0b      	ldr	r3, [pc, #44]	@ (80028b0 <HAL_RCC_ClockConfig+0x1c4>)
 8002882:	685b      	ldr	r3, [r3, #4]
 8002884:	091b      	lsrs	r3, r3, #4
 8002886:	f003 030f 	and.w	r3, r3, #15
 800288a:	490a      	ldr	r1, [pc, #40]	@ (80028b4 <HAL_RCC_ClockConfig+0x1c8>)
 800288c:	5ccb      	ldrb	r3, [r1, r3]
 800288e:	fa22 f303 	lsr.w	r3, r2, r3
 8002892:	4a09      	ldr	r2, [pc, #36]	@ (80028b8 <HAL_RCC_ClockConfig+0x1cc>)
 8002894:	6013      	str	r3, [r2, #0]
 8002896:	4b09      	ldr	r3, [pc, #36]	@ (80028bc <HAL_RCC_ClockConfig+0x1d0>)
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	4618      	mov	r0, r3
 800289c:	f7fe fb86 	bl	8000fac <HAL_InitTick>
 80028a0:	2300      	movs	r3, #0
 80028a2:	4618      	mov	r0, r3
 80028a4:	3710      	adds	r7, #16
 80028a6:	46bd      	mov	sp, r7
 80028a8:	bd80      	pop	{r7, pc}
 80028aa:	bf00      	nop
 80028ac:	40022000 	.word	0x40022000
 80028b0:	40021000 	.word	0x40021000
 80028b4:	08004784 	.word	0x08004784
 80028b8:	20000000 	.word	0x20000000
 80028bc:	20000004 	.word	0x20000004

080028c0 <HAL_RCC_GetSysClockFreq>:
 80028c0:	b480      	push	{r7}
 80028c2:	b087      	sub	sp, #28
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	2300      	movs	r3, #0
 80028c8:	60fb      	str	r3, [r7, #12]
 80028ca:	2300      	movs	r3, #0
 80028cc:	60bb      	str	r3, [r7, #8]
 80028ce:	2300      	movs	r3, #0
 80028d0:	617b      	str	r3, [r7, #20]
 80028d2:	2300      	movs	r3, #0
 80028d4:	607b      	str	r3, [r7, #4]
 80028d6:	2300      	movs	r3, #0
 80028d8:	613b      	str	r3, [r7, #16]
 80028da:	4b1e      	ldr	r3, [pc, #120]	@ (8002954 <HAL_RCC_GetSysClockFreq+0x94>)
 80028dc:	685b      	ldr	r3, [r3, #4]
 80028de:	60fb      	str	r3, [r7, #12]
 80028e0:	68fb      	ldr	r3, [r7, #12]
 80028e2:	f003 030c 	and.w	r3, r3, #12
 80028e6:	2b04      	cmp	r3, #4
 80028e8:	d002      	beq.n	80028f0 <HAL_RCC_GetSysClockFreq+0x30>
 80028ea:	2b08      	cmp	r3, #8
 80028ec:	d003      	beq.n	80028f6 <HAL_RCC_GetSysClockFreq+0x36>
 80028ee:	e027      	b.n	8002940 <HAL_RCC_GetSysClockFreq+0x80>
 80028f0:	4b19      	ldr	r3, [pc, #100]	@ (8002958 <HAL_RCC_GetSysClockFreq+0x98>)
 80028f2:	613b      	str	r3, [r7, #16]
 80028f4:	e027      	b.n	8002946 <HAL_RCC_GetSysClockFreq+0x86>
 80028f6:	68fb      	ldr	r3, [r7, #12]
 80028f8:	0c9b      	lsrs	r3, r3, #18
 80028fa:	f003 030f 	and.w	r3, r3, #15
 80028fe:	4a17      	ldr	r2, [pc, #92]	@ (800295c <HAL_RCC_GetSysClockFreq+0x9c>)
 8002900:	5cd3      	ldrb	r3, [r2, r3]
 8002902:	607b      	str	r3, [r7, #4]
 8002904:	68fb      	ldr	r3, [r7, #12]
 8002906:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800290a:	2b00      	cmp	r3, #0
 800290c:	d010      	beq.n	8002930 <HAL_RCC_GetSysClockFreq+0x70>
 800290e:	4b11      	ldr	r3, [pc, #68]	@ (8002954 <HAL_RCC_GetSysClockFreq+0x94>)
 8002910:	685b      	ldr	r3, [r3, #4]
 8002912:	0c5b      	lsrs	r3, r3, #17
 8002914:	f003 0301 	and.w	r3, r3, #1
 8002918:	4a11      	ldr	r2, [pc, #68]	@ (8002960 <HAL_RCC_GetSysClockFreq+0xa0>)
 800291a:	5cd3      	ldrb	r3, [r2, r3]
 800291c:	60bb      	str	r3, [r7, #8]
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	4a0d      	ldr	r2, [pc, #52]	@ (8002958 <HAL_RCC_GetSysClockFreq+0x98>)
 8002922:	fb03 f202 	mul.w	r2, r3, r2
 8002926:	68bb      	ldr	r3, [r7, #8]
 8002928:	fbb2 f3f3 	udiv	r3, r2, r3
 800292c:	617b      	str	r3, [r7, #20]
 800292e:	e004      	b.n	800293a <HAL_RCC_GetSysClockFreq+0x7a>
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	4a0c      	ldr	r2, [pc, #48]	@ (8002964 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002934:	fb02 f303 	mul.w	r3, r2, r3
 8002938:	617b      	str	r3, [r7, #20]
 800293a:	697b      	ldr	r3, [r7, #20]
 800293c:	613b      	str	r3, [r7, #16]
 800293e:	e002      	b.n	8002946 <HAL_RCC_GetSysClockFreq+0x86>
 8002940:	4b05      	ldr	r3, [pc, #20]	@ (8002958 <HAL_RCC_GetSysClockFreq+0x98>)
 8002942:	613b      	str	r3, [r7, #16]
 8002944:	bf00      	nop
 8002946:	693b      	ldr	r3, [r7, #16]
 8002948:	4618      	mov	r0, r3
 800294a:	371c      	adds	r7, #28
 800294c:	46bd      	mov	sp, r7
 800294e:	bc80      	pop	{r7}
 8002950:	4770      	bx	lr
 8002952:	bf00      	nop
 8002954:	40021000 	.word	0x40021000
 8002958:	007a1200 	.word	0x007a1200
 800295c:	0800479c 	.word	0x0800479c
 8002960:	080047ac 	.word	0x080047ac
 8002964:	003d0900 	.word	0x003d0900

08002968 <HAL_RCC_GetHCLKFreq>:
 8002968:	b480      	push	{r7}
 800296a:	af00      	add	r7, sp, #0
 800296c:	4b02      	ldr	r3, [pc, #8]	@ (8002978 <HAL_RCC_GetHCLKFreq+0x10>)
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	4618      	mov	r0, r3
 8002972:	46bd      	mov	sp, r7
 8002974:	bc80      	pop	{r7}
 8002976:	4770      	bx	lr
 8002978:	20000000 	.word	0x20000000

0800297c <HAL_RCC_GetPCLK1Freq>:
 800297c:	b580      	push	{r7, lr}
 800297e:	af00      	add	r7, sp, #0
 8002980:	f7ff fff2 	bl	8002968 <HAL_RCC_GetHCLKFreq>
 8002984:	4602      	mov	r2, r0
 8002986:	4b05      	ldr	r3, [pc, #20]	@ (800299c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002988:	685b      	ldr	r3, [r3, #4]
 800298a:	0a1b      	lsrs	r3, r3, #8
 800298c:	f003 0307 	and.w	r3, r3, #7
 8002990:	4903      	ldr	r1, [pc, #12]	@ (80029a0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002992:	5ccb      	ldrb	r3, [r1, r3]
 8002994:	fa22 f303 	lsr.w	r3, r2, r3
 8002998:	4618      	mov	r0, r3
 800299a:	bd80      	pop	{r7, pc}
 800299c:	40021000 	.word	0x40021000
 80029a0:	08004794 	.word	0x08004794

080029a4 <HAL_RCC_GetPCLK2Freq>:
 80029a4:	b580      	push	{r7, lr}
 80029a6:	af00      	add	r7, sp, #0
 80029a8:	f7ff ffde 	bl	8002968 <HAL_RCC_GetHCLKFreq>
 80029ac:	4602      	mov	r2, r0
 80029ae:	4b05      	ldr	r3, [pc, #20]	@ (80029c4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80029b0:	685b      	ldr	r3, [r3, #4]
 80029b2:	0adb      	lsrs	r3, r3, #11
 80029b4:	f003 0307 	and.w	r3, r3, #7
 80029b8:	4903      	ldr	r1, [pc, #12]	@ (80029c8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80029ba:	5ccb      	ldrb	r3, [r1, r3]
 80029bc:	fa22 f303 	lsr.w	r3, r2, r3
 80029c0:	4618      	mov	r0, r3
 80029c2:	bd80      	pop	{r7, pc}
 80029c4:	40021000 	.word	0x40021000
 80029c8:	08004794 	.word	0x08004794

080029cc <RCC_Delay>:
 80029cc:	b480      	push	{r7}
 80029ce:	b085      	sub	sp, #20
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]
 80029d4:	4b0a      	ldr	r3, [pc, #40]	@ (8002a00 <RCC_Delay+0x34>)
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	4a0a      	ldr	r2, [pc, #40]	@ (8002a04 <RCC_Delay+0x38>)
 80029da:	fba2 2303 	umull	r2, r3, r2, r3
 80029de:	0a5b      	lsrs	r3, r3, #9
 80029e0:	687a      	ldr	r2, [r7, #4]
 80029e2:	fb02 f303 	mul.w	r3, r2, r3
 80029e6:	60fb      	str	r3, [r7, #12]
 80029e8:	bf00      	nop
 80029ea:	68fb      	ldr	r3, [r7, #12]
 80029ec:	1e5a      	subs	r2, r3, #1
 80029ee:	60fa      	str	r2, [r7, #12]
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d1f9      	bne.n	80029e8 <RCC_Delay+0x1c>
 80029f4:	bf00      	nop
 80029f6:	bf00      	nop
 80029f8:	3714      	adds	r7, #20
 80029fa:	46bd      	mov	sp, r7
 80029fc:	bc80      	pop	{r7}
 80029fe:	4770      	bx	lr
 8002a00:	20000000 	.word	0x20000000
 8002a04:	10624dd3 	.word	0x10624dd3

08002a08 <HAL_TIM_Base_Init>:
 8002a08:	b580      	push	{r7, lr}
 8002a0a:	b082      	sub	sp, #8
 8002a0c:	af00      	add	r7, sp, #0
 8002a0e:	6078      	str	r0, [r7, #4]
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d101      	bne.n	8002a1a <HAL_TIM_Base_Init+0x12>
 8002a16:	2301      	movs	r3, #1
 8002a18:	e041      	b.n	8002a9e <HAL_TIM_Base_Init+0x96>
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002a20:	b2db      	uxtb	r3, r3
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d106      	bne.n	8002a34 <HAL_TIM_Base_Init+0x2c>
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	2200      	movs	r2, #0
 8002a2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002a2e:	6878      	ldr	r0, [r7, #4]
 8002a30:	f7fe f94c 	bl	8000ccc <HAL_TIM_Base_MspInit>
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	2202      	movs	r2, #2
 8002a38:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	681a      	ldr	r2, [r3, #0]
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	3304      	adds	r3, #4
 8002a44:	4619      	mov	r1, r3
 8002a46:	4610      	mov	r0, r2
 8002a48:	f000 f940 	bl	8002ccc <TIM_Base_SetConfig>
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	2201      	movs	r2, #1
 8002a50:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	2201      	movs	r2, #1
 8002a58:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	2201      	movs	r2, #1
 8002a60:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	2201      	movs	r2, #1
 8002a68:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	2201      	movs	r2, #1
 8002a70:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	2201      	movs	r2, #1
 8002a78:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	2201      	movs	r2, #1
 8002a80:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	2201      	movs	r2, #1
 8002a88:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	2201      	movs	r2, #1
 8002a90:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	2201      	movs	r2, #1
 8002a98:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	4618      	mov	r0, r3
 8002aa0:	3708      	adds	r7, #8
 8002aa2:	46bd      	mov	sp, r7
 8002aa4:	bd80      	pop	{r7, pc}
	...

08002aa8 <HAL_TIM_Base_Start>:
 8002aa8:	b480      	push	{r7}
 8002aaa:	b085      	sub	sp, #20
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	6078      	str	r0, [r7, #4]
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002ab6:	b2db      	uxtb	r3, r3
 8002ab8:	2b01      	cmp	r3, #1
 8002aba:	d001      	beq.n	8002ac0 <HAL_TIM_Base_Start+0x18>
 8002abc:	2301      	movs	r3, #1
 8002abe:	e032      	b.n	8002b26 <HAL_TIM_Base_Start+0x7e>
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	2202      	movs	r2, #2
 8002ac4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4a18      	ldr	r2, [pc, #96]	@ (8002b30 <HAL_TIM_Base_Start+0x88>)
 8002ace:	4293      	cmp	r3, r2
 8002ad0:	d00e      	beq.n	8002af0 <HAL_TIM_Base_Start+0x48>
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002ada:	d009      	beq.n	8002af0 <HAL_TIM_Base_Start+0x48>
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	4a14      	ldr	r2, [pc, #80]	@ (8002b34 <HAL_TIM_Base_Start+0x8c>)
 8002ae2:	4293      	cmp	r3, r2
 8002ae4:	d004      	beq.n	8002af0 <HAL_TIM_Base_Start+0x48>
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	4a13      	ldr	r2, [pc, #76]	@ (8002b38 <HAL_TIM_Base_Start+0x90>)
 8002aec:	4293      	cmp	r3, r2
 8002aee:	d111      	bne.n	8002b14 <HAL_TIM_Base_Start+0x6c>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	689b      	ldr	r3, [r3, #8]
 8002af6:	f003 0307 	and.w	r3, r3, #7
 8002afa:	60fb      	str	r3, [r7, #12]
 8002afc:	68fb      	ldr	r3, [r7, #12]
 8002afe:	2b06      	cmp	r3, #6
 8002b00:	d010      	beq.n	8002b24 <HAL_TIM_Base_Start+0x7c>
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	681b      	ldr	r3, [r3, #0]
 8002b06:	681a      	ldr	r2, [r3, #0]
 8002b08:	687b      	ldr	r3, [r7, #4]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	f042 0201 	orr.w	r2, r2, #1
 8002b10:	601a      	str	r2, [r3, #0]
 8002b12:	e007      	b.n	8002b24 <HAL_TIM_Base_Start+0x7c>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	681a      	ldr	r2, [r3, #0]
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f042 0201 	orr.w	r2, r2, #1
 8002b22:	601a      	str	r2, [r3, #0]
 8002b24:	2300      	movs	r3, #0
 8002b26:	4618      	mov	r0, r3
 8002b28:	3714      	adds	r7, #20
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	bc80      	pop	{r7}
 8002b2e:	4770      	bx	lr
 8002b30:	40012c00 	.word	0x40012c00
 8002b34:	40000400 	.word	0x40000400
 8002b38:	40000800 	.word	0x40000800

08002b3c <HAL_TIM_ConfigClockSource>:
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b084      	sub	sp, #16
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	6078      	str	r0, [r7, #4]
 8002b44:	6039      	str	r1, [r7, #0]
 8002b46:	2300      	movs	r3, #0
 8002b48:	73fb      	strb	r3, [r7, #15]
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b50:	2b01      	cmp	r3, #1
 8002b52:	d101      	bne.n	8002b58 <HAL_TIM_ConfigClockSource+0x1c>
 8002b54:	2302      	movs	r3, #2
 8002b56:	e0b4      	b.n	8002cc2 <HAL_TIM_ConfigClockSource+0x186>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	2201      	movs	r2, #1
 8002b5c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	2202      	movs	r2, #2
 8002b64:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	689b      	ldr	r3, [r3, #8]
 8002b6e:	60bb      	str	r3, [r7, #8]
 8002b70:	68bb      	ldr	r3, [r7, #8]
 8002b72:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8002b76:	60bb      	str	r3, [r7, #8]
 8002b78:	68bb      	ldr	r3, [r7, #8]
 8002b7a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002b7e:	60bb      	str	r3, [r7, #8]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	68ba      	ldr	r2, [r7, #8]
 8002b86:	609a      	str	r2, [r3, #8]
 8002b88:	683b      	ldr	r3, [r7, #0]
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002b90:	d03e      	beq.n	8002c10 <HAL_TIM_ConfigClockSource+0xd4>
 8002b92:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002b96:	f200 8087 	bhi.w	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002b9a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002b9e:	f000 8086 	beq.w	8002cae <HAL_TIM_ConfigClockSource+0x172>
 8002ba2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002ba6:	d87f      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002ba8:	2b70      	cmp	r3, #112	@ 0x70
 8002baa:	d01a      	beq.n	8002be2 <HAL_TIM_ConfigClockSource+0xa6>
 8002bac:	2b70      	cmp	r3, #112	@ 0x70
 8002bae:	d87b      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002bb0:	2b60      	cmp	r3, #96	@ 0x60
 8002bb2:	d050      	beq.n	8002c56 <HAL_TIM_ConfigClockSource+0x11a>
 8002bb4:	2b60      	cmp	r3, #96	@ 0x60
 8002bb6:	d877      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002bb8:	2b50      	cmp	r3, #80	@ 0x50
 8002bba:	d03c      	beq.n	8002c36 <HAL_TIM_ConfigClockSource+0xfa>
 8002bbc:	2b50      	cmp	r3, #80	@ 0x50
 8002bbe:	d873      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002bc0:	2b40      	cmp	r3, #64	@ 0x40
 8002bc2:	d058      	beq.n	8002c76 <HAL_TIM_ConfigClockSource+0x13a>
 8002bc4:	2b40      	cmp	r3, #64	@ 0x40
 8002bc6:	d86f      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002bc8:	2b30      	cmp	r3, #48	@ 0x30
 8002bca:	d064      	beq.n	8002c96 <HAL_TIM_ConfigClockSource+0x15a>
 8002bcc:	2b30      	cmp	r3, #48	@ 0x30
 8002bce:	d86b      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002bd0:	2b20      	cmp	r3, #32
 8002bd2:	d060      	beq.n	8002c96 <HAL_TIM_ConfigClockSource+0x15a>
 8002bd4:	2b20      	cmp	r3, #32
 8002bd6:	d867      	bhi.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d05c      	beq.n	8002c96 <HAL_TIM_ConfigClockSource+0x15a>
 8002bdc:	2b10      	cmp	r3, #16
 8002bde:	d05a      	beq.n	8002c96 <HAL_TIM_ConfigClockSource+0x15a>
 8002be0:	e062      	b.n	8002ca8 <HAL_TIM_ConfigClockSource+0x16c>
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	6818      	ldr	r0, [r3, #0]
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	6899      	ldr	r1, [r3, #8]
 8002bea:	683b      	ldr	r3, [r7, #0]
 8002bec:	685a      	ldr	r2, [r3, #4]
 8002bee:	683b      	ldr	r3, [r7, #0]
 8002bf0:	68db      	ldr	r3, [r3, #12]
 8002bf2:	f000 f950 	bl	8002e96 <TIM_ETR_SetConfig>
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	689b      	ldr	r3, [r3, #8]
 8002bfc:	60bb      	str	r3, [r7, #8]
 8002bfe:	68bb      	ldr	r3, [r7, #8]
 8002c00:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8002c04:	60bb      	str	r3, [r7, #8]
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	68ba      	ldr	r2, [r7, #8]
 8002c0c:	609a      	str	r2, [r3, #8]
 8002c0e:	e04f      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	6818      	ldr	r0, [r3, #0]
 8002c14:	683b      	ldr	r3, [r7, #0]
 8002c16:	6899      	ldr	r1, [r3, #8]
 8002c18:	683b      	ldr	r3, [r7, #0]
 8002c1a:	685a      	ldr	r2, [r3, #4]
 8002c1c:	683b      	ldr	r3, [r7, #0]
 8002c1e:	68db      	ldr	r3, [r3, #12]
 8002c20:	f000 f939 	bl	8002e96 <TIM_ETR_SetConfig>
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	689a      	ldr	r2, [r3, #8]
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002c32:	609a      	str	r2, [r3, #8]
 8002c34:	e03c      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	6818      	ldr	r0, [r3, #0]
 8002c3a:	683b      	ldr	r3, [r7, #0]
 8002c3c:	6859      	ldr	r1, [r3, #4]
 8002c3e:	683b      	ldr	r3, [r7, #0]
 8002c40:	68db      	ldr	r3, [r3, #12]
 8002c42:	461a      	mov	r2, r3
 8002c44:	f000 f8b0 	bl	8002da8 <TIM_TI1_ConfigInputStage>
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	2150      	movs	r1, #80	@ 0x50
 8002c4e:	4618      	mov	r0, r3
 8002c50:	f000 f907 	bl	8002e62 <TIM_ITRx_SetConfig>
 8002c54:	e02c      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	6818      	ldr	r0, [r3, #0]
 8002c5a:	683b      	ldr	r3, [r7, #0]
 8002c5c:	6859      	ldr	r1, [r3, #4]
 8002c5e:	683b      	ldr	r3, [r7, #0]
 8002c60:	68db      	ldr	r3, [r3, #12]
 8002c62:	461a      	mov	r2, r3
 8002c64:	f000 f8ce 	bl	8002e04 <TIM_TI2_ConfigInputStage>
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	2160      	movs	r1, #96	@ 0x60
 8002c6e:	4618      	mov	r0, r3
 8002c70:	f000 f8f7 	bl	8002e62 <TIM_ITRx_SetConfig>
 8002c74:	e01c      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	6818      	ldr	r0, [r3, #0]
 8002c7a:	683b      	ldr	r3, [r7, #0]
 8002c7c:	6859      	ldr	r1, [r3, #4]
 8002c7e:	683b      	ldr	r3, [r7, #0]
 8002c80:	68db      	ldr	r3, [r3, #12]
 8002c82:	461a      	mov	r2, r3
 8002c84:	f000 f890 	bl	8002da8 <TIM_TI1_ConfigInputStage>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	2140      	movs	r1, #64	@ 0x40
 8002c8e:	4618      	mov	r0, r3
 8002c90:	f000 f8e7 	bl	8002e62 <TIM_ITRx_SetConfig>
 8002c94:	e00c      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681a      	ldr	r2, [r3, #0]
 8002c9a:	683b      	ldr	r3, [r7, #0]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	4619      	mov	r1, r3
 8002ca0:	4610      	mov	r0, r2
 8002ca2:	f000 f8de 	bl	8002e62 <TIM_ITRx_SetConfig>
 8002ca6:	e003      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002ca8:	2301      	movs	r3, #1
 8002caa:	73fb      	strb	r3, [r7, #15]
 8002cac:	e000      	b.n	8002cb0 <HAL_TIM_ConfigClockSource+0x174>
 8002cae:	bf00      	nop
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	2201      	movs	r2, #1
 8002cb4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	2200      	movs	r2, #0
 8002cbc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002cc0:	7bfb      	ldrb	r3, [r7, #15]
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	3710      	adds	r7, #16
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bd80      	pop	{r7, pc}
	...

08002ccc <TIM_Base_SetConfig>:
 8002ccc:	b480      	push	{r7}
 8002cce:	b085      	sub	sp, #20
 8002cd0:	af00      	add	r7, sp, #0
 8002cd2:	6078      	str	r0, [r7, #4]
 8002cd4:	6039      	str	r1, [r7, #0]
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	60fb      	str	r3, [r7, #12]
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	4a2f      	ldr	r2, [pc, #188]	@ (8002d9c <TIM_Base_SetConfig+0xd0>)
 8002ce0:	4293      	cmp	r3, r2
 8002ce2:	d00b      	beq.n	8002cfc <TIM_Base_SetConfig+0x30>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002cea:	d007      	beq.n	8002cfc <TIM_Base_SetConfig+0x30>
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	4a2c      	ldr	r2, [pc, #176]	@ (8002da0 <TIM_Base_SetConfig+0xd4>)
 8002cf0:	4293      	cmp	r3, r2
 8002cf2:	d003      	beq.n	8002cfc <TIM_Base_SetConfig+0x30>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	4a2b      	ldr	r2, [pc, #172]	@ (8002da4 <TIM_Base_SetConfig+0xd8>)
 8002cf8:	4293      	cmp	r3, r2
 8002cfa:	d108      	bne.n	8002d0e <TIM_Base_SetConfig+0x42>
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002d02:	60fb      	str	r3, [r7, #12]
 8002d04:	683b      	ldr	r3, [r7, #0]
 8002d06:	685b      	ldr	r3, [r3, #4]
 8002d08:	68fa      	ldr	r2, [r7, #12]
 8002d0a:	4313      	orrs	r3, r2
 8002d0c:	60fb      	str	r3, [r7, #12]
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	4a22      	ldr	r2, [pc, #136]	@ (8002d9c <TIM_Base_SetConfig+0xd0>)
 8002d12:	4293      	cmp	r3, r2
 8002d14:	d00b      	beq.n	8002d2e <TIM_Base_SetConfig+0x62>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002d1c:	d007      	beq.n	8002d2e <TIM_Base_SetConfig+0x62>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	4a1f      	ldr	r2, [pc, #124]	@ (8002da0 <TIM_Base_SetConfig+0xd4>)
 8002d22:	4293      	cmp	r3, r2
 8002d24:	d003      	beq.n	8002d2e <TIM_Base_SetConfig+0x62>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	4a1e      	ldr	r2, [pc, #120]	@ (8002da4 <TIM_Base_SetConfig+0xd8>)
 8002d2a:	4293      	cmp	r3, r2
 8002d2c:	d108      	bne.n	8002d40 <TIM_Base_SetConfig+0x74>
 8002d2e:	68fb      	ldr	r3, [r7, #12]
 8002d30:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002d34:	60fb      	str	r3, [r7, #12]
 8002d36:	683b      	ldr	r3, [r7, #0]
 8002d38:	68db      	ldr	r3, [r3, #12]
 8002d3a:	68fa      	ldr	r2, [r7, #12]
 8002d3c:	4313      	orrs	r3, r2
 8002d3e:	60fb      	str	r3, [r7, #12]
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8002d46:	683b      	ldr	r3, [r7, #0]
 8002d48:	695b      	ldr	r3, [r3, #20]
 8002d4a:	4313      	orrs	r3, r2
 8002d4c:	60fb      	str	r3, [r7, #12]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	68fa      	ldr	r2, [r7, #12]
 8002d52:	601a      	str	r2, [r3, #0]
 8002d54:	683b      	ldr	r3, [r7, #0]
 8002d56:	689a      	ldr	r2, [r3, #8]
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d5c:	683b      	ldr	r3, [r7, #0]
 8002d5e:	681a      	ldr	r2, [r3, #0]
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	4a0d      	ldr	r2, [pc, #52]	@ (8002d9c <TIM_Base_SetConfig+0xd0>)
 8002d68:	4293      	cmp	r3, r2
 8002d6a:	d103      	bne.n	8002d74 <TIM_Base_SetConfig+0xa8>
 8002d6c:	683b      	ldr	r3, [r7, #0]
 8002d6e:	691a      	ldr	r2, [r3, #16]
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	2201      	movs	r2, #1
 8002d78:	615a      	str	r2, [r3, #20]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	691b      	ldr	r3, [r3, #16]
 8002d7e:	f003 0301 	and.w	r3, r3, #1
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d005      	beq.n	8002d92 <TIM_Base_SetConfig+0xc6>
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	691b      	ldr	r3, [r3, #16]
 8002d8a:	f023 0201 	bic.w	r2, r3, #1
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	611a      	str	r2, [r3, #16]
 8002d92:	bf00      	nop
 8002d94:	3714      	adds	r7, #20
 8002d96:	46bd      	mov	sp, r7
 8002d98:	bc80      	pop	{r7}
 8002d9a:	4770      	bx	lr
 8002d9c:	40012c00 	.word	0x40012c00
 8002da0:	40000400 	.word	0x40000400
 8002da4:	40000800 	.word	0x40000800

08002da8 <TIM_TI1_ConfigInputStage>:
 8002da8:	b480      	push	{r7}
 8002daa:	b087      	sub	sp, #28
 8002dac:	af00      	add	r7, sp, #0
 8002dae:	60f8      	str	r0, [r7, #12]
 8002db0:	60b9      	str	r1, [r7, #8]
 8002db2:	607a      	str	r2, [r7, #4]
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	6a1b      	ldr	r3, [r3, #32]
 8002db8:	617b      	str	r3, [r7, #20]
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	6a1b      	ldr	r3, [r3, #32]
 8002dbe:	f023 0201 	bic.w	r2, r3, #1
 8002dc2:	68fb      	ldr	r3, [r7, #12]
 8002dc4:	621a      	str	r2, [r3, #32]
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	699b      	ldr	r3, [r3, #24]
 8002dca:	613b      	str	r3, [r7, #16]
 8002dcc:	693b      	ldr	r3, [r7, #16]
 8002dce:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	011b      	lsls	r3, r3, #4
 8002dd8:	693a      	ldr	r2, [r7, #16]
 8002dda:	4313      	orrs	r3, r2
 8002ddc:	613b      	str	r3, [r7, #16]
 8002dde:	697b      	ldr	r3, [r7, #20]
 8002de0:	f023 030a 	bic.w	r3, r3, #10
 8002de4:	617b      	str	r3, [r7, #20]
 8002de6:	697a      	ldr	r2, [r7, #20]
 8002de8:	68bb      	ldr	r3, [r7, #8]
 8002dea:	4313      	orrs	r3, r2
 8002dec:	617b      	str	r3, [r7, #20]
 8002dee:	68fb      	ldr	r3, [r7, #12]
 8002df0:	693a      	ldr	r2, [r7, #16]
 8002df2:	619a      	str	r2, [r3, #24]
 8002df4:	68fb      	ldr	r3, [r7, #12]
 8002df6:	697a      	ldr	r2, [r7, #20]
 8002df8:	621a      	str	r2, [r3, #32]
 8002dfa:	bf00      	nop
 8002dfc:	371c      	adds	r7, #28
 8002dfe:	46bd      	mov	sp, r7
 8002e00:	bc80      	pop	{r7}
 8002e02:	4770      	bx	lr

08002e04 <TIM_TI2_ConfigInputStage>:
 8002e04:	b480      	push	{r7}
 8002e06:	b087      	sub	sp, #28
 8002e08:	af00      	add	r7, sp, #0
 8002e0a:	60f8      	str	r0, [r7, #12]
 8002e0c:	60b9      	str	r1, [r7, #8]
 8002e0e:	607a      	str	r2, [r7, #4]
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	6a1b      	ldr	r3, [r3, #32]
 8002e14:	617b      	str	r3, [r7, #20]
 8002e16:	68fb      	ldr	r3, [r7, #12]
 8002e18:	6a1b      	ldr	r3, [r3, #32]
 8002e1a:	f023 0210 	bic.w	r2, r3, #16
 8002e1e:	68fb      	ldr	r3, [r7, #12]
 8002e20:	621a      	str	r2, [r3, #32]
 8002e22:	68fb      	ldr	r3, [r7, #12]
 8002e24:	699b      	ldr	r3, [r3, #24]
 8002e26:	613b      	str	r3, [r7, #16]
 8002e28:	693b      	ldr	r3, [r7, #16]
 8002e2a:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002e2e:	613b      	str	r3, [r7, #16]
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	031b      	lsls	r3, r3, #12
 8002e34:	693a      	ldr	r2, [r7, #16]
 8002e36:	4313      	orrs	r3, r2
 8002e38:	613b      	str	r3, [r7, #16]
 8002e3a:	697b      	ldr	r3, [r7, #20]
 8002e3c:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002e40:	617b      	str	r3, [r7, #20]
 8002e42:	68bb      	ldr	r3, [r7, #8]
 8002e44:	011b      	lsls	r3, r3, #4
 8002e46:	697a      	ldr	r2, [r7, #20]
 8002e48:	4313      	orrs	r3, r2
 8002e4a:	617b      	str	r3, [r7, #20]
 8002e4c:	68fb      	ldr	r3, [r7, #12]
 8002e4e:	693a      	ldr	r2, [r7, #16]
 8002e50:	619a      	str	r2, [r3, #24]
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	697a      	ldr	r2, [r7, #20]
 8002e56:	621a      	str	r2, [r3, #32]
 8002e58:	bf00      	nop
 8002e5a:	371c      	adds	r7, #28
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	bc80      	pop	{r7}
 8002e60:	4770      	bx	lr

08002e62 <TIM_ITRx_SetConfig>:
 8002e62:	b480      	push	{r7}
 8002e64:	b085      	sub	sp, #20
 8002e66:	af00      	add	r7, sp, #0
 8002e68:	6078      	str	r0, [r7, #4]
 8002e6a:	6039      	str	r1, [r7, #0]
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	689b      	ldr	r3, [r3, #8]
 8002e70:	60fb      	str	r3, [r7, #12]
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002e78:	60fb      	str	r3, [r7, #12]
 8002e7a:	683a      	ldr	r2, [r7, #0]
 8002e7c:	68fb      	ldr	r3, [r7, #12]
 8002e7e:	4313      	orrs	r3, r2
 8002e80:	f043 0307 	orr.w	r3, r3, #7
 8002e84:	60fb      	str	r3, [r7, #12]
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	68fa      	ldr	r2, [r7, #12]
 8002e8a:	609a      	str	r2, [r3, #8]
 8002e8c:	bf00      	nop
 8002e8e:	3714      	adds	r7, #20
 8002e90:	46bd      	mov	sp, r7
 8002e92:	bc80      	pop	{r7}
 8002e94:	4770      	bx	lr

08002e96 <TIM_ETR_SetConfig>:
 8002e96:	b480      	push	{r7}
 8002e98:	b087      	sub	sp, #28
 8002e9a:	af00      	add	r7, sp, #0
 8002e9c:	60f8      	str	r0, [r7, #12]
 8002e9e:	60b9      	str	r1, [r7, #8]
 8002ea0:	607a      	str	r2, [r7, #4]
 8002ea2:	603b      	str	r3, [r7, #0]
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	689b      	ldr	r3, [r3, #8]
 8002ea8:	617b      	str	r3, [r7, #20]
 8002eaa:	697b      	ldr	r3, [r7, #20]
 8002eac:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002eb0:	617b      	str	r3, [r7, #20]
 8002eb2:	683b      	ldr	r3, [r7, #0]
 8002eb4:	021a      	lsls	r2, r3, #8
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	431a      	orrs	r2, r3
 8002eba:	68bb      	ldr	r3, [r7, #8]
 8002ebc:	4313      	orrs	r3, r2
 8002ebe:	697a      	ldr	r2, [r7, #20]
 8002ec0:	4313      	orrs	r3, r2
 8002ec2:	617b      	str	r3, [r7, #20]
 8002ec4:	68fb      	ldr	r3, [r7, #12]
 8002ec6:	697a      	ldr	r2, [r7, #20]
 8002ec8:	609a      	str	r2, [r3, #8]
 8002eca:	bf00      	nop
 8002ecc:	371c      	adds	r7, #28
 8002ece:	46bd      	mov	sp, r7
 8002ed0:	bc80      	pop	{r7}
 8002ed2:	4770      	bx	lr

08002ed4 <HAL_TIMEx_MasterConfigSynchronization>:
 8002ed4:	b480      	push	{r7}
 8002ed6:	b085      	sub	sp, #20
 8002ed8:	af00      	add	r7, sp, #0
 8002eda:	6078      	str	r0, [r7, #4]
 8002edc:	6039      	str	r1, [r7, #0]
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ee4:	2b01      	cmp	r3, #1
 8002ee6:	d101      	bne.n	8002eec <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002ee8:	2302      	movs	r3, #2
 8002eea:	e046      	b.n	8002f7a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	2201      	movs	r2, #1
 8002ef0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	2202      	movs	r2, #2
 8002ef8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	685b      	ldr	r3, [r3, #4]
 8002f02:	60fb      	str	r3, [r7, #12]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	689b      	ldr	r3, [r3, #8]
 8002f0a:	60bb      	str	r3, [r7, #8]
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002f12:	60fb      	str	r3, [r7, #12]
 8002f14:	683b      	ldr	r3, [r7, #0]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	68fa      	ldr	r2, [r7, #12]
 8002f1a:	4313      	orrs	r3, r2
 8002f1c:	60fb      	str	r3, [r7, #12]
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	68fa      	ldr	r2, [r7, #12]
 8002f24:	605a      	str	r2, [r3, #4]
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	4a16      	ldr	r2, [pc, #88]	@ (8002f84 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002f2c:	4293      	cmp	r3, r2
 8002f2e:	d00e      	beq.n	8002f4e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002f38:	d009      	beq.n	8002f4e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	4a12      	ldr	r2, [pc, #72]	@ (8002f88 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002f40:	4293      	cmp	r3, r2
 8002f42:	d004      	beq.n	8002f4e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	4a10      	ldr	r2, [pc, #64]	@ (8002f8c <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8002f4a:	4293      	cmp	r3, r2
 8002f4c:	d10c      	bne.n	8002f68 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8002f4e:	68bb      	ldr	r3, [r7, #8]
 8002f50:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002f54:	60bb      	str	r3, [r7, #8]
 8002f56:	683b      	ldr	r3, [r7, #0]
 8002f58:	685b      	ldr	r3, [r3, #4]
 8002f5a:	68ba      	ldr	r2, [r7, #8]
 8002f5c:	4313      	orrs	r3, r2
 8002f5e:	60bb      	str	r3, [r7, #8]
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	68ba      	ldr	r2, [r7, #8]
 8002f66:	609a      	str	r2, [r3, #8]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	2201      	movs	r2, #1
 8002f6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	2200      	movs	r2, #0
 8002f74:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002f78:	2300      	movs	r3, #0
 8002f7a:	4618      	mov	r0, r3
 8002f7c:	3714      	adds	r7, #20
 8002f7e:	46bd      	mov	sp, r7
 8002f80:	bc80      	pop	{r7}
 8002f82:	4770      	bx	lr
 8002f84:	40012c00 	.word	0x40012c00
 8002f88:	40000400 	.word	0x40000400
 8002f8c:	40000800 	.word	0x40000800

08002f90 <HAL_UART_Init>:
 8002f90:	b580      	push	{r7, lr}
 8002f92:	b082      	sub	sp, #8
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	6078      	str	r0, [r7, #4]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d101      	bne.n	8002fa2 <HAL_UART_Init+0x12>
 8002f9e:	2301      	movs	r3, #1
 8002fa0:	e042      	b.n	8003028 <HAL_UART_Init+0x98>
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002fa8:	b2db      	uxtb	r3, r3
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	d106      	bne.n	8002fbc <HAL_UART_Init+0x2c>
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002fb6:	6878      	ldr	r0, [r7, #4]
 8002fb8:	f7fd fea4 	bl	8000d04 <HAL_UART_MspInit>
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	2224      	movs	r2, #36	@ 0x24
 8002fc0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	68da      	ldr	r2, [r3, #12]
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8002fd2:	60da      	str	r2, [r3, #12]
 8002fd4:	6878      	ldr	r0, [r7, #4]
 8002fd6:	f000 f971 	bl	80032bc <UART_SetConfig>
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	691a      	ldr	r2, [r3, #16]
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002fe8:	611a      	str	r2, [r3, #16]
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	695a      	ldr	r2, [r3, #20]
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002ff8:	615a      	str	r2, [r3, #20]
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	68da      	ldr	r2, [r3, #12]
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003008:	60da      	str	r2, [r3, #12]
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	2200      	movs	r2, #0
 800300e:	645a      	str	r2, [r3, #68]	@ 0x44
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	2220      	movs	r2, #32
 8003014:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	2220      	movs	r2, #32
 800301c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	2200      	movs	r2, #0
 8003024:	635a      	str	r2, [r3, #52]	@ 0x34
 8003026:	2300      	movs	r3, #0
 8003028:	4618      	mov	r0, r3
 800302a:	3708      	adds	r7, #8
 800302c:	46bd      	mov	sp, r7
 800302e:	bd80      	pop	{r7, pc}

08003030 <HAL_UART_Transmit>:
 8003030:	b580      	push	{r7, lr}
 8003032:	b08a      	sub	sp, #40	@ 0x28
 8003034:	af02      	add	r7, sp, #8
 8003036:	60f8      	str	r0, [r7, #12]
 8003038:	60b9      	str	r1, [r7, #8]
 800303a:	603b      	str	r3, [r7, #0]
 800303c:	4613      	mov	r3, r2
 800303e:	80fb      	strh	r3, [r7, #6]
 8003040:	2300      	movs	r3, #0
 8003042:	617b      	str	r3, [r7, #20]
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800304a:	b2db      	uxtb	r3, r3
 800304c:	2b20      	cmp	r3, #32
 800304e:	d175      	bne.n	800313c <HAL_UART_Transmit+0x10c>
 8003050:	68bb      	ldr	r3, [r7, #8]
 8003052:	2b00      	cmp	r3, #0
 8003054:	d002      	beq.n	800305c <HAL_UART_Transmit+0x2c>
 8003056:	88fb      	ldrh	r3, [r7, #6]
 8003058:	2b00      	cmp	r3, #0
 800305a:	d101      	bne.n	8003060 <HAL_UART_Transmit+0x30>
 800305c:	2301      	movs	r3, #1
 800305e:	e06e      	b.n	800313e <HAL_UART_Transmit+0x10e>
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	2200      	movs	r2, #0
 8003064:	645a      	str	r2, [r3, #68]	@ 0x44
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	2221      	movs	r2, #33	@ 0x21
 800306a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800306e:	f7fd ffdf 	bl	8001030 <HAL_GetTick>
 8003072:	6178      	str	r0, [r7, #20]
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	88fa      	ldrh	r2, [r7, #6]
 8003078:	849a      	strh	r2, [r3, #36]	@ 0x24
 800307a:	68fb      	ldr	r3, [r7, #12]
 800307c:	88fa      	ldrh	r2, [r7, #6]
 800307e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003080:	68fb      	ldr	r3, [r7, #12]
 8003082:	689b      	ldr	r3, [r3, #8]
 8003084:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003088:	d108      	bne.n	800309c <HAL_UART_Transmit+0x6c>
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	691b      	ldr	r3, [r3, #16]
 800308e:	2b00      	cmp	r3, #0
 8003090:	d104      	bne.n	800309c <HAL_UART_Transmit+0x6c>
 8003092:	2300      	movs	r3, #0
 8003094:	61fb      	str	r3, [r7, #28]
 8003096:	68bb      	ldr	r3, [r7, #8]
 8003098:	61bb      	str	r3, [r7, #24]
 800309a:	e003      	b.n	80030a4 <HAL_UART_Transmit+0x74>
 800309c:	68bb      	ldr	r3, [r7, #8]
 800309e:	61fb      	str	r3, [r7, #28]
 80030a0:	2300      	movs	r3, #0
 80030a2:	61bb      	str	r3, [r7, #24]
 80030a4:	e02e      	b.n	8003104 <HAL_UART_Transmit+0xd4>
 80030a6:	683b      	ldr	r3, [r7, #0]
 80030a8:	9300      	str	r3, [sp, #0]
 80030aa:	697b      	ldr	r3, [r7, #20]
 80030ac:	2200      	movs	r2, #0
 80030ae:	2180      	movs	r1, #128	@ 0x80
 80030b0:	68f8      	ldr	r0, [r7, #12]
 80030b2:	f000 f848 	bl	8003146 <UART_WaitOnFlagUntilTimeout>
 80030b6:	4603      	mov	r3, r0
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d005      	beq.n	80030c8 <HAL_UART_Transmit+0x98>
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	2220      	movs	r2, #32
 80030c0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80030c4:	2303      	movs	r3, #3
 80030c6:	e03a      	b.n	800313e <HAL_UART_Transmit+0x10e>
 80030c8:	69fb      	ldr	r3, [r7, #28]
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d10b      	bne.n	80030e6 <HAL_UART_Transmit+0xb6>
 80030ce:	69bb      	ldr	r3, [r7, #24]
 80030d0:	881b      	ldrh	r3, [r3, #0]
 80030d2:	461a      	mov	r2, r3
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80030dc:	605a      	str	r2, [r3, #4]
 80030de:	69bb      	ldr	r3, [r7, #24]
 80030e0:	3302      	adds	r3, #2
 80030e2:	61bb      	str	r3, [r7, #24]
 80030e4:	e007      	b.n	80030f6 <HAL_UART_Transmit+0xc6>
 80030e6:	69fb      	ldr	r3, [r7, #28]
 80030e8:	781a      	ldrb	r2, [r3, #0]
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	605a      	str	r2, [r3, #4]
 80030f0:	69fb      	ldr	r3, [r7, #28]
 80030f2:	3301      	adds	r3, #1
 80030f4:	61fb      	str	r3, [r7, #28]
 80030f6:	68fb      	ldr	r3, [r7, #12]
 80030f8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80030fa:	b29b      	uxth	r3, r3
 80030fc:	3b01      	subs	r3, #1
 80030fe:	b29a      	uxth	r2, r3
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003108:	b29b      	uxth	r3, r3
 800310a:	2b00      	cmp	r3, #0
 800310c:	d1cb      	bne.n	80030a6 <HAL_UART_Transmit+0x76>
 800310e:	683b      	ldr	r3, [r7, #0]
 8003110:	9300      	str	r3, [sp, #0]
 8003112:	697b      	ldr	r3, [r7, #20]
 8003114:	2200      	movs	r2, #0
 8003116:	2140      	movs	r1, #64	@ 0x40
 8003118:	68f8      	ldr	r0, [r7, #12]
 800311a:	f000 f814 	bl	8003146 <UART_WaitOnFlagUntilTimeout>
 800311e:	4603      	mov	r3, r0
 8003120:	2b00      	cmp	r3, #0
 8003122:	d005      	beq.n	8003130 <HAL_UART_Transmit+0x100>
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	2220      	movs	r2, #32
 8003128:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800312c:	2303      	movs	r3, #3
 800312e:	e006      	b.n	800313e <HAL_UART_Transmit+0x10e>
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	2220      	movs	r2, #32
 8003134:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003138:	2300      	movs	r3, #0
 800313a:	e000      	b.n	800313e <HAL_UART_Transmit+0x10e>
 800313c:	2302      	movs	r3, #2
 800313e:	4618      	mov	r0, r3
 8003140:	3720      	adds	r7, #32
 8003142:	46bd      	mov	sp, r7
 8003144:	bd80      	pop	{r7, pc}

08003146 <UART_WaitOnFlagUntilTimeout>:
 8003146:	b580      	push	{r7, lr}
 8003148:	b086      	sub	sp, #24
 800314a:	af00      	add	r7, sp, #0
 800314c:	60f8      	str	r0, [r7, #12]
 800314e:	60b9      	str	r1, [r7, #8]
 8003150:	603b      	str	r3, [r7, #0]
 8003152:	4613      	mov	r3, r2
 8003154:	71fb      	strb	r3, [r7, #7]
 8003156:	e03b      	b.n	80031d0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003158:	6a3b      	ldr	r3, [r7, #32]
 800315a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800315e:	d037      	beq.n	80031d0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003160:	f7fd ff66 	bl	8001030 <HAL_GetTick>
 8003164:	4602      	mov	r2, r0
 8003166:	683b      	ldr	r3, [r7, #0]
 8003168:	1ad3      	subs	r3, r2, r3
 800316a:	6a3a      	ldr	r2, [r7, #32]
 800316c:	429a      	cmp	r2, r3
 800316e:	d302      	bcc.n	8003176 <UART_WaitOnFlagUntilTimeout+0x30>
 8003170:	6a3b      	ldr	r3, [r7, #32]
 8003172:	2b00      	cmp	r3, #0
 8003174:	d101      	bne.n	800317a <UART_WaitOnFlagUntilTimeout+0x34>
 8003176:	2303      	movs	r3, #3
 8003178:	e03a      	b.n	80031f0 <UART_WaitOnFlagUntilTimeout+0xaa>
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	68db      	ldr	r3, [r3, #12]
 8003180:	f003 0304 	and.w	r3, r3, #4
 8003184:	2b00      	cmp	r3, #0
 8003186:	d023      	beq.n	80031d0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003188:	68bb      	ldr	r3, [r7, #8]
 800318a:	2b80      	cmp	r3, #128	@ 0x80
 800318c:	d020      	beq.n	80031d0 <UART_WaitOnFlagUntilTimeout+0x8a>
 800318e:	68bb      	ldr	r3, [r7, #8]
 8003190:	2b40      	cmp	r3, #64	@ 0x40
 8003192:	d01d      	beq.n	80031d0 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	681b      	ldr	r3, [r3, #0]
 800319a:	f003 0308 	and.w	r3, r3, #8
 800319e:	2b08      	cmp	r3, #8
 80031a0:	d116      	bne.n	80031d0 <UART_WaitOnFlagUntilTimeout+0x8a>
 80031a2:	2300      	movs	r3, #0
 80031a4:	617b      	str	r3, [r7, #20]
 80031a6:	68fb      	ldr	r3, [r7, #12]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	617b      	str	r3, [r7, #20]
 80031ae:	68fb      	ldr	r3, [r7, #12]
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	685b      	ldr	r3, [r3, #4]
 80031b4:	617b      	str	r3, [r7, #20]
 80031b6:	697b      	ldr	r3, [r7, #20]
 80031b8:	68f8      	ldr	r0, [r7, #12]
 80031ba:	f000 f81d 	bl	80031f8 <UART_EndRxTransfer>
 80031be:	68fb      	ldr	r3, [r7, #12]
 80031c0:	2208      	movs	r2, #8
 80031c2:	645a      	str	r2, [r3, #68]	@ 0x44
 80031c4:	68fb      	ldr	r3, [r7, #12]
 80031c6:	2200      	movs	r2, #0
 80031c8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80031cc:	2301      	movs	r3, #1
 80031ce:	e00f      	b.n	80031f0 <UART_WaitOnFlagUntilTimeout+0xaa>
 80031d0:	68fb      	ldr	r3, [r7, #12]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	681a      	ldr	r2, [r3, #0]
 80031d6:	68bb      	ldr	r3, [r7, #8]
 80031d8:	4013      	ands	r3, r2
 80031da:	68ba      	ldr	r2, [r7, #8]
 80031dc:	429a      	cmp	r2, r3
 80031de:	bf0c      	ite	eq
 80031e0:	2301      	moveq	r3, #1
 80031e2:	2300      	movne	r3, #0
 80031e4:	b2db      	uxtb	r3, r3
 80031e6:	461a      	mov	r2, r3
 80031e8:	79fb      	ldrb	r3, [r7, #7]
 80031ea:	429a      	cmp	r2, r3
 80031ec:	d0b4      	beq.n	8003158 <UART_WaitOnFlagUntilTimeout+0x12>
 80031ee:	2300      	movs	r3, #0
 80031f0:	4618      	mov	r0, r3
 80031f2:	3718      	adds	r7, #24
 80031f4:	46bd      	mov	sp, r7
 80031f6:	bd80      	pop	{r7, pc}

080031f8 <UART_EndRxTransfer>:
 80031f8:	b480      	push	{r7}
 80031fa:	b095      	sub	sp, #84	@ 0x54
 80031fc:	af00      	add	r7, sp, #0
 80031fe:	6078      	str	r0, [r7, #4]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	330c      	adds	r3, #12
 8003206:	637b      	str	r3, [r7, #52]	@ 0x34
 8003208:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800320a:	e853 3f00 	ldrex	r3, [r3]
 800320e:	633b      	str	r3, [r7, #48]	@ 0x30
 8003210:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003212:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003216:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	330c      	adds	r3, #12
 800321e:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003220:	643a      	str	r2, [r7, #64]	@ 0x40
 8003222:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003224:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003226:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003228:	e841 2300 	strex	r3, r2, [r1]
 800322c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800322e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003230:	2b00      	cmp	r3, #0
 8003232:	d1e5      	bne.n	8003200 <UART_EndRxTransfer+0x8>
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	3314      	adds	r3, #20
 800323a:	623b      	str	r3, [r7, #32]
 800323c:	6a3b      	ldr	r3, [r7, #32]
 800323e:	e853 3f00 	ldrex	r3, [r3]
 8003242:	61fb      	str	r3, [r7, #28]
 8003244:	69fb      	ldr	r3, [r7, #28]
 8003246:	f023 0301 	bic.w	r3, r3, #1
 800324a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	3314      	adds	r3, #20
 8003252:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003254:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003256:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003258:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800325a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800325c:	e841 2300 	strex	r3, r2, [r1]
 8003260:	627b      	str	r3, [r7, #36]	@ 0x24
 8003262:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003264:	2b00      	cmp	r3, #0
 8003266:	d1e5      	bne.n	8003234 <UART_EndRxTransfer+0x3c>
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800326c:	2b01      	cmp	r3, #1
 800326e:	d119      	bne.n	80032a4 <UART_EndRxTransfer+0xac>
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	330c      	adds	r3, #12
 8003276:	60fb      	str	r3, [r7, #12]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	e853 3f00 	ldrex	r3, [r3]
 800327e:	60bb      	str	r3, [r7, #8]
 8003280:	68bb      	ldr	r3, [r7, #8]
 8003282:	f023 0310 	bic.w	r3, r3, #16
 8003286:	647b      	str	r3, [r7, #68]	@ 0x44
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	330c      	adds	r3, #12
 800328e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003290:	61ba      	str	r2, [r7, #24]
 8003292:	617b      	str	r3, [r7, #20]
 8003294:	6979      	ldr	r1, [r7, #20]
 8003296:	69ba      	ldr	r2, [r7, #24]
 8003298:	e841 2300 	strex	r3, r2, [r1]
 800329c:	613b      	str	r3, [r7, #16]
 800329e:	693b      	ldr	r3, [r7, #16]
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d1e5      	bne.n	8003270 <UART_EndRxTransfer+0x78>
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	2220      	movs	r2, #32
 80032a8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	2200      	movs	r2, #0
 80032b0:	631a      	str	r2, [r3, #48]	@ 0x30
 80032b2:	bf00      	nop
 80032b4:	3754      	adds	r7, #84	@ 0x54
 80032b6:	46bd      	mov	sp, r7
 80032b8:	bc80      	pop	{r7}
 80032ba:	4770      	bx	lr

080032bc <UART_SetConfig>:
 80032bc:	b580      	push	{r7, lr}
 80032be:	b084      	sub	sp, #16
 80032c0:	af00      	add	r7, sp, #0
 80032c2:	6078      	str	r0, [r7, #4]
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	691b      	ldr	r3, [r3, #16]
 80032ca:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	68da      	ldr	r2, [r3, #12]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	430a      	orrs	r2, r1
 80032d8:	611a      	str	r2, [r3, #16]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	689a      	ldr	r2, [r3, #8]
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	691b      	ldr	r3, [r3, #16]
 80032e2:	431a      	orrs	r2, r3
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	695b      	ldr	r3, [r3, #20]
 80032e8:	4313      	orrs	r3, r2
 80032ea:	60bb      	str	r3, [r7, #8]
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	68db      	ldr	r3, [r3, #12]
 80032f2:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 80032f6:	f023 030c 	bic.w	r3, r3, #12
 80032fa:	687a      	ldr	r2, [r7, #4]
 80032fc:	6812      	ldr	r2, [r2, #0]
 80032fe:	68b9      	ldr	r1, [r7, #8]
 8003300:	430b      	orrs	r3, r1
 8003302:	60d3      	str	r3, [r2, #12]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	695b      	ldr	r3, [r3, #20]
 800330a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	699a      	ldr	r2, [r3, #24]
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	430a      	orrs	r2, r1
 8003318:	615a      	str	r2, [r3, #20]
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	4a2c      	ldr	r2, [pc, #176]	@ (80033d0 <UART_SetConfig+0x114>)
 8003320:	4293      	cmp	r3, r2
 8003322:	d103      	bne.n	800332c <UART_SetConfig+0x70>
 8003324:	f7ff fb3e 	bl	80029a4 <HAL_RCC_GetPCLK2Freq>
 8003328:	60f8      	str	r0, [r7, #12]
 800332a:	e002      	b.n	8003332 <UART_SetConfig+0x76>
 800332c:	f7ff fb26 	bl	800297c <HAL_RCC_GetPCLK1Freq>
 8003330:	60f8      	str	r0, [r7, #12]
 8003332:	68fa      	ldr	r2, [r7, #12]
 8003334:	4613      	mov	r3, r2
 8003336:	009b      	lsls	r3, r3, #2
 8003338:	4413      	add	r3, r2
 800333a:	009a      	lsls	r2, r3, #2
 800333c:	441a      	add	r2, r3
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	685b      	ldr	r3, [r3, #4]
 8003342:	009b      	lsls	r3, r3, #2
 8003344:	fbb2 f3f3 	udiv	r3, r2, r3
 8003348:	4a22      	ldr	r2, [pc, #136]	@ (80033d4 <UART_SetConfig+0x118>)
 800334a:	fba2 2303 	umull	r2, r3, r2, r3
 800334e:	095b      	lsrs	r3, r3, #5
 8003350:	0119      	lsls	r1, r3, #4
 8003352:	68fa      	ldr	r2, [r7, #12]
 8003354:	4613      	mov	r3, r2
 8003356:	009b      	lsls	r3, r3, #2
 8003358:	4413      	add	r3, r2
 800335a:	009a      	lsls	r2, r3, #2
 800335c:	441a      	add	r2, r3
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	685b      	ldr	r3, [r3, #4]
 8003362:	009b      	lsls	r3, r3, #2
 8003364:	fbb2 f2f3 	udiv	r2, r2, r3
 8003368:	4b1a      	ldr	r3, [pc, #104]	@ (80033d4 <UART_SetConfig+0x118>)
 800336a:	fba3 0302 	umull	r0, r3, r3, r2
 800336e:	095b      	lsrs	r3, r3, #5
 8003370:	2064      	movs	r0, #100	@ 0x64
 8003372:	fb00 f303 	mul.w	r3, r0, r3
 8003376:	1ad3      	subs	r3, r2, r3
 8003378:	011b      	lsls	r3, r3, #4
 800337a:	3332      	adds	r3, #50	@ 0x32
 800337c:	4a15      	ldr	r2, [pc, #84]	@ (80033d4 <UART_SetConfig+0x118>)
 800337e:	fba2 2303 	umull	r2, r3, r2, r3
 8003382:	095b      	lsrs	r3, r3, #5
 8003384:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003388:	4419      	add	r1, r3
 800338a:	68fa      	ldr	r2, [r7, #12]
 800338c:	4613      	mov	r3, r2
 800338e:	009b      	lsls	r3, r3, #2
 8003390:	4413      	add	r3, r2
 8003392:	009a      	lsls	r2, r3, #2
 8003394:	441a      	add	r2, r3
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	685b      	ldr	r3, [r3, #4]
 800339a:	009b      	lsls	r3, r3, #2
 800339c:	fbb2 f2f3 	udiv	r2, r2, r3
 80033a0:	4b0c      	ldr	r3, [pc, #48]	@ (80033d4 <UART_SetConfig+0x118>)
 80033a2:	fba3 0302 	umull	r0, r3, r3, r2
 80033a6:	095b      	lsrs	r3, r3, #5
 80033a8:	2064      	movs	r0, #100	@ 0x64
 80033aa:	fb00 f303 	mul.w	r3, r0, r3
 80033ae:	1ad3      	subs	r3, r2, r3
 80033b0:	011b      	lsls	r3, r3, #4
 80033b2:	3332      	adds	r3, #50	@ 0x32
 80033b4:	4a07      	ldr	r2, [pc, #28]	@ (80033d4 <UART_SetConfig+0x118>)
 80033b6:	fba2 2303 	umull	r2, r3, r2, r3
 80033ba:	095b      	lsrs	r3, r3, #5
 80033bc:	f003 020f 	and.w	r2, r3, #15
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	440a      	add	r2, r1
 80033c6:	609a      	str	r2, [r3, #8]
 80033c8:	bf00      	nop
 80033ca:	3710      	adds	r7, #16
 80033cc:	46bd      	mov	sp, r7
 80033ce:	bd80      	pop	{r7, pc}
 80033d0:	40013800 	.word	0x40013800
 80033d4:	51eb851f 	.word	0x51eb851f

080033d8 <std>:
 80033d8:	2300      	movs	r3, #0
 80033da:	b510      	push	{r4, lr}
 80033dc:	4604      	mov	r4, r0
 80033de:	e9c0 3300 	strd	r3, r3, [r0]
 80033e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80033e6:	6083      	str	r3, [r0, #8]
 80033e8:	8181      	strh	r1, [r0, #12]
 80033ea:	6643      	str	r3, [r0, #100]	@ 0x64
 80033ec:	81c2      	strh	r2, [r0, #14]
 80033ee:	6183      	str	r3, [r0, #24]
 80033f0:	4619      	mov	r1, r3
 80033f2:	2208      	movs	r2, #8
 80033f4:	305c      	adds	r0, #92	@ 0x5c
 80033f6:	f000 fa1b 	bl	8003830 <memset>
 80033fa:	4b0d      	ldr	r3, [pc, #52]	@ (8003430 <std+0x58>)
 80033fc:	6224      	str	r4, [r4, #32]
 80033fe:	6263      	str	r3, [r4, #36]	@ 0x24
 8003400:	4b0c      	ldr	r3, [pc, #48]	@ (8003434 <std+0x5c>)
 8003402:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003404:	4b0c      	ldr	r3, [pc, #48]	@ (8003438 <std+0x60>)
 8003406:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003408:	4b0c      	ldr	r3, [pc, #48]	@ (800343c <std+0x64>)
 800340a:	6323      	str	r3, [r4, #48]	@ 0x30
 800340c:	4b0c      	ldr	r3, [pc, #48]	@ (8003440 <std+0x68>)
 800340e:	429c      	cmp	r4, r3
 8003410:	d006      	beq.n	8003420 <std+0x48>
 8003412:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8003416:	4294      	cmp	r4, r2
 8003418:	d002      	beq.n	8003420 <std+0x48>
 800341a:	33d0      	adds	r3, #208	@ 0xd0
 800341c:	429c      	cmp	r4, r3
 800341e:	d105      	bne.n	800342c <std+0x54>
 8003420:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8003424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003428:	f000 ba7a 	b.w	8003920 <__retarget_lock_init_recursive>
 800342c:	bd10      	pop	{r4, pc}
 800342e:	bf00      	nop
 8003430:	08003681 	.word	0x08003681
 8003434:	080036a3 	.word	0x080036a3
 8003438:	080036db 	.word	0x080036db
 800343c:	080036ff 	.word	0x080036ff
 8003440:	200002ac 	.word	0x200002ac

08003444 <stdio_exit_handler>:
 8003444:	4a02      	ldr	r2, [pc, #8]	@ (8003450 <stdio_exit_handler+0xc>)
 8003446:	4903      	ldr	r1, [pc, #12]	@ (8003454 <stdio_exit_handler+0x10>)
 8003448:	4803      	ldr	r0, [pc, #12]	@ (8003458 <stdio_exit_handler+0x14>)
 800344a:	f000 b869 	b.w	8003520 <_fwalk_sglue>
 800344e:	bf00      	nop
 8003450:	2000000c 	.word	0x2000000c
 8003454:	08004465 	.word	0x08004465
 8003458:	2000001c 	.word	0x2000001c

0800345c <cleanup_stdio>:
 800345c:	6841      	ldr	r1, [r0, #4]
 800345e:	4b0c      	ldr	r3, [pc, #48]	@ (8003490 <cleanup_stdio+0x34>)
 8003460:	b510      	push	{r4, lr}
 8003462:	4299      	cmp	r1, r3
 8003464:	4604      	mov	r4, r0
 8003466:	d001      	beq.n	800346c <cleanup_stdio+0x10>
 8003468:	f000 fffc 	bl	8004464 <_fflush_r>
 800346c:	68a1      	ldr	r1, [r4, #8]
 800346e:	4b09      	ldr	r3, [pc, #36]	@ (8003494 <cleanup_stdio+0x38>)
 8003470:	4299      	cmp	r1, r3
 8003472:	d002      	beq.n	800347a <cleanup_stdio+0x1e>
 8003474:	4620      	mov	r0, r4
 8003476:	f000 fff5 	bl	8004464 <_fflush_r>
 800347a:	68e1      	ldr	r1, [r4, #12]
 800347c:	4b06      	ldr	r3, [pc, #24]	@ (8003498 <cleanup_stdio+0x3c>)
 800347e:	4299      	cmp	r1, r3
 8003480:	d004      	beq.n	800348c <cleanup_stdio+0x30>
 8003482:	4620      	mov	r0, r4
 8003484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003488:	f000 bfec 	b.w	8004464 <_fflush_r>
 800348c:	bd10      	pop	{r4, pc}
 800348e:	bf00      	nop
 8003490:	200002ac 	.word	0x200002ac
 8003494:	20000314 	.word	0x20000314
 8003498:	2000037c 	.word	0x2000037c

0800349c <global_stdio_init.part.0>:
 800349c:	b510      	push	{r4, lr}
 800349e:	4b0b      	ldr	r3, [pc, #44]	@ (80034cc <global_stdio_init.part.0+0x30>)
 80034a0:	4c0b      	ldr	r4, [pc, #44]	@ (80034d0 <global_stdio_init.part.0+0x34>)
 80034a2:	4a0c      	ldr	r2, [pc, #48]	@ (80034d4 <global_stdio_init.part.0+0x38>)
 80034a4:	4620      	mov	r0, r4
 80034a6:	601a      	str	r2, [r3, #0]
 80034a8:	2104      	movs	r1, #4
 80034aa:	2200      	movs	r2, #0
 80034ac:	f7ff ff94 	bl	80033d8 <std>
 80034b0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80034b4:	2201      	movs	r2, #1
 80034b6:	2109      	movs	r1, #9
 80034b8:	f7ff ff8e 	bl	80033d8 <std>
 80034bc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80034c0:	2202      	movs	r2, #2
 80034c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80034c6:	2112      	movs	r1, #18
 80034c8:	f7ff bf86 	b.w	80033d8 <std>
 80034cc:	200003e4 	.word	0x200003e4
 80034d0:	200002ac 	.word	0x200002ac
 80034d4:	08003445 	.word	0x08003445

080034d8 <__sfp_lock_acquire>:
 80034d8:	4801      	ldr	r0, [pc, #4]	@ (80034e0 <__sfp_lock_acquire+0x8>)
 80034da:	f000 ba22 	b.w	8003922 <__retarget_lock_acquire_recursive>
 80034de:	bf00      	nop
 80034e0:	200003ed 	.word	0x200003ed

080034e4 <__sfp_lock_release>:
 80034e4:	4801      	ldr	r0, [pc, #4]	@ (80034ec <__sfp_lock_release+0x8>)
 80034e6:	f000 ba1d 	b.w	8003924 <__retarget_lock_release_recursive>
 80034ea:	bf00      	nop
 80034ec:	200003ed 	.word	0x200003ed

080034f0 <__sinit>:
 80034f0:	b510      	push	{r4, lr}
 80034f2:	4604      	mov	r4, r0
 80034f4:	f7ff fff0 	bl	80034d8 <__sfp_lock_acquire>
 80034f8:	6a23      	ldr	r3, [r4, #32]
 80034fa:	b11b      	cbz	r3, 8003504 <__sinit+0x14>
 80034fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003500:	f7ff bff0 	b.w	80034e4 <__sfp_lock_release>
 8003504:	4b04      	ldr	r3, [pc, #16]	@ (8003518 <__sinit+0x28>)
 8003506:	6223      	str	r3, [r4, #32]
 8003508:	4b04      	ldr	r3, [pc, #16]	@ (800351c <__sinit+0x2c>)
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	2b00      	cmp	r3, #0
 800350e:	d1f5      	bne.n	80034fc <__sinit+0xc>
 8003510:	f7ff ffc4 	bl	800349c <global_stdio_init.part.0>
 8003514:	e7f2      	b.n	80034fc <__sinit+0xc>
 8003516:	bf00      	nop
 8003518:	0800345d 	.word	0x0800345d
 800351c:	200003e4 	.word	0x200003e4

08003520 <_fwalk_sglue>:
 8003520:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003524:	4607      	mov	r7, r0
 8003526:	4688      	mov	r8, r1
 8003528:	4614      	mov	r4, r2
 800352a:	2600      	movs	r6, #0
 800352c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003530:	f1b9 0901 	subs.w	r9, r9, #1
 8003534:	d505      	bpl.n	8003542 <_fwalk_sglue+0x22>
 8003536:	6824      	ldr	r4, [r4, #0]
 8003538:	2c00      	cmp	r4, #0
 800353a:	d1f7      	bne.n	800352c <_fwalk_sglue+0xc>
 800353c:	4630      	mov	r0, r6
 800353e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003542:	89ab      	ldrh	r3, [r5, #12]
 8003544:	2b01      	cmp	r3, #1
 8003546:	d907      	bls.n	8003558 <_fwalk_sglue+0x38>
 8003548:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800354c:	3301      	adds	r3, #1
 800354e:	d003      	beq.n	8003558 <_fwalk_sglue+0x38>
 8003550:	4629      	mov	r1, r5
 8003552:	4638      	mov	r0, r7
 8003554:	47c0      	blx	r8
 8003556:	4306      	orrs	r6, r0
 8003558:	3568      	adds	r5, #104	@ 0x68
 800355a:	e7e9      	b.n	8003530 <_fwalk_sglue+0x10>

0800355c <iprintf>:
 800355c:	b40f      	push	{r0, r1, r2, r3}
 800355e:	b507      	push	{r0, r1, r2, lr}
 8003560:	4906      	ldr	r1, [pc, #24]	@ (800357c <iprintf+0x20>)
 8003562:	ab04      	add	r3, sp, #16
 8003564:	6808      	ldr	r0, [r1, #0]
 8003566:	f853 2b04 	ldr.w	r2, [r3], #4
 800356a:	6881      	ldr	r1, [r0, #8]
 800356c:	9301      	str	r3, [sp, #4]
 800356e:	f000 fc51 	bl	8003e14 <_vfiprintf_r>
 8003572:	b003      	add	sp, #12
 8003574:	f85d eb04 	ldr.w	lr, [sp], #4
 8003578:	b004      	add	sp, #16
 800357a:	4770      	bx	lr
 800357c:	20000018 	.word	0x20000018

08003580 <_puts_r>:
 8003580:	6a03      	ldr	r3, [r0, #32]
 8003582:	b570      	push	{r4, r5, r6, lr}
 8003584:	4605      	mov	r5, r0
 8003586:	460e      	mov	r6, r1
 8003588:	6884      	ldr	r4, [r0, #8]
 800358a:	b90b      	cbnz	r3, 8003590 <_puts_r+0x10>
 800358c:	f7ff ffb0 	bl	80034f0 <__sinit>
 8003590:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003592:	07db      	lsls	r3, r3, #31
 8003594:	d405      	bmi.n	80035a2 <_puts_r+0x22>
 8003596:	89a3      	ldrh	r3, [r4, #12]
 8003598:	0598      	lsls	r0, r3, #22
 800359a:	d402      	bmi.n	80035a2 <_puts_r+0x22>
 800359c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800359e:	f000 f9c0 	bl	8003922 <__retarget_lock_acquire_recursive>
 80035a2:	89a3      	ldrh	r3, [r4, #12]
 80035a4:	0719      	lsls	r1, r3, #28
 80035a6:	d502      	bpl.n	80035ae <_puts_r+0x2e>
 80035a8:	6923      	ldr	r3, [r4, #16]
 80035aa:	2b00      	cmp	r3, #0
 80035ac:	d135      	bne.n	800361a <_puts_r+0x9a>
 80035ae:	4621      	mov	r1, r4
 80035b0:	4628      	mov	r0, r5
 80035b2:	f000 f8e7 	bl	8003784 <__swsetup_r>
 80035b6:	b380      	cbz	r0, 800361a <_puts_r+0x9a>
 80035b8:	f04f 35ff 	mov.w	r5, #4294967295
 80035bc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80035be:	07da      	lsls	r2, r3, #31
 80035c0:	d405      	bmi.n	80035ce <_puts_r+0x4e>
 80035c2:	89a3      	ldrh	r3, [r4, #12]
 80035c4:	059b      	lsls	r3, r3, #22
 80035c6:	d402      	bmi.n	80035ce <_puts_r+0x4e>
 80035c8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80035ca:	f000 f9ab 	bl	8003924 <__retarget_lock_release_recursive>
 80035ce:	4628      	mov	r0, r5
 80035d0:	bd70      	pop	{r4, r5, r6, pc}
 80035d2:	2b00      	cmp	r3, #0
 80035d4:	da04      	bge.n	80035e0 <_puts_r+0x60>
 80035d6:	69a2      	ldr	r2, [r4, #24]
 80035d8:	429a      	cmp	r2, r3
 80035da:	dc17      	bgt.n	800360c <_puts_r+0x8c>
 80035dc:	290a      	cmp	r1, #10
 80035de:	d015      	beq.n	800360c <_puts_r+0x8c>
 80035e0:	6823      	ldr	r3, [r4, #0]
 80035e2:	1c5a      	adds	r2, r3, #1
 80035e4:	6022      	str	r2, [r4, #0]
 80035e6:	7019      	strb	r1, [r3, #0]
 80035e8:	68a3      	ldr	r3, [r4, #8]
 80035ea:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80035ee:	3b01      	subs	r3, #1
 80035f0:	60a3      	str	r3, [r4, #8]
 80035f2:	2900      	cmp	r1, #0
 80035f4:	d1ed      	bne.n	80035d2 <_puts_r+0x52>
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	da11      	bge.n	800361e <_puts_r+0x9e>
 80035fa:	4622      	mov	r2, r4
 80035fc:	210a      	movs	r1, #10
 80035fe:	4628      	mov	r0, r5
 8003600:	f000 f881 	bl	8003706 <__swbuf_r>
 8003604:	3001      	adds	r0, #1
 8003606:	d0d7      	beq.n	80035b8 <_puts_r+0x38>
 8003608:	250a      	movs	r5, #10
 800360a:	e7d7      	b.n	80035bc <_puts_r+0x3c>
 800360c:	4622      	mov	r2, r4
 800360e:	4628      	mov	r0, r5
 8003610:	f000 f879 	bl	8003706 <__swbuf_r>
 8003614:	3001      	adds	r0, #1
 8003616:	d1e7      	bne.n	80035e8 <_puts_r+0x68>
 8003618:	e7ce      	b.n	80035b8 <_puts_r+0x38>
 800361a:	3e01      	subs	r6, #1
 800361c:	e7e4      	b.n	80035e8 <_puts_r+0x68>
 800361e:	6823      	ldr	r3, [r4, #0]
 8003620:	1c5a      	adds	r2, r3, #1
 8003622:	6022      	str	r2, [r4, #0]
 8003624:	220a      	movs	r2, #10
 8003626:	701a      	strb	r2, [r3, #0]
 8003628:	e7ee      	b.n	8003608 <_puts_r+0x88>
	...

0800362c <puts>:
 800362c:	4b02      	ldr	r3, [pc, #8]	@ (8003638 <puts+0xc>)
 800362e:	4601      	mov	r1, r0
 8003630:	6818      	ldr	r0, [r3, #0]
 8003632:	f7ff bfa5 	b.w	8003580 <_puts_r>
 8003636:	bf00      	nop
 8003638:	20000018 	.word	0x20000018

0800363c <siprintf>:
 800363c:	b40e      	push	{r1, r2, r3}
 800363e:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8003642:	b510      	push	{r4, lr}
 8003644:	2400      	movs	r4, #0
 8003646:	b09d      	sub	sp, #116	@ 0x74
 8003648:	ab1f      	add	r3, sp, #124	@ 0x7c
 800364a:	9002      	str	r0, [sp, #8]
 800364c:	9006      	str	r0, [sp, #24]
 800364e:	9107      	str	r1, [sp, #28]
 8003650:	9104      	str	r1, [sp, #16]
 8003652:	4809      	ldr	r0, [pc, #36]	@ (8003678 <siprintf+0x3c>)
 8003654:	4909      	ldr	r1, [pc, #36]	@ (800367c <siprintf+0x40>)
 8003656:	f853 2b04 	ldr.w	r2, [r3], #4
 800365a:	9105      	str	r1, [sp, #20]
 800365c:	6800      	ldr	r0, [r0, #0]
 800365e:	a902      	add	r1, sp, #8
 8003660:	9301      	str	r3, [sp, #4]
 8003662:	941b      	str	r4, [sp, #108]	@ 0x6c
 8003664:	f000 fab2 	bl	8003bcc <_svfiprintf_r>
 8003668:	9b02      	ldr	r3, [sp, #8]
 800366a:	701c      	strb	r4, [r3, #0]
 800366c:	b01d      	add	sp, #116	@ 0x74
 800366e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003672:	b003      	add	sp, #12
 8003674:	4770      	bx	lr
 8003676:	bf00      	nop
 8003678:	20000018 	.word	0x20000018
 800367c:	ffff0208 	.word	0xffff0208

08003680 <__sread>:
 8003680:	b510      	push	{r4, lr}
 8003682:	460c      	mov	r4, r1
 8003684:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003688:	f000 f8fc 	bl	8003884 <_read_r>
 800368c:	2800      	cmp	r0, #0
 800368e:	bfab      	itete	ge
 8003690:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8003692:	89a3      	ldrhlt	r3, [r4, #12]
 8003694:	181b      	addge	r3, r3, r0
 8003696:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800369a:	bfac      	ite	ge
 800369c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800369e:	81a3      	strhlt	r3, [r4, #12]
 80036a0:	bd10      	pop	{r4, pc}

080036a2 <__swrite>:
 80036a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80036a6:	461f      	mov	r7, r3
 80036a8:	898b      	ldrh	r3, [r1, #12]
 80036aa:	4605      	mov	r5, r0
 80036ac:	05db      	lsls	r3, r3, #23
 80036ae:	460c      	mov	r4, r1
 80036b0:	4616      	mov	r6, r2
 80036b2:	d505      	bpl.n	80036c0 <__swrite+0x1e>
 80036b4:	2302      	movs	r3, #2
 80036b6:	2200      	movs	r2, #0
 80036b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80036bc:	f000 f8d0 	bl	8003860 <_lseek_r>
 80036c0:	89a3      	ldrh	r3, [r4, #12]
 80036c2:	4632      	mov	r2, r6
 80036c4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80036c8:	81a3      	strh	r3, [r4, #12]
 80036ca:	4628      	mov	r0, r5
 80036cc:	463b      	mov	r3, r7
 80036ce:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80036d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80036d6:	f000 b8e7 	b.w	80038a8 <_write_r>

080036da <__sseek>:
 80036da:	b510      	push	{r4, lr}
 80036dc:	460c      	mov	r4, r1
 80036de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80036e2:	f000 f8bd 	bl	8003860 <_lseek_r>
 80036e6:	1c43      	adds	r3, r0, #1
 80036e8:	89a3      	ldrh	r3, [r4, #12]
 80036ea:	bf15      	itete	ne
 80036ec:	6560      	strne	r0, [r4, #84]	@ 0x54
 80036ee:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80036f2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80036f6:	81a3      	strheq	r3, [r4, #12]
 80036f8:	bf18      	it	ne
 80036fa:	81a3      	strhne	r3, [r4, #12]
 80036fc:	bd10      	pop	{r4, pc}

080036fe <__sclose>:
 80036fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003702:	f000 b89d 	b.w	8003840 <_close_r>

08003706 <__swbuf_r>:
 8003706:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003708:	460e      	mov	r6, r1
 800370a:	4614      	mov	r4, r2
 800370c:	4605      	mov	r5, r0
 800370e:	b118      	cbz	r0, 8003718 <__swbuf_r+0x12>
 8003710:	6a03      	ldr	r3, [r0, #32]
 8003712:	b90b      	cbnz	r3, 8003718 <__swbuf_r+0x12>
 8003714:	f7ff feec 	bl	80034f0 <__sinit>
 8003718:	69a3      	ldr	r3, [r4, #24]
 800371a:	60a3      	str	r3, [r4, #8]
 800371c:	89a3      	ldrh	r3, [r4, #12]
 800371e:	071a      	lsls	r2, r3, #28
 8003720:	d501      	bpl.n	8003726 <__swbuf_r+0x20>
 8003722:	6923      	ldr	r3, [r4, #16]
 8003724:	b943      	cbnz	r3, 8003738 <__swbuf_r+0x32>
 8003726:	4621      	mov	r1, r4
 8003728:	4628      	mov	r0, r5
 800372a:	f000 f82b 	bl	8003784 <__swsetup_r>
 800372e:	b118      	cbz	r0, 8003738 <__swbuf_r+0x32>
 8003730:	f04f 37ff 	mov.w	r7, #4294967295
 8003734:	4638      	mov	r0, r7
 8003736:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003738:	6823      	ldr	r3, [r4, #0]
 800373a:	6922      	ldr	r2, [r4, #16]
 800373c:	b2f6      	uxtb	r6, r6
 800373e:	1a98      	subs	r0, r3, r2
 8003740:	6963      	ldr	r3, [r4, #20]
 8003742:	4637      	mov	r7, r6
 8003744:	4283      	cmp	r3, r0
 8003746:	dc05      	bgt.n	8003754 <__swbuf_r+0x4e>
 8003748:	4621      	mov	r1, r4
 800374a:	4628      	mov	r0, r5
 800374c:	f000 fe8a 	bl	8004464 <_fflush_r>
 8003750:	2800      	cmp	r0, #0
 8003752:	d1ed      	bne.n	8003730 <__swbuf_r+0x2a>
 8003754:	68a3      	ldr	r3, [r4, #8]
 8003756:	3b01      	subs	r3, #1
 8003758:	60a3      	str	r3, [r4, #8]
 800375a:	6823      	ldr	r3, [r4, #0]
 800375c:	1c5a      	adds	r2, r3, #1
 800375e:	6022      	str	r2, [r4, #0]
 8003760:	701e      	strb	r6, [r3, #0]
 8003762:	6962      	ldr	r2, [r4, #20]
 8003764:	1c43      	adds	r3, r0, #1
 8003766:	429a      	cmp	r2, r3
 8003768:	d004      	beq.n	8003774 <__swbuf_r+0x6e>
 800376a:	89a3      	ldrh	r3, [r4, #12]
 800376c:	07db      	lsls	r3, r3, #31
 800376e:	d5e1      	bpl.n	8003734 <__swbuf_r+0x2e>
 8003770:	2e0a      	cmp	r6, #10
 8003772:	d1df      	bne.n	8003734 <__swbuf_r+0x2e>
 8003774:	4621      	mov	r1, r4
 8003776:	4628      	mov	r0, r5
 8003778:	f000 fe74 	bl	8004464 <_fflush_r>
 800377c:	2800      	cmp	r0, #0
 800377e:	d0d9      	beq.n	8003734 <__swbuf_r+0x2e>
 8003780:	e7d6      	b.n	8003730 <__swbuf_r+0x2a>
	...

08003784 <__swsetup_r>:
 8003784:	b538      	push	{r3, r4, r5, lr}
 8003786:	4b29      	ldr	r3, [pc, #164]	@ (800382c <__swsetup_r+0xa8>)
 8003788:	4605      	mov	r5, r0
 800378a:	6818      	ldr	r0, [r3, #0]
 800378c:	460c      	mov	r4, r1
 800378e:	b118      	cbz	r0, 8003798 <__swsetup_r+0x14>
 8003790:	6a03      	ldr	r3, [r0, #32]
 8003792:	b90b      	cbnz	r3, 8003798 <__swsetup_r+0x14>
 8003794:	f7ff feac 	bl	80034f0 <__sinit>
 8003798:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800379c:	0719      	lsls	r1, r3, #28
 800379e:	d422      	bmi.n	80037e6 <__swsetup_r+0x62>
 80037a0:	06da      	lsls	r2, r3, #27
 80037a2:	d407      	bmi.n	80037b4 <__swsetup_r+0x30>
 80037a4:	2209      	movs	r2, #9
 80037a6:	602a      	str	r2, [r5, #0]
 80037a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80037ac:	f04f 30ff 	mov.w	r0, #4294967295
 80037b0:	81a3      	strh	r3, [r4, #12]
 80037b2:	e033      	b.n	800381c <__swsetup_r+0x98>
 80037b4:	0758      	lsls	r0, r3, #29
 80037b6:	d512      	bpl.n	80037de <__swsetup_r+0x5a>
 80037b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80037ba:	b141      	cbz	r1, 80037ce <__swsetup_r+0x4a>
 80037bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80037c0:	4299      	cmp	r1, r3
 80037c2:	d002      	beq.n	80037ca <__swsetup_r+0x46>
 80037c4:	4628      	mov	r0, r5
 80037c6:	f000 f8af 	bl	8003928 <_free_r>
 80037ca:	2300      	movs	r3, #0
 80037cc:	6363      	str	r3, [r4, #52]	@ 0x34
 80037ce:	89a3      	ldrh	r3, [r4, #12]
 80037d0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80037d4:	81a3      	strh	r3, [r4, #12]
 80037d6:	2300      	movs	r3, #0
 80037d8:	6063      	str	r3, [r4, #4]
 80037da:	6923      	ldr	r3, [r4, #16]
 80037dc:	6023      	str	r3, [r4, #0]
 80037de:	89a3      	ldrh	r3, [r4, #12]
 80037e0:	f043 0308 	orr.w	r3, r3, #8
 80037e4:	81a3      	strh	r3, [r4, #12]
 80037e6:	6923      	ldr	r3, [r4, #16]
 80037e8:	b94b      	cbnz	r3, 80037fe <__swsetup_r+0x7a>
 80037ea:	89a3      	ldrh	r3, [r4, #12]
 80037ec:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80037f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80037f4:	d003      	beq.n	80037fe <__swsetup_r+0x7a>
 80037f6:	4621      	mov	r1, r4
 80037f8:	4628      	mov	r0, r5
 80037fa:	f000 fe80 	bl	80044fe <__smakebuf_r>
 80037fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003802:	f013 0201 	ands.w	r2, r3, #1
 8003806:	d00a      	beq.n	800381e <__swsetup_r+0x9a>
 8003808:	2200      	movs	r2, #0
 800380a:	60a2      	str	r2, [r4, #8]
 800380c:	6962      	ldr	r2, [r4, #20]
 800380e:	4252      	negs	r2, r2
 8003810:	61a2      	str	r2, [r4, #24]
 8003812:	6922      	ldr	r2, [r4, #16]
 8003814:	b942      	cbnz	r2, 8003828 <__swsetup_r+0xa4>
 8003816:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800381a:	d1c5      	bne.n	80037a8 <__swsetup_r+0x24>
 800381c:	bd38      	pop	{r3, r4, r5, pc}
 800381e:	0799      	lsls	r1, r3, #30
 8003820:	bf58      	it	pl
 8003822:	6962      	ldrpl	r2, [r4, #20]
 8003824:	60a2      	str	r2, [r4, #8]
 8003826:	e7f4      	b.n	8003812 <__swsetup_r+0x8e>
 8003828:	2000      	movs	r0, #0
 800382a:	e7f7      	b.n	800381c <__swsetup_r+0x98>
 800382c:	20000018 	.word	0x20000018

08003830 <memset>:
 8003830:	4603      	mov	r3, r0
 8003832:	4402      	add	r2, r0
 8003834:	4293      	cmp	r3, r2
 8003836:	d100      	bne.n	800383a <memset+0xa>
 8003838:	4770      	bx	lr
 800383a:	f803 1b01 	strb.w	r1, [r3], #1
 800383e:	e7f9      	b.n	8003834 <memset+0x4>

08003840 <_close_r>:
 8003840:	b538      	push	{r3, r4, r5, lr}
 8003842:	2300      	movs	r3, #0
 8003844:	4d05      	ldr	r5, [pc, #20]	@ (800385c <_close_r+0x1c>)
 8003846:	4604      	mov	r4, r0
 8003848:	4608      	mov	r0, r1
 800384a:	602b      	str	r3, [r5, #0]
 800384c:	f7fd fb05 	bl	8000e5a <_close>
 8003850:	1c43      	adds	r3, r0, #1
 8003852:	d102      	bne.n	800385a <_close_r+0x1a>
 8003854:	682b      	ldr	r3, [r5, #0]
 8003856:	b103      	cbz	r3, 800385a <_close_r+0x1a>
 8003858:	6023      	str	r3, [r4, #0]
 800385a:	bd38      	pop	{r3, r4, r5, pc}
 800385c:	200003e8 	.word	0x200003e8

08003860 <_lseek_r>:
 8003860:	b538      	push	{r3, r4, r5, lr}
 8003862:	4604      	mov	r4, r0
 8003864:	4608      	mov	r0, r1
 8003866:	4611      	mov	r1, r2
 8003868:	2200      	movs	r2, #0
 800386a:	4d05      	ldr	r5, [pc, #20]	@ (8003880 <_lseek_r+0x20>)
 800386c:	602a      	str	r2, [r5, #0]
 800386e:	461a      	mov	r2, r3
 8003870:	f7fd fb17 	bl	8000ea2 <_lseek>
 8003874:	1c43      	adds	r3, r0, #1
 8003876:	d102      	bne.n	800387e <_lseek_r+0x1e>
 8003878:	682b      	ldr	r3, [r5, #0]
 800387a:	b103      	cbz	r3, 800387e <_lseek_r+0x1e>
 800387c:	6023      	str	r3, [r4, #0]
 800387e:	bd38      	pop	{r3, r4, r5, pc}
 8003880:	200003e8 	.word	0x200003e8

08003884 <_read_r>:
 8003884:	b538      	push	{r3, r4, r5, lr}
 8003886:	4604      	mov	r4, r0
 8003888:	4608      	mov	r0, r1
 800388a:	4611      	mov	r1, r2
 800388c:	2200      	movs	r2, #0
 800388e:	4d05      	ldr	r5, [pc, #20]	@ (80038a4 <_read_r+0x20>)
 8003890:	602a      	str	r2, [r5, #0]
 8003892:	461a      	mov	r2, r3
 8003894:	f7fd faa8 	bl	8000de8 <_read>
 8003898:	1c43      	adds	r3, r0, #1
 800389a:	d102      	bne.n	80038a2 <_read_r+0x1e>
 800389c:	682b      	ldr	r3, [r5, #0]
 800389e:	b103      	cbz	r3, 80038a2 <_read_r+0x1e>
 80038a0:	6023      	str	r3, [r4, #0]
 80038a2:	bd38      	pop	{r3, r4, r5, pc}
 80038a4:	200003e8 	.word	0x200003e8

080038a8 <_write_r>:
 80038a8:	b538      	push	{r3, r4, r5, lr}
 80038aa:	4604      	mov	r4, r0
 80038ac:	4608      	mov	r0, r1
 80038ae:	4611      	mov	r1, r2
 80038b0:	2200      	movs	r2, #0
 80038b2:	4d05      	ldr	r5, [pc, #20]	@ (80038c8 <_write_r+0x20>)
 80038b4:	602a      	str	r2, [r5, #0]
 80038b6:	461a      	mov	r2, r3
 80038b8:	f7fd fab3 	bl	8000e22 <_write>
 80038bc:	1c43      	adds	r3, r0, #1
 80038be:	d102      	bne.n	80038c6 <_write_r+0x1e>
 80038c0:	682b      	ldr	r3, [r5, #0]
 80038c2:	b103      	cbz	r3, 80038c6 <_write_r+0x1e>
 80038c4:	6023      	str	r3, [r4, #0]
 80038c6:	bd38      	pop	{r3, r4, r5, pc}
 80038c8:	200003e8 	.word	0x200003e8

080038cc <__errno>:
 80038cc:	4b01      	ldr	r3, [pc, #4]	@ (80038d4 <__errno+0x8>)
 80038ce:	6818      	ldr	r0, [r3, #0]
 80038d0:	4770      	bx	lr
 80038d2:	bf00      	nop
 80038d4:	20000018 	.word	0x20000018

080038d8 <__libc_init_array>:
 80038d8:	b570      	push	{r4, r5, r6, lr}
 80038da:	2600      	movs	r6, #0
 80038dc:	4d0c      	ldr	r5, [pc, #48]	@ (8003910 <__libc_init_array+0x38>)
 80038de:	4c0d      	ldr	r4, [pc, #52]	@ (8003914 <__libc_init_array+0x3c>)
 80038e0:	1b64      	subs	r4, r4, r5
 80038e2:	10a4      	asrs	r4, r4, #2
 80038e4:	42a6      	cmp	r6, r4
 80038e6:	d109      	bne.n	80038fc <__libc_init_array+0x24>
 80038e8:	f000 fee4 	bl	80046b4 <_init>
 80038ec:	2600      	movs	r6, #0
 80038ee:	4d0a      	ldr	r5, [pc, #40]	@ (8003918 <__libc_init_array+0x40>)
 80038f0:	4c0a      	ldr	r4, [pc, #40]	@ (800391c <__libc_init_array+0x44>)
 80038f2:	1b64      	subs	r4, r4, r5
 80038f4:	10a4      	asrs	r4, r4, #2
 80038f6:	42a6      	cmp	r6, r4
 80038f8:	d105      	bne.n	8003906 <__libc_init_array+0x2e>
 80038fa:	bd70      	pop	{r4, r5, r6, pc}
 80038fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8003900:	4798      	blx	r3
 8003902:	3601      	adds	r6, #1
 8003904:	e7ee      	b.n	80038e4 <__libc_init_array+0xc>
 8003906:	f855 3b04 	ldr.w	r3, [r5], #4
 800390a:	4798      	blx	r3
 800390c:	3601      	adds	r6, #1
 800390e:	e7f2      	b.n	80038f6 <__libc_init_array+0x1e>
 8003910:	080047ec 	.word	0x080047ec
 8003914:	080047ec 	.word	0x080047ec
 8003918:	080047ec 	.word	0x080047ec
 800391c:	080047f0 	.word	0x080047f0

08003920 <__retarget_lock_init_recursive>:
 8003920:	4770      	bx	lr

08003922 <__retarget_lock_acquire_recursive>:
 8003922:	4770      	bx	lr

08003924 <__retarget_lock_release_recursive>:
 8003924:	4770      	bx	lr
	...

08003928 <_free_r>:
 8003928:	b538      	push	{r3, r4, r5, lr}
 800392a:	4605      	mov	r5, r0
 800392c:	2900      	cmp	r1, #0
 800392e:	d040      	beq.n	80039b2 <_free_r+0x8a>
 8003930:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003934:	1f0c      	subs	r4, r1, #4
 8003936:	2b00      	cmp	r3, #0
 8003938:	bfb8      	it	lt
 800393a:	18e4      	addlt	r4, r4, r3
 800393c:	f000 f8de 	bl	8003afc <__malloc_lock>
 8003940:	4a1c      	ldr	r2, [pc, #112]	@ (80039b4 <_free_r+0x8c>)
 8003942:	6813      	ldr	r3, [r2, #0]
 8003944:	b933      	cbnz	r3, 8003954 <_free_r+0x2c>
 8003946:	6063      	str	r3, [r4, #4]
 8003948:	6014      	str	r4, [r2, #0]
 800394a:	4628      	mov	r0, r5
 800394c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003950:	f000 b8da 	b.w	8003b08 <__malloc_unlock>
 8003954:	42a3      	cmp	r3, r4
 8003956:	d908      	bls.n	800396a <_free_r+0x42>
 8003958:	6820      	ldr	r0, [r4, #0]
 800395a:	1821      	adds	r1, r4, r0
 800395c:	428b      	cmp	r3, r1
 800395e:	bf01      	itttt	eq
 8003960:	6819      	ldreq	r1, [r3, #0]
 8003962:	685b      	ldreq	r3, [r3, #4]
 8003964:	1809      	addeq	r1, r1, r0
 8003966:	6021      	streq	r1, [r4, #0]
 8003968:	e7ed      	b.n	8003946 <_free_r+0x1e>
 800396a:	461a      	mov	r2, r3
 800396c:	685b      	ldr	r3, [r3, #4]
 800396e:	b10b      	cbz	r3, 8003974 <_free_r+0x4c>
 8003970:	42a3      	cmp	r3, r4
 8003972:	d9fa      	bls.n	800396a <_free_r+0x42>
 8003974:	6811      	ldr	r1, [r2, #0]
 8003976:	1850      	adds	r0, r2, r1
 8003978:	42a0      	cmp	r0, r4
 800397a:	d10b      	bne.n	8003994 <_free_r+0x6c>
 800397c:	6820      	ldr	r0, [r4, #0]
 800397e:	4401      	add	r1, r0
 8003980:	1850      	adds	r0, r2, r1
 8003982:	4283      	cmp	r3, r0
 8003984:	6011      	str	r1, [r2, #0]
 8003986:	d1e0      	bne.n	800394a <_free_r+0x22>
 8003988:	6818      	ldr	r0, [r3, #0]
 800398a:	685b      	ldr	r3, [r3, #4]
 800398c:	4408      	add	r0, r1
 800398e:	6010      	str	r0, [r2, #0]
 8003990:	6053      	str	r3, [r2, #4]
 8003992:	e7da      	b.n	800394a <_free_r+0x22>
 8003994:	d902      	bls.n	800399c <_free_r+0x74>
 8003996:	230c      	movs	r3, #12
 8003998:	602b      	str	r3, [r5, #0]
 800399a:	e7d6      	b.n	800394a <_free_r+0x22>
 800399c:	6820      	ldr	r0, [r4, #0]
 800399e:	1821      	adds	r1, r4, r0
 80039a0:	428b      	cmp	r3, r1
 80039a2:	bf01      	itttt	eq
 80039a4:	6819      	ldreq	r1, [r3, #0]
 80039a6:	685b      	ldreq	r3, [r3, #4]
 80039a8:	1809      	addeq	r1, r1, r0
 80039aa:	6021      	streq	r1, [r4, #0]
 80039ac:	6063      	str	r3, [r4, #4]
 80039ae:	6054      	str	r4, [r2, #4]
 80039b0:	e7cb      	b.n	800394a <_free_r+0x22>
 80039b2:	bd38      	pop	{r3, r4, r5, pc}
 80039b4:	200003f4 	.word	0x200003f4

080039b8 <sbrk_aligned>:
 80039b8:	b570      	push	{r4, r5, r6, lr}
 80039ba:	4e0f      	ldr	r6, [pc, #60]	@ (80039f8 <sbrk_aligned+0x40>)
 80039bc:	460c      	mov	r4, r1
 80039be:	6831      	ldr	r1, [r6, #0]
 80039c0:	4605      	mov	r5, r0
 80039c2:	b911      	cbnz	r1, 80039ca <sbrk_aligned+0x12>
 80039c4:	f000 fe14 	bl	80045f0 <_sbrk_r>
 80039c8:	6030      	str	r0, [r6, #0]
 80039ca:	4621      	mov	r1, r4
 80039cc:	4628      	mov	r0, r5
 80039ce:	f000 fe0f 	bl	80045f0 <_sbrk_r>
 80039d2:	1c43      	adds	r3, r0, #1
 80039d4:	d103      	bne.n	80039de <sbrk_aligned+0x26>
 80039d6:	f04f 34ff 	mov.w	r4, #4294967295
 80039da:	4620      	mov	r0, r4
 80039dc:	bd70      	pop	{r4, r5, r6, pc}
 80039de:	1cc4      	adds	r4, r0, #3
 80039e0:	f024 0403 	bic.w	r4, r4, #3
 80039e4:	42a0      	cmp	r0, r4
 80039e6:	d0f8      	beq.n	80039da <sbrk_aligned+0x22>
 80039e8:	1a21      	subs	r1, r4, r0
 80039ea:	4628      	mov	r0, r5
 80039ec:	f000 fe00 	bl	80045f0 <_sbrk_r>
 80039f0:	3001      	adds	r0, #1
 80039f2:	d1f2      	bne.n	80039da <sbrk_aligned+0x22>
 80039f4:	e7ef      	b.n	80039d6 <sbrk_aligned+0x1e>
 80039f6:	bf00      	nop
 80039f8:	200003f0 	.word	0x200003f0

080039fc <_malloc_r>:
 80039fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a00:	1ccd      	adds	r5, r1, #3
 8003a02:	f025 0503 	bic.w	r5, r5, #3
 8003a06:	3508      	adds	r5, #8
 8003a08:	2d0c      	cmp	r5, #12
 8003a0a:	bf38      	it	cc
 8003a0c:	250c      	movcc	r5, #12
 8003a0e:	2d00      	cmp	r5, #0
 8003a10:	4606      	mov	r6, r0
 8003a12:	db01      	blt.n	8003a18 <_malloc_r+0x1c>
 8003a14:	42a9      	cmp	r1, r5
 8003a16:	d904      	bls.n	8003a22 <_malloc_r+0x26>
 8003a18:	230c      	movs	r3, #12
 8003a1a:	6033      	str	r3, [r6, #0]
 8003a1c:	2000      	movs	r0, #0
 8003a1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003a22:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003af8 <_malloc_r+0xfc>
 8003a26:	f000 f869 	bl	8003afc <__malloc_lock>
 8003a2a:	f8d8 3000 	ldr.w	r3, [r8]
 8003a2e:	461c      	mov	r4, r3
 8003a30:	bb44      	cbnz	r4, 8003a84 <_malloc_r+0x88>
 8003a32:	4629      	mov	r1, r5
 8003a34:	4630      	mov	r0, r6
 8003a36:	f7ff ffbf 	bl	80039b8 <sbrk_aligned>
 8003a3a:	1c43      	adds	r3, r0, #1
 8003a3c:	4604      	mov	r4, r0
 8003a3e:	d158      	bne.n	8003af2 <_malloc_r+0xf6>
 8003a40:	f8d8 4000 	ldr.w	r4, [r8]
 8003a44:	4627      	mov	r7, r4
 8003a46:	2f00      	cmp	r7, #0
 8003a48:	d143      	bne.n	8003ad2 <_malloc_r+0xd6>
 8003a4a:	2c00      	cmp	r4, #0
 8003a4c:	d04b      	beq.n	8003ae6 <_malloc_r+0xea>
 8003a4e:	6823      	ldr	r3, [r4, #0]
 8003a50:	4639      	mov	r1, r7
 8003a52:	4630      	mov	r0, r6
 8003a54:	eb04 0903 	add.w	r9, r4, r3
 8003a58:	f000 fdca 	bl	80045f0 <_sbrk_r>
 8003a5c:	4581      	cmp	r9, r0
 8003a5e:	d142      	bne.n	8003ae6 <_malloc_r+0xea>
 8003a60:	6821      	ldr	r1, [r4, #0]
 8003a62:	4630      	mov	r0, r6
 8003a64:	1a6d      	subs	r5, r5, r1
 8003a66:	4629      	mov	r1, r5
 8003a68:	f7ff ffa6 	bl	80039b8 <sbrk_aligned>
 8003a6c:	3001      	adds	r0, #1
 8003a6e:	d03a      	beq.n	8003ae6 <_malloc_r+0xea>
 8003a70:	6823      	ldr	r3, [r4, #0]
 8003a72:	442b      	add	r3, r5
 8003a74:	6023      	str	r3, [r4, #0]
 8003a76:	f8d8 3000 	ldr.w	r3, [r8]
 8003a7a:	685a      	ldr	r2, [r3, #4]
 8003a7c:	bb62      	cbnz	r2, 8003ad8 <_malloc_r+0xdc>
 8003a7e:	f8c8 7000 	str.w	r7, [r8]
 8003a82:	e00f      	b.n	8003aa4 <_malloc_r+0xa8>
 8003a84:	6822      	ldr	r2, [r4, #0]
 8003a86:	1b52      	subs	r2, r2, r5
 8003a88:	d420      	bmi.n	8003acc <_malloc_r+0xd0>
 8003a8a:	2a0b      	cmp	r2, #11
 8003a8c:	d917      	bls.n	8003abe <_malloc_r+0xc2>
 8003a8e:	1961      	adds	r1, r4, r5
 8003a90:	42a3      	cmp	r3, r4
 8003a92:	6025      	str	r5, [r4, #0]
 8003a94:	bf18      	it	ne
 8003a96:	6059      	strne	r1, [r3, #4]
 8003a98:	6863      	ldr	r3, [r4, #4]
 8003a9a:	bf08      	it	eq
 8003a9c:	f8c8 1000 	streq.w	r1, [r8]
 8003aa0:	5162      	str	r2, [r4, r5]
 8003aa2:	604b      	str	r3, [r1, #4]
 8003aa4:	4630      	mov	r0, r6
 8003aa6:	f000 f82f 	bl	8003b08 <__malloc_unlock>
 8003aaa:	f104 000b 	add.w	r0, r4, #11
 8003aae:	1d23      	adds	r3, r4, #4
 8003ab0:	f020 0007 	bic.w	r0, r0, #7
 8003ab4:	1ac2      	subs	r2, r0, r3
 8003ab6:	bf1c      	itt	ne
 8003ab8:	1a1b      	subne	r3, r3, r0
 8003aba:	50a3      	strne	r3, [r4, r2]
 8003abc:	e7af      	b.n	8003a1e <_malloc_r+0x22>
 8003abe:	6862      	ldr	r2, [r4, #4]
 8003ac0:	42a3      	cmp	r3, r4
 8003ac2:	bf0c      	ite	eq
 8003ac4:	f8c8 2000 	streq.w	r2, [r8]
 8003ac8:	605a      	strne	r2, [r3, #4]
 8003aca:	e7eb      	b.n	8003aa4 <_malloc_r+0xa8>
 8003acc:	4623      	mov	r3, r4
 8003ace:	6864      	ldr	r4, [r4, #4]
 8003ad0:	e7ae      	b.n	8003a30 <_malloc_r+0x34>
 8003ad2:	463c      	mov	r4, r7
 8003ad4:	687f      	ldr	r7, [r7, #4]
 8003ad6:	e7b6      	b.n	8003a46 <_malloc_r+0x4a>
 8003ad8:	461a      	mov	r2, r3
 8003ada:	685b      	ldr	r3, [r3, #4]
 8003adc:	42a3      	cmp	r3, r4
 8003ade:	d1fb      	bne.n	8003ad8 <_malloc_r+0xdc>
 8003ae0:	2300      	movs	r3, #0
 8003ae2:	6053      	str	r3, [r2, #4]
 8003ae4:	e7de      	b.n	8003aa4 <_malloc_r+0xa8>
 8003ae6:	230c      	movs	r3, #12
 8003ae8:	4630      	mov	r0, r6
 8003aea:	6033      	str	r3, [r6, #0]
 8003aec:	f000 f80c 	bl	8003b08 <__malloc_unlock>
 8003af0:	e794      	b.n	8003a1c <_malloc_r+0x20>
 8003af2:	6005      	str	r5, [r0, #0]
 8003af4:	e7d6      	b.n	8003aa4 <_malloc_r+0xa8>
 8003af6:	bf00      	nop
 8003af8:	200003f4 	.word	0x200003f4

08003afc <__malloc_lock>:
 8003afc:	4801      	ldr	r0, [pc, #4]	@ (8003b04 <__malloc_lock+0x8>)
 8003afe:	f7ff bf10 	b.w	8003922 <__retarget_lock_acquire_recursive>
 8003b02:	bf00      	nop
 8003b04:	200003ec 	.word	0x200003ec

08003b08 <__malloc_unlock>:
 8003b08:	4801      	ldr	r0, [pc, #4]	@ (8003b10 <__malloc_unlock+0x8>)
 8003b0a:	f7ff bf0b 	b.w	8003924 <__retarget_lock_release_recursive>
 8003b0e:	bf00      	nop
 8003b10:	200003ec 	.word	0x200003ec

08003b14 <__ssputs_r>:
 8003b14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b18:	461f      	mov	r7, r3
 8003b1a:	688e      	ldr	r6, [r1, #8]
 8003b1c:	4682      	mov	sl, r0
 8003b1e:	42be      	cmp	r6, r7
 8003b20:	460c      	mov	r4, r1
 8003b22:	4690      	mov	r8, r2
 8003b24:	680b      	ldr	r3, [r1, #0]
 8003b26:	d82d      	bhi.n	8003b84 <__ssputs_r+0x70>
 8003b28:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003b2c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003b30:	d026      	beq.n	8003b80 <__ssputs_r+0x6c>
 8003b32:	6965      	ldr	r5, [r4, #20]
 8003b34:	6909      	ldr	r1, [r1, #16]
 8003b36:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003b3a:	eba3 0901 	sub.w	r9, r3, r1
 8003b3e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003b42:	1c7b      	adds	r3, r7, #1
 8003b44:	444b      	add	r3, r9
 8003b46:	106d      	asrs	r5, r5, #1
 8003b48:	429d      	cmp	r5, r3
 8003b4a:	bf38      	it	cc
 8003b4c:	461d      	movcc	r5, r3
 8003b4e:	0553      	lsls	r3, r2, #21
 8003b50:	d527      	bpl.n	8003ba2 <__ssputs_r+0x8e>
 8003b52:	4629      	mov	r1, r5
 8003b54:	f7ff ff52 	bl	80039fc <_malloc_r>
 8003b58:	4606      	mov	r6, r0
 8003b5a:	b360      	cbz	r0, 8003bb6 <__ssputs_r+0xa2>
 8003b5c:	464a      	mov	r2, r9
 8003b5e:	6921      	ldr	r1, [r4, #16]
 8003b60:	f000 fd64 	bl	800462c <memcpy>
 8003b64:	89a3      	ldrh	r3, [r4, #12]
 8003b66:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003b6a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003b6e:	81a3      	strh	r3, [r4, #12]
 8003b70:	6126      	str	r6, [r4, #16]
 8003b72:	444e      	add	r6, r9
 8003b74:	6026      	str	r6, [r4, #0]
 8003b76:	463e      	mov	r6, r7
 8003b78:	6165      	str	r5, [r4, #20]
 8003b7a:	eba5 0509 	sub.w	r5, r5, r9
 8003b7e:	60a5      	str	r5, [r4, #8]
 8003b80:	42be      	cmp	r6, r7
 8003b82:	d900      	bls.n	8003b86 <__ssputs_r+0x72>
 8003b84:	463e      	mov	r6, r7
 8003b86:	4632      	mov	r2, r6
 8003b88:	4641      	mov	r1, r8
 8003b8a:	6820      	ldr	r0, [r4, #0]
 8003b8c:	f000 fcf3 	bl	8004576 <memmove>
 8003b90:	2000      	movs	r0, #0
 8003b92:	68a3      	ldr	r3, [r4, #8]
 8003b94:	1b9b      	subs	r3, r3, r6
 8003b96:	60a3      	str	r3, [r4, #8]
 8003b98:	6823      	ldr	r3, [r4, #0]
 8003b9a:	4433      	add	r3, r6
 8003b9c:	6023      	str	r3, [r4, #0]
 8003b9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ba2:	462a      	mov	r2, r5
 8003ba4:	f000 fd50 	bl	8004648 <_realloc_r>
 8003ba8:	4606      	mov	r6, r0
 8003baa:	2800      	cmp	r0, #0
 8003bac:	d1e0      	bne.n	8003b70 <__ssputs_r+0x5c>
 8003bae:	4650      	mov	r0, sl
 8003bb0:	6921      	ldr	r1, [r4, #16]
 8003bb2:	f7ff feb9 	bl	8003928 <_free_r>
 8003bb6:	230c      	movs	r3, #12
 8003bb8:	f8ca 3000 	str.w	r3, [sl]
 8003bbc:	89a3      	ldrh	r3, [r4, #12]
 8003bbe:	f04f 30ff 	mov.w	r0, #4294967295
 8003bc2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003bc6:	81a3      	strh	r3, [r4, #12]
 8003bc8:	e7e9      	b.n	8003b9e <__ssputs_r+0x8a>
	...

08003bcc <_svfiprintf_r>:
 8003bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bd0:	4698      	mov	r8, r3
 8003bd2:	898b      	ldrh	r3, [r1, #12]
 8003bd4:	4607      	mov	r7, r0
 8003bd6:	061b      	lsls	r3, r3, #24
 8003bd8:	460d      	mov	r5, r1
 8003bda:	4614      	mov	r4, r2
 8003bdc:	b09d      	sub	sp, #116	@ 0x74
 8003bde:	d510      	bpl.n	8003c02 <_svfiprintf_r+0x36>
 8003be0:	690b      	ldr	r3, [r1, #16]
 8003be2:	b973      	cbnz	r3, 8003c02 <_svfiprintf_r+0x36>
 8003be4:	2140      	movs	r1, #64	@ 0x40
 8003be6:	f7ff ff09 	bl	80039fc <_malloc_r>
 8003bea:	6028      	str	r0, [r5, #0]
 8003bec:	6128      	str	r0, [r5, #16]
 8003bee:	b930      	cbnz	r0, 8003bfe <_svfiprintf_r+0x32>
 8003bf0:	230c      	movs	r3, #12
 8003bf2:	603b      	str	r3, [r7, #0]
 8003bf4:	f04f 30ff 	mov.w	r0, #4294967295
 8003bf8:	b01d      	add	sp, #116	@ 0x74
 8003bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bfe:	2340      	movs	r3, #64	@ 0x40
 8003c00:	616b      	str	r3, [r5, #20]
 8003c02:	2300      	movs	r3, #0
 8003c04:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c06:	2320      	movs	r3, #32
 8003c08:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003c0c:	2330      	movs	r3, #48	@ 0x30
 8003c0e:	f04f 0901 	mov.w	r9, #1
 8003c12:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c16:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8003db0 <_svfiprintf_r+0x1e4>
 8003c1a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003c1e:	4623      	mov	r3, r4
 8003c20:	469a      	mov	sl, r3
 8003c22:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c26:	b10a      	cbz	r2, 8003c2c <_svfiprintf_r+0x60>
 8003c28:	2a25      	cmp	r2, #37	@ 0x25
 8003c2a:	d1f9      	bne.n	8003c20 <_svfiprintf_r+0x54>
 8003c2c:	ebba 0b04 	subs.w	fp, sl, r4
 8003c30:	d00b      	beq.n	8003c4a <_svfiprintf_r+0x7e>
 8003c32:	465b      	mov	r3, fp
 8003c34:	4622      	mov	r2, r4
 8003c36:	4629      	mov	r1, r5
 8003c38:	4638      	mov	r0, r7
 8003c3a:	f7ff ff6b 	bl	8003b14 <__ssputs_r>
 8003c3e:	3001      	adds	r0, #1
 8003c40:	f000 80a7 	beq.w	8003d92 <_svfiprintf_r+0x1c6>
 8003c44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003c46:	445a      	add	r2, fp
 8003c48:	9209      	str	r2, [sp, #36]	@ 0x24
 8003c4a:	f89a 3000 	ldrb.w	r3, [sl]
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	f000 809f 	beq.w	8003d92 <_svfiprintf_r+0x1c6>
 8003c54:	2300      	movs	r3, #0
 8003c56:	f04f 32ff 	mov.w	r2, #4294967295
 8003c5a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003c5e:	f10a 0a01 	add.w	sl, sl, #1
 8003c62:	9304      	str	r3, [sp, #16]
 8003c64:	9307      	str	r3, [sp, #28]
 8003c66:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003c6a:	931a      	str	r3, [sp, #104]	@ 0x68
 8003c6c:	4654      	mov	r4, sl
 8003c6e:	2205      	movs	r2, #5
 8003c70:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c74:	484e      	ldr	r0, [pc, #312]	@ (8003db0 <_svfiprintf_r+0x1e4>)
 8003c76:	f000 fccb 	bl	8004610 <memchr>
 8003c7a:	9a04      	ldr	r2, [sp, #16]
 8003c7c:	b9d8      	cbnz	r0, 8003cb6 <_svfiprintf_r+0xea>
 8003c7e:	06d0      	lsls	r0, r2, #27
 8003c80:	bf44      	itt	mi
 8003c82:	2320      	movmi	r3, #32
 8003c84:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c88:	0711      	lsls	r1, r2, #28
 8003c8a:	bf44      	itt	mi
 8003c8c:	232b      	movmi	r3, #43	@ 0x2b
 8003c8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c92:	f89a 3000 	ldrb.w	r3, [sl]
 8003c96:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c98:	d015      	beq.n	8003cc6 <_svfiprintf_r+0xfa>
 8003c9a:	4654      	mov	r4, sl
 8003c9c:	2000      	movs	r0, #0
 8003c9e:	f04f 0c0a 	mov.w	ip, #10
 8003ca2:	9a07      	ldr	r2, [sp, #28]
 8003ca4:	4621      	mov	r1, r4
 8003ca6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003caa:	3b30      	subs	r3, #48	@ 0x30
 8003cac:	2b09      	cmp	r3, #9
 8003cae:	d94b      	bls.n	8003d48 <_svfiprintf_r+0x17c>
 8003cb0:	b1b0      	cbz	r0, 8003ce0 <_svfiprintf_r+0x114>
 8003cb2:	9207      	str	r2, [sp, #28]
 8003cb4:	e014      	b.n	8003ce0 <_svfiprintf_r+0x114>
 8003cb6:	eba0 0308 	sub.w	r3, r0, r8
 8003cba:	fa09 f303 	lsl.w	r3, r9, r3
 8003cbe:	4313      	orrs	r3, r2
 8003cc0:	46a2      	mov	sl, r4
 8003cc2:	9304      	str	r3, [sp, #16]
 8003cc4:	e7d2      	b.n	8003c6c <_svfiprintf_r+0xa0>
 8003cc6:	9b03      	ldr	r3, [sp, #12]
 8003cc8:	1d19      	adds	r1, r3, #4
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	9103      	str	r1, [sp, #12]
 8003cce:	2b00      	cmp	r3, #0
 8003cd0:	bfbb      	ittet	lt
 8003cd2:	425b      	neglt	r3, r3
 8003cd4:	f042 0202 	orrlt.w	r2, r2, #2
 8003cd8:	9307      	strge	r3, [sp, #28]
 8003cda:	9307      	strlt	r3, [sp, #28]
 8003cdc:	bfb8      	it	lt
 8003cde:	9204      	strlt	r2, [sp, #16]
 8003ce0:	7823      	ldrb	r3, [r4, #0]
 8003ce2:	2b2e      	cmp	r3, #46	@ 0x2e
 8003ce4:	d10a      	bne.n	8003cfc <_svfiprintf_r+0x130>
 8003ce6:	7863      	ldrb	r3, [r4, #1]
 8003ce8:	2b2a      	cmp	r3, #42	@ 0x2a
 8003cea:	d132      	bne.n	8003d52 <_svfiprintf_r+0x186>
 8003cec:	9b03      	ldr	r3, [sp, #12]
 8003cee:	3402      	adds	r4, #2
 8003cf0:	1d1a      	adds	r2, r3, #4
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	9203      	str	r2, [sp, #12]
 8003cf6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003cfa:	9305      	str	r3, [sp, #20]
 8003cfc:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8003db4 <_svfiprintf_r+0x1e8>
 8003d00:	2203      	movs	r2, #3
 8003d02:	4650      	mov	r0, sl
 8003d04:	7821      	ldrb	r1, [r4, #0]
 8003d06:	f000 fc83 	bl	8004610 <memchr>
 8003d0a:	b138      	cbz	r0, 8003d1c <_svfiprintf_r+0x150>
 8003d0c:	2240      	movs	r2, #64	@ 0x40
 8003d0e:	9b04      	ldr	r3, [sp, #16]
 8003d10:	eba0 000a 	sub.w	r0, r0, sl
 8003d14:	4082      	lsls	r2, r0
 8003d16:	4313      	orrs	r3, r2
 8003d18:	3401      	adds	r4, #1
 8003d1a:	9304      	str	r3, [sp, #16]
 8003d1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d20:	2206      	movs	r2, #6
 8003d22:	4825      	ldr	r0, [pc, #148]	@ (8003db8 <_svfiprintf_r+0x1ec>)
 8003d24:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003d28:	f000 fc72 	bl	8004610 <memchr>
 8003d2c:	2800      	cmp	r0, #0
 8003d2e:	d036      	beq.n	8003d9e <_svfiprintf_r+0x1d2>
 8003d30:	4b22      	ldr	r3, [pc, #136]	@ (8003dbc <_svfiprintf_r+0x1f0>)
 8003d32:	bb1b      	cbnz	r3, 8003d7c <_svfiprintf_r+0x1b0>
 8003d34:	9b03      	ldr	r3, [sp, #12]
 8003d36:	3307      	adds	r3, #7
 8003d38:	f023 0307 	bic.w	r3, r3, #7
 8003d3c:	3308      	adds	r3, #8
 8003d3e:	9303      	str	r3, [sp, #12]
 8003d40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003d42:	4433      	add	r3, r6
 8003d44:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d46:	e76a      	b.n	8003c1e <_svfiprintf_r+0x52>
 8003d48:	460c      	mov	r4, r1
 8003d4a:	2001      	movs	r0, #1
 8003d4c:	fb0c 3202 	mla	r2, ip, r2, r3
 8003d50:	e7a8      	b.n	8003ca4 <_svfiprintf_r+0xd8>
 8003d52:	2300      	movs	r3, #0
 8003d54:	f04f 0c0a 	mov.w	ip, #10
 8003d58:	4619      	mov	r1, r3
 8003d5a:	3401      	adds	r4, #1
 8003d5c:	9305      	str	r3, [sp, #20]
 8003d5e:	4620      	mov	r0, r4
 8003d60:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003d64:	3a30      	subs	r2, #48	@ 0x30
 8003d66:	2a09      	cmp	r2, #9
 8003d68:	d903      	bls.n	8003d72 <_svfiprintf_r+0x1a6>
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d0c6      	beq.n	8003cfc <_svfiprintf_r+0x130>
 8003d6e:	9105      	str	r1, [sp, #20]
 8003d70:	e7c4      	b.n	8003cfc <_svfiprintf_r+0x130>
 8003d72:	4604      	mov	r4, r0
 8003d74:	2301      	movs	r3, #1
 8003d76:	fb0c 2101 	mla	r1, ip, r1, r2
 8003d7a:	e7f0      	b.n	8003d5e <_svfiprintf_r+0x192>
 8003d7c:	ab03      	add	r3, sp, #12
 8003d7e:	9300      	str	r3, [sp, #0]
 8003d80:	462a      	mov	r2, r5
 8003d82:	4638      	mov	r0, r7
 8003d84:	4b0e      	ldr	r3, [pc, #56]	@ (8003dc0 <_svfiprintf_r+0x1f4>)
 8003d86:	a904      	add	r1, sp, #16
 8003d88:	f3af 8000 	nop.w
 8003d8c:	1c42      	adds	r2, r0, #1
 8003d8e:	4606      	mov	r6, r0
 8003d90:	d1d6      	bne.n	8003d40 <_svfiprintf_r+0x174>
 8003d92:	89ab      	ldrh	r3, [r5, #12]
 8003d94:	065b      	lsls	r3, r3, #25
 8003d96:	f53f af2d 	bmi.w	8003bf4 <_svfiprintf_r+0x28>
 8003d9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003d9c:	e72c      	b.n	8003bf8 <_svfiprintf_r+0x2c>
 8003d9e:	ab03      	add	r3, sp, #12
 8003da0:	9300      	str	r3, [sp, #0]
 8003da2:	462a      	mov	r2, r5
 8003da4:	4638      	mov	r0, r7
 8003da6:	4b06      	ldr	r3, [pc, #24]	@ (8003dc0 <_svfiprintf_r+0x1f4>)
 8003da8:	a904      	add	r1, sp, #16
 8003daa:	f000 f9bd 	bl	8004128 <_printf_i>
 8003dae:	e7ed      	b.n	8003d8c <_svfiprintf_r+0x1c0>
 8003db0:	080047ae 	.word	0x080047ae
 8003db4:	080047b4 	.word	0x080047b4
 8003db8:	080047b8 	.word	0x080047b8
 8003dbc:	00000000 	.word	0x00000000
 8003dc0:	08003b15 	.word	0x08003b15

08003dc4 <__sfputc_r>:
 8003dc4:	6893      	ldr	r3, [r2, #8]
 8003dc6:	b410      	push	{r4}
 8003dc8:	3b01      	subs	r3, #1
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	6093      	str	r3, [r2, #8]
 8003dce:	da07      	bge.n	8003de0 <__sfputc_r+0x1c>
 8003dd0:	6994      	ldr	r4, [r2, #24]
 8003dd2:	42a3      	cmp	r3, r4
 8003dd4:	db01      	blt.n	8003dda <__sfputc_r+0x16>
 8003dd6:	290a      	cmp	r1, #10
 8003dd8:	d102      	bne.n	8003de0 <__sfputc_r+0x1c>
 8003dda:	bc10      	pop	{r4}
 8003ddc:	f7ff bc93 	b.w	8003706 <__swbuf_r>
 8003de0:	6813      	ldr	r3, [r2, #0]
 8003de2:	1c58      	adds	r0, r3, #1
 8003de4:	6010      	str	r0, [r2, #0]
 8003de6:	7019      	strb	r1, [r3, #0]
 8003de8:	4608      	mov	r0, r1
 8003dea:	bc10      	pop	{r4}
 8003dec:	4770      	bx	lr

08003dee <__sfputs_r>:
 8003dee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003df0:	4606      	mov	r6, r0
 8003df2:	460f      	mov	r7, r1
 8003df4:	4614      	mov	r4, r2
 8003df6:	18d5      	adds	r5, r2, r3
 8003df8:	42ac      	cmp	r4, r5
 8003dfa:	d101      	bne.n	8003e00 <__sfputs_r+0x12>
 8003dfc:	2000      	movs	r0, #0
 8003dfe:	e007      	b.n	8003e10 <__sfputs_r+0x22>
 8003e00:	463a      	mov	r2, r7
 8003e02:	4630      	mov	r0, r6
 8003e04:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e08:	f7ff ffdc 	bl	8003dc4 <__sfputc_r>
 8003e0c:	1c43      	adds	r3, r0, #1
 8003e0e:	d1f3      	bne.n	8003df8 <__sfputs_r+0xa>
 8003e10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003e14 <_vfiprintf_r>:
 8003e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e18:	460d      	mov	r5, r1
 8003e1a:	4614      	mov	r4, r2
 8003e1c:	4698      	mov	r8, r3
 8003e1e:	4606      	mov	r6, r0
 8003e20:	b09d      	sub	sp, #116	@ 0x74
 8003e22:	b118      	cbz	r0, 8003e2c <_vfiprintf_r+0x18>
 8003e24:	6a03      	ldr	r3, [r0, #32]
 8003e26:	b90b      	cbnz	r3, 8003e2c <_vfiprintf_r+0x18>
 8003e28:	f7ff fb62 	bl	80034f0 <__sinit>
 8003e2c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003e2e:	07d9      	lsls	r1, r3, #31
 8003e30:	d405      	bmi.n	8003e3e <_vfiprintf_r+0x2a>
 8003e32:	89ab      	ldrh	r3, [r5, #12]
 8003e34:	059a      	lsls	r2, r3, #22
 8003e36:	d402      	bmi.n	8003e3e <_vfiprintf_r+0x2a>
 8003e38:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003e3a:	f7ff fd72 	bl	8003922 <__retarget_lock_acquire_recursive>
 8003e3e:	89ab      	ldrh	r3, [r5, #12]
 8003e40:	071b      	lsls	r3, r3, #28
 8003e42:	d501      	bpl.n	8003e48 <_vfiprintf_r+0x34>
 8003e44:	692b      	ldr	r3, [r5, #16]
 8003e46:	b99b      	cbnz	r3, 8003e70 <_vfiprintf_r+0x5c>
 8003e48:	4629      	mov	r1, r5
 8003e4a:	4630      	mov	r0, r6
 8003e4c:	f7ff fc9a 	bl	8003784 <__swsetup_r>
 8003e50:	b170      	cbz	r0, 8003e70 <_vfiprintf_r+0x5c>
 8003e52:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003e54:	07dc      	lsls	r4, r3, #31
 8003e56:	d504      	bpl.n	8003e62 <_vfiprintf_r+0x4e>
 8003e58:	f04f 30ff 	mov.w	r0, #4294967295
 8003e5c:	b01d      	add	sp, #116	@ 0x74
 8003e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e62:	89ab      	ldrh	r3, [r5, #12]
 8003e64:	0598      	lsls	r0, r3, #22
 8003e66:	d4f7      	bmi.n	8003e58 <_vfiprintf_r+0x44>
 8003e68:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003e6a:	f7ff fd5b 	bl	8003924 <__retarget_lock_release_recursive>
 8003e6e:	e7f3      	b.n	8003e58 <_vfiprintf_r+0x44>
 8003e70:	2300      	movs	r3, #0
 8003e72:	9309      	str	r3, [sp, #36]	@ 0x24
 8003e74:	2320      	movs	r3, #32
 8003e76:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003e7a:	2330      	movs	r3, #48	@ 0x30
 8003e7c:	f04f 0901 	mov.w	r9, #1
 8003e80:	f8cd 800c 	str.w	r8, [sp, #12]
 8003e84:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8004030 <_vfiprintf_r+0x21c>
 8003e88:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003e8c:	4623      	mov	r3, r4
 8003e8e:	469a      	mov	sl, r3
 8003e90:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003e94:	b10a      	cbz	r2, 8003e9a <_vfiprintf_r+0x86>
 8003e96:	2a25      	cmp	r2, #37	@ 0x25
 8003e98:	d1f9      	bne.n	8003e8e <_vfiprintf_r+0x7a>
 8003e9a:	ebba 0b04 	subs.w	fp, sl, r4
 8003e9e:	d00b      	beq.n	8003eb8 <_vfiprintf_r+0xa4>
 8003ea0:	465b      	mov	r3, fp
 8003ea2:	4622      	mov	r2, r4
 8003ea4:	4629      	mov	r1, r5
 8003ea6:	4630      	mov	r0, r6
 8003ea8:	f7ff ffa1 	bl	8003dee <__sfputs_r>
 8003eac:	3001      	adds	r0, #1
 8003eae:	f000 80a7 	beq.w	8004000 <_vfiprintf_r+0x1ec>
 8003eb2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003eb4:	445a      	add	r2, fp
 8003eb6:	9209      	str	r2, [sp, #36]	@ 0x24
 8003eb8:	f89a 3000 	ldrb.w	r3, [sl]
 8003ebc:	2b00      	cmp	r3, #0
 8003ebe:	f000 809f 	beq.w	8004000 <_vfiprintf_r+0x1ec>
 8003ec2:	2300      	movs	r3, #0
 8003ec4:	f04f 32ff 	mov.w	r2, #4294967295
 8003ec8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003ecc:	f10a 0a01 	add.w	sl, sl, #1
 8003ed0:	9304      	str	r3, [sp, #16]
 8003ed2:	9307      	str	r3, [sp, #28]
 8003ed4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003ed8:	931a      	str	r3, [sp, #104]	@ 0x68
 8003eda:	4654      	mov	r4, sl
 8003edc:	2205      	movs	r2, #5
 8003ede:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ee2:	4853      	ldr	r0, [pc, #332]	@ (8004030 <_vfiprintf_r+0x21c>)
 8003ee4:	f000 fb94 	bl	8004610 <memchr>
 8003ee8:	9a04      	ldr	r2, [sp, #16]
 8003eea:	b9d8      	cbnz	r0, 8003f24 <_vfiprintf_r+0x110>
 8003eec:	06d1      	lsls	r1, r2, #27
 8003eee:	bf44      	itt	mi
 8003ef0:	2320      	movmi	r3, #32
 8003ef2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003ef6:	0713      	lsls	r3, r2, #28
 8003ef8:	bf44      	itt	mi
 8003efa:	232b      	movmi	r3, #43	@ 0x2b
 8003efc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f00:	f89a 3000 	ldrb.w	r3, [sl]
 8003f04:	2b2a      	cmp	r3, #42	@ 0x2a
 8003f06:	d015      	beq.n	8003f34 <_vfiprintf_r+0x120>
 8003f08:	4654      	mov	r4, sl
 8003f0a:	2000      	movs	r0, #0
 8003f0c:	f04f 0c0a 	mov.w	ip, #10
 8003f10:	9a07      	ldr	r2, [sp, #28]
 8003f12:	4621      	mov	r1, r4
 8003f14:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f18:	3b30      	subs	r3, #48	@ 0x30
 8003f1a:	2b09      	cmp	r3, #9
 8003f1c:	d94b      	bls.n	8003fb6 <_vfiprintf_r+0x1a2>
 8003f1e:	b1b0      	cbz	r0, 8003f4e <_vfiprintf_r+0x13a>
 8003f20:	9207      	str	r2, [sp, #28]
 8003f22:	e014      	b.n	8003f4e <_vfiprintf_r+0x13a>
 8003f24:	eba0 0308 	sub.w	r3, r0, r8
 8003f28:	fa09 f303 	lsl.w	r3, r9, r3
 8003f2c:	4313      	orrs	r3, r2
 8003f2e:	46a2      	mov	sl, r4
 8003f30:	9304      	str	r3, [sp, #16]
 8003f32:	e7d2      	b.n	8003eda <_vfiprintf_r+0xc6>
 8003f34:	9b03      	ldr	r3, [sp, #12]
 8003f36:	1d19      	adds	r1, r3, #4
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	9103      	str	r1, [sp, #12]
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	bfbb      	ittet	lt
 8003f40:	425b      	neglt	r3, r3
 8003f42:	f042 0202 	orrlt.w	r2, r2, #2
 8003f46:	9307      	strge	r3, [sp, #28]
 8003f48:	9307      	strlt	r3, [sp, #28]
 8003f4a:	bfb8      	it	lt
 8003f4c:	9204      	strlt	r2, [sp, #16]
 8003f4e:	7823      	ldrb	r3, [r4, #0]
 8003f50:	2b2e      	cmp	r3, #46	@ 0x2e
 8003f52:	d10a      	bne.n	8003f6a <_vfiprintf_r+0x156>
 8003f54:	7863      	ldrb	r3, [r4, #1]
 8003f56:	2b2a      	cmp	r3, #42	@ 0x2a
 8003f58:	d132      	bne.n	8003fc0 <_vfiprintf_r+0x1ac>
 8003f5a:	9b03      	ldr	r3, [sp, #12]
 8003f5c:	3402      	adds	r4, #2
 8003f5e:	1d1a      	adds	r2, r3, #4
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	9203      	str	r2, [sp, #12]
 8003f64:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003f68:	9305      	str	r3, [sp, #20]
 8003f6a:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8004034 <_vfiprintf_r+0x220>
 8003f6e:	2203      	movs	r2, #3
 8003f70:	4650      	mov	r0, sl
 8003f72:	7821      	ldrb	r1, [r4, #0]
 8003f74:	f000 fb4c 	bl	8004610 <memchr>
 8003f78:	b138      	cbz	r0, 8003f8a <_vfiprintf_r+0x176>
 8003f7a:	2240      	movs	r2, #64	@ 0x40
 8003f7c:	9b04      	ldr	r3, [sp, #16]
 8003f7e:	eba0 000a 	sub.w	r0, r0, sl
 8003f82:	4082      	lsls	r2, r0
 8003f84:	4313      	orrs	r3, r2
 8003f86:	3401      	adds	r4, #1
 8003f88:	9304      	str	r3, [sp, #16]
 8003f8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f8e:	2206      	movs	r2, #6
 8003f90:	4829      	ldr	r0, [pc, #164]	@ (8004038 <_vfiprintf_r+0x224>)
 8003f92:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003f96:	f000 fb3b 	bl	8004610 <memchr>
 8003f9a:	2800      	cmp	r0, #0
 8003f9c:	d03f      	beq.n	800401e <_vfiprintf_r+0x20a>
 8003f9e:	4b27      	ldr	r3, [pc, #156]	@ (800403c <_vfiprintf_r+0x228>)
 8003fa0:	bb1b      	cbnz	r3, 8003fea <_vfiprintf_r+0x1d6>
 8003fa2:	9b03      	ldr	r3, [sp, #12]
 8003fa4:	3307      	adds	r3, #7
 8003fa6:	f023 0307 	bic.w	r3, r3, #7
 8003faa:	3308      	adds	r3, #8
 8003fac:	9303      	str	r3, [sp, #12]
 8003fae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003fb0:	443b      	add	r3, r7
 8003fb2:	9309      	str	r3, [sp, #36]	@ 0x24
 8003fb4:	e76a      	b.n	8003e8c <_vfiprintf_r+0x78>
 8003fb6:	460c      	mov	r4, r1
 8003fb8:	2001      	movs	r0, #1
 8003fba:	fb0c 3202 	mla	r2, ip, r2, r3
 8003fbe:	e7a8      	b.n	8003f12 <_vfiprintf_r+0xfe>
 8003fc0:	2300      	movs	r3, #0
 8003fc2:	f04f 0c0a 	mov.w	ip, #10
 8003fc6:	4619      	mov	r1, r3
 8003fc8:	3401      	adds	r4, #1
 8003fca:	9305      	str	r3, [sp, #20]
 8003fcc:	4620      	mov	r0, r4
 8003fce:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003fd2:	3a30      	subs	r2, #48	@ 0x30
 8003fd4:	2a09      	cmp	r2, #9
 8003fd6:	d903      	bls.n	8003fe0 <_vfiprintf_r+0x1cc>
 8003fd8:	2b00      	cmp	r3, #0
 8003fda:	d0c6      	beq.n	8003f6a <_vfiprintf_r+0x156>
 8003fdc:	9105      	str	r1, [sp, #20]
 8003fde:	e7c4      	b.n	8003f6a <_vfiprintf_r+0x156>
 8003fe0:	4604      	mov	r4, r0
 8003fe2:	2301      	movs	r3, #1
 8003fe4:	fb0c 2101 	mla	r1, ip, r1, r2
 8003fe8:	e7f0      	b.n	8003fcc <_vfiprintf_r+0x1b8>
 8003fea:	ab03      	add	r3, sp, #12
 8003fec:	9300      	str	r3, [sp, #0]
 8003fee:	462a      	mov	r2, r5
 8003ff0:	4630      	mov	r0, r6
 8003ff2:	4b13      	ldr	r3, [pc, #76]	@ (8004040 <_vfiprintf_r+0x22c>)
 8003ff4:	a904      	add	r1, sp, #16
 8003ff6:	f3af 8000 	nop.w
 8003ffa:	4607      	mov	r7, r0
 8003ffc:	1c78      	adds	r0, r7, #1
 8003ffe:	d1d6      	bne.n	8003fae <_vfiprintf_r+0x19a>
 8004000:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004002:	07d9      	lsls	r1, r3, #31
 8004004:	d405      	bmi.n	8004012 <_vfiprintf_r+0x1fe>
 8004006:	89ab      	ldrh	r3, [r5, #12]
 8004008:	059a      	lsls	r2, r3, #22
 800400a:	d402      	bmi.n	8004012 <_vfiprintf_r+0x1fe>
 800400c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800400e:	f7ff fc89 	bl	8003924 <__retarget_lock_release_recursive>
 8004012:	89ab      	ldrh	r3, [r5, #12]
 8004014:	065b      	lsls	r3, r3, #25
 8004016:	f53f af1f 	bmi.w	8003e58 <_vfiprintf_r+0x44>
 800401a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800401c:	e71e      	b.n	8003e5c <_vfiprintf_r+0x48>
 800401e:	ab03      	add	r3, sp, #12
 8004020:	9300      	str	r3, [sp, #0]
 8004022:	462a      	mov	r2, r5
 8004024:	4630      	mov	r0, r6
 8004026:	4b06      	ldr	r3, [pc, #24]	@ (8004040 <_vfiprintf_r+0x22c>)
 8004028:	a904      	add	r1, sp, #16
 800402a:	f000 f87d 	bl	8004128 <_printf_i>
 800402e:	e7e4      	b.n	8003ffa <_vfiprintf_r+0x1e6>
 8004030:	080047ae 	.word	0x080047ae
 8004034:	080047b4 	.word	0x080047b4
 8004038:	080047b8 	.word	0x080047b8
 800403c:	00000000 	.word	0x00000000
 8004040:	08003def 	.word	0x08003def

08004044 <_printf_common>:
 8004044:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004048:	4616      	mov	r6, r2
 800404a:	4698      	mov	r8, r3
 800404c:	688a      	ldr	r2, [r1, #8]
 800404e:	690b      	ldr	r3, [r1, #16]
 8004050:	4607      	mov	r7, r0
 8004052:	4293      	cmp	r3, r2
 8004054:	bfb8      	it	lt
 8004056:	4613      	movlt	r3, r2
 8004058:	6033      	str	r3, [r6, #0]
 800405a:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800405e:	460c      	mov	r4, r1
 8004060:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004064:	b10a      	cbz	r2, 800406a <_printf_common+0x26>
 8004066:	3301      	adds	r3, #1
 8004068:	6033      	str	r3, [r6, #0]
 800406a:	6823      	ldr	r3, [r4, #0]
 800406c:	0699      	lsls	r1, r3, #26
 800406e:	bf42      	ittt	mi
 8004070:	6833      	ldrmi	r3, [r6, #0]
 8004072:	3302      	addmi	r3, #2
 8004074:	6033      	strmi	r3, [r6, #0]
 8004076:	6825      	ldr	r5, [r4, #0]
 8004078:	f015 0506 	ands.w	r5, r5, #6
 800407c:	d106      	bne.n	800408c <_printf_common+0x48>
 800407e:	f104 0a19 	add.w	sl, r4, #25
 8004082:	68e3      	ldr	r3, [r4, #12]
 8004084:	6832      	ldr	r2, [r6, #0]
 8004086:	1a9b      	subs	r3, r3, r2
 8004088:	42ab      	cmp	r3, r5
 800408a:	dc2b      	bgt.n	80040e4 <_printf_common+0xa0>
 800408c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004090:	6822      	ldr	r2, [r4, #0]
 8004092:	3b00      	subs	r3, #0
 8004094:	bf18      	it	ne
 8004096:	2301      	movne	r3, #1
 8004098:	0692      	lsls	r2, r2, #26
 800409a:	d430      	bmi.n	80040fe <_printf_common+0xba>
 800409c:	4641      	mov	r1, r8
 800409e:	4638      	mov	r0, r7
 80040a0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80040a4:	47c8      	blx	r9
 80040a6:	3001      	adds	r0, #1
 80040a8:	d023      	beq.n	80040f2 <_printf_common+0xae>
 80040aa:	6823      	ldr	r3, [r4, #0]
 80040ac:	6922      	ldr	r2, [r4, #16]
 80040ae:	f003 0306 	and.w	r3, r3, #6
 80040b2:	2b04      	cmp	r3, #4
 80040b4:	bf14      	ite	ne
 80040b6:	2500      	movne	r5, #0
 80040b8:	6833      	ldreq	r3, [r6, #0]
 80040ba:	f04f 0600 	mov.w	r6, #0
 80040be:	bf08      	it	eq
 80040c0:	68e5      	ldreq	r5, [r4, #12]
 80040c2:	f104 041a 	add.w	r4, r4, #26
 80040c6:	bf08      	it	eq
 80040c8:	1aed      	subeq	r5, r5, r3
 80040ca:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80040ce:	bf08      	it	eq
 80040d0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80040d4:	4293      	cmp	r3, r2
 80040d6:	bfc4      	itt	gt
 80040d8:	1a9b      	subgt	r3, r3, r2
 80040da:	18ed      	addgt	r5, r5, r3
 80040dc:	42b5      	cmp	r5, r6
 80040de:	d11a      	bne.n	8004116 <_printf_common+0xd2>
 80040e0:	2000      	movs	r0, #0
 80040e2:	e008      	b.n	80040f6 <_printf_common+0xb2>
 80040e4:	2301      	movs	r3, #1
 80040e6:	4652      	mov	r2, sl
 80040e8:	4641      	mov	r1, r8
 80040ea:	4638      	mov	r0, r7
 80040ec:	47c8      	blx	r9
 80040ee:	3001      	adds	r0, #1
 80040f0:	d103      	bne.n	80040fa <_printf_common+0xb6>
 80040f2:	f04f 30ff 	mov.w	r0, #4294967295
 80040f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80040fa:	3501      	adds	r5, #1
 80040fc:	e7c1      	b.n	8004082 <_printf_common+0x3e>
 80040fe:	2030      	movs	r0, #48	@ 0x30
 8004100:	18e1      	adds	r1, r4, r3
 8004102:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004106:	1c5a      	adds	r2, r3, #1
 8004108:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800410c:	4422      	add	r2, r4
 800410e:	3302      	adds	r3, #2
 8004110:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004114:	e7c2      	b.n	800409c <_printf_common+0x58>
 8004116:	2301      	movs	r3, #1
 8004118:	4622      	mov	r2, r4
 800411a:	4641      	mov	r1, r8
 800411c:	4638      	mov	r0, r7
 800411e:	47c8      	blx	r9
 8004120:	3001      	adds	r0, #1
 8004122:	d0e6      	beq.n	80040f2 <_printf_common+0xae>
 8004124:	3601      	adds	r6, #1
 8004126:	e7d9      	b.n	80040dc <_printf_common+0x98>

08004128 <_printf_i>:
 8004128:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800412c:	7e0f      	ldrb	r7, [r1, #24]
 800412e:	4691      	mov	r9, r2
 8004130:	2f78      	cmp	r7, #120	@ 0x78
 8004132:	4680      	mov	r8, r0
 8004134:	460c      	mov	r4, r1
 8004136:	469a      	mov	sl, r3
 8004138:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800413a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800413e:	d807      	bhi.n	8004150 <_printf_i+0x28>
 8004140:	2f62      	cmp	r7, #98	@ 0x62
 8004142:	d80a      	bhi.n	800415a <_printf_i+0x32>
 8004144:	2f00      	cmp	r7, #0
 8004146:	f000 80d1 	beq.w	80042ec <_printf_i+0x1c4>
 800414a:	2f58      	cmp	r7, #88	@ 0x58
 800414c:	f000 80b8 	beq.w	80042c0 <_printf_i+0x198>
 8004150:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004154:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004158:	e03a      	b.n	80041d0 <_printf_i+0xa8>
 800415a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800415e:	2b15      	cmp	r3, #21
 8004160:	d8f6      	bhi.n	8004150 <_printf_i+0x28>
 8004162:	a101      	add	r1, pc, #4	@ (adr r1, 8004168 <_printf_i+0x40>)
 8004164:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004168:	080041c1 	.word	0x080041c1
 800416c:	080041d5 	.word	0x080041d5
 8004170:	08004151 	.word	0x08004151
 8004174:	08004151 	.word	0x08004151
 8004178:	08004151 	.word	0x08004151
 800417c:	08004151 	.word	0x08004151
 8004180:	080041d5 	.word	0x080041d5
 8004184:	08004151 	.word	0x08004151
 8004188:	08004151 	.word	0x08004151
 800418c:	08004151 	.word	0x08004151
 8004190:	08004151 	.word	0x08004151
 8004194:	080042d3 	.word	0x080042d3
 8004198:	080041ff 	.word	0x080041ff
 800419c:	0800428d 	.word	0x0800428d
 80041a0:	08004151 	.word	0x08004151
 80041a4:	08004151 	.word	0x08004151
 80041a8:	080042f5 	.word	0x080042f5
 80041ac:	08004151 	.word	0x08004151
 80041b0:	080041ff 	.word	0x080041ff
 80041b4:	08004151 	.word	0x08004151
 80041b8:	08004151 	.word	0x08004151
 80041bc:	08004295 	.word	0x08004295
 80041c0:	6833      	ldr	r3, [r6, #0]
 80041c2:	1d1a      	adds	r2, r3, #4
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	6032      	str	r2, [r6, #0]
 80041c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80041cc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80041d0:	2301      	movs	r3, #1
 80041d2:	e09c      	b.n	800430e <_printf_i+0x1e6>
 80041d4:	6833      	ldr	r3, [r6, #0]
 80041d6:	6820      	ldr	r0, [r4, #0]
 80041d8:	1d19      	adds	r1, r3, #4
 80041da:	6031      	str	r1, [r6, #0]
 80041dc:	0606      	lsls	r6, r0, #24
 80041de:	d501      	bpl.n	80041e4 <_printf_i+0xbc>
 80041e0:	681d      	ldr	r5, [r3, #0]
 80041e2:	e003      	b.n	80041ec <_printf_i+0xc4>
 80041e4:	0645      	lsls	r5, r0, #25
 80041e6:	d5fb      	bpl.n	80041e0 <_printf_i+0xb8>
 80041e8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80041ec:	2d00      	cmp	r5, #0
 80041ee:	da03      	bge.n	80041f8 <_printf_i+0xd0>
 80041f0:	232d      	movs	r3, #45	@ 0x2d
 80041f2:	426d      	negs	r5, r5
 80041f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80041f8:	230a      	movs	r3, #10
 80041fa:	4858      	ldr	r0, [pc, #352]	@ (800435c <_printf_i+0x234>)
 80041fc:	e011      	b.n	8004222 <_printf_i+0xfa>
 80041fe:	6821      	ldr	r1, [r4, #0]
 8004200:	6833      	ldr	r3, [r6, #0]
 8004202:	0608      	lsls	r0, r1, #24
 8004204:	f853 5b04 	ldr.w	r5, [r3], #4
 8004208:	d402      	bmi.n	8004210 <_printf_i+0xe8>
 800420a:	0649      	lsls	r1, r1, #25
 800420c:	bf48      	it	mi
 800420e:	b2ad      	uxthmi	r5, r5
 8004210:	2f6f      	cmp	r7, #111	@ 0x6f
 8004212:	6033      	str	r3, [r6, #0]
 8004214:	bf14      	ite	ne
 8004216:	230a      	movne	r3, #10
 8004218:	2308      	moveq	r3, #8
 800421a:	4850      	ldr	r0, [pc, #320]	@ (800435c <_printf_i+0x234>)
 800421c:	2100      	movs	r1, #0
 800421e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8004222:	6866      	ldr	r6, [r4, #4]
 8004224:	2e00      	cmp	r6, #0
 8004226:	60a6      	str	r6, [r4, #8]
 8004228:	db05      	blt.n	8004236 <_printf_i+0x10e>
 800422a:	6821      	ldr	r1, [r4, #0]
 800422c:	432e      	orrs	r6, r5
 800422e:	f021 0104 	bic.w	r1, r1, #4
 8004232:	6021      	str	r1, [r4, #0]
 8004234:	d04b      	beq.n	80042ce <_printf_i+0x1a6>
 8004236:	4616      	mov	r6, r2
 8004238:	fbb5 f1f3 	udiv	r1, r5, r3
 800423c:	fb03 5711 	mls	r7, r3, r1, r5
 8004240:	5dc7      	ldrb	r7, [r0, r7]
 8004242:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004246:	462f      	mov	r7, r5
 8004248:	42bb      	cmp	r3, r7
 800424a:	460d      	mov	r5, r1
 800424c:	d9f4      	bls.n	8004238 <_printf_i+0x110>
 800424e:	2b08      	cmp	r3, #8
 8004250:	d10b      	bne.n	800426a <_printf_i+0x142>
 8004252:	6823      	ldr	r3, [r4, #0]
 8004254:	07df      	lsls	r7, r3, #31
 8004256:	d508      	bpl.n	800426a <_printf_i+0x142>
 8004258:	6923      	ldr	r3, [r4, #16]
 800425a:	6861      	ldr	r1, [r4, #4]
 800425c:	4299      	cmp	r1, r3
 800425e:	bfde      	ittt	le
 8004260:	2330      	movle	r3, #48	@ 0x30
 8004262:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004266:	f106 36ff 	addle.w	r6, r6, #4294967295
 800426a:	1b92      	subs	r2, r2, r6
 800426c:	6122      	str	r2, [r4, #16]
 800426e:	464b      	mov	r3, r9
 8004270:	4621      	mov	r1, r4
 8004272:	4640      	mov	r0, r8
 8004274:	f8cd a000 	str.w	sl, [sp]
 8004278:	aa03      	add	r2, sp, #12
 800427a:	f7ff fee3 	bl	8004044 <_printf_common>
 800427e:	3001      	adds	r0, #1
 8004280:	d14a      	bne.n	8004318 <_printf_i+0x1f0>
 8004282:	f04f 30ff 	mov.w	r0, #4294967295
 8004286:	b004      	add	sp, #16
 8004288:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800428c:	6823      	ldr	r3, [r4, #0]
 800428e:	f043 0320 	orr.w	r3, r3, #32
 8004292:	6023      	str	r3, [r4, #0]
 8004294:	2778      	movs	r7, #120	@ 0x78
 8004296:	4832      	ldr	r0, [pc, #200]	@ (8004360 <_printf_i+0x238>)
 8004298:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800429c:	6823      	ldr	r3, [r4, #0]
 800429e:	6831      	ldr	r1, [r6, #0]
 80042a0:	061f      	lsls	r7, r3, #24
 80042a2:	f851 5b04 	ldr.w	r5, [r1], #4
 80042a6:	d402      	bmi.n	80042ae <_printf_i+0x186>
 80042a8:	065f      	lsls	r7, r3, #25
 80042aa:	bf48      	it	mi
 80042ac:	b2ad      	uxthmi	r5, r5
 80042ae:	6031      	str	r1, [r6, #0]
 80042b0:	07d9      	lsls	r1, r3, #31
 80042b2:	bf44      	itt	mi
 80042b4:	f043 0320 	orrmi.w	r3, r3, #32
 80042b8:	6023      	strmi	r3, [r4, #0]
 80042ba:	b11d      	cbz	r5, 80042c4 <_printf_i+0x19c>
 80042bc:	2310      	movs	r3, #16
 80042be:	e7ad      	b.n	800421c <_printf_i+0xf4>
 80042c0:	4826      	ldr	r0, [pc, #152]	@ (800435c <_printf_i+0x234>)
 80042c2:	e7e9      	b.n	8004298 <_printf_i+0x170>
 80042c4:	6823      	ldr	r3, [r4, #0]
 80042c6:	f023 0320 	bic.w	r3, r3, #32
 80042ca:	6023      	str	r3, [r4, #0]
 80042cc:	e7f6      	b.n	80042bc <_printf_i+0x194>
 80042ce:	4616      	mov	r6, r2
 80042d0:	e7bd      	b.n	800424e <_printf_i+0x126>
 80042d2:	6833      	ldr	r3, [r6, #0]
 80042d4:	6825      	ldr	r5, [r4, #0]
 80042d6:	1d18      	adds	r0, r3, #4
 80042d8:	6961      	ldr	r1, [r4, #20]
 80042da:	6030      	str	r0, [r6, #0]
 80042dc:	062e      	lsls	r6, r5, #24
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	d501      	bpl.n	80042e6 <_printf_i+0x1be>
 80042e2:	6019      	str	r1, [r3, #0]
 80042e4:	e002      	b.n	80042ec <_printf_i+0x1c4>
 80042e6:	0668      	lsls	r0, r5, #25
 80042e8:	d5fb      	bpl.n	80042e2 <_printf_i+0x1ba>
 80042ea:	8019      	strh	r1, [r3, #0]
 80042ec:	2300      	movs	r3, #0
 80042ee:	4616      	mov	r6, r2
 80042f0:	6123      	str	r3, [r4, #16]
 80042f2:	e7bc      	b.n	800426e <_printf_i+0x146>
 80042f4:	6833      	ldr	r3, [r6, #0]
 80042f6:	2100      	movs	r1, #0
 80042f8:	1d1a      	adds	r2, r3, #4
 80042fa:	6032      	str	r2, [r6, #0]
 80042fc:	681e      	ldr	r6, [r3, #0]
 80042fe:	6862      	ldr	r2, [r4, #4]
 8004300:	4630      	mov	r0, r6
 8004302:	f000 f985 	bl	8004610 <memchr>
 8004306:	b108      	cbz	r0, 800430c <_printf_i+0x1e4>
 8004308:	1b80      	subs	r0, r0, r6
 800430a:	6060      	str	r0, [r4, #4]
 800430c:	6863      	ldr	r3, [r4, #4]
 800430e:	6123      	str	r3, [r4, #16]
 8004310:	2300      	movs	r3, #0
 8004312:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004316:	e7aa      	b.n	800426e <_printf_i+0x146>
 8004318:	4632      	mov	r2, r6
 800431a:	4649      	mov	r1, r9
 800431c:	4640      	mov	r0, r8
 800431e:	6923      	ldr	r3, [r4, #16]
 8004320:	47d0      	blx	sl
 8004322:	3001      	adds	r0, #1
 8004324:	d0ad      	beq.n	8004282 <_printf_i+0x15a>
 8004326:	6823      	ldr	r3, [r4, #0]
 8004328:	079b      	lsls	r3, r3, #30
 800432a:	d413      	bmi.n	8004354 <_printf_i+0x22c>
 800432c:	68e0      	ldr	r0, [r4, #12]
 800432e:	9b03      	ldr	r3, [sp, #12]
 8004330:	4298      	cmp	r0, r3
 8004332:	bfb8      	it	lt
 8004334:	4618      	movlt	r0, r3
 8004336:	e7a6      	b.n	8004286 <_printf_i+0x15e>
 8004338:	2301      	movs	r3, #1
 800433a:	4632      	mov	r2, r6
 800433c:	4649      	mov	r1, r9
 800433e:	4640      	mov	r0, r8
 8004340:	47d0      	blx	sl
 8004342:	3001      	adds	r0, #1
 8004344:	d09d      	beq.n	8004282 <_printf_i+0x15a>
 8004346:	3501      	adds	r5, #1
 8004348:	68e3      	ldr	r3, [r4, #12]
 800434a:	9903      	ldr	r1, [sp, #12]
 800434c:	1a5b      	subs	r3, r3, r1
 800434e:	42ab      	cmp	r3, r5
 8004350:	dcf2      	bgt.n	8004338 <_printf_i+0x210>
 8004352:	e7eb      	b.n	800432c <_printf_i+0x204>
 8004354:	2500      	movs	r5, #0
 8004356:	f104 0619 	add.w	r6, r4, #25
 800435a:	e7f5      	b.n	8004348 <_printf_i+0x220>
 800435c:	080047bf 	.word	0x080047bf
 8004360:	080047d0 	.word	0x080047d0

08004364 <__sflush_r>:
 8004364:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800436a:	0716      	lsls	r6, r2, #28
 800436c:	4605      	mov	r5, r0
 800436e:	460c      	mov	r4, r1
 8004370:	d454      	bmi.n	800441c <__sflush_r+0xb8>
 8004372:	684b      	ldr	r3, [r1, #4]
 8004374:	2b00      	cmp	r3, #0
 8004376:	dc02      	bgt.n	800437e <__sflush_r+0x1a>
 8004378:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800437a:	2b00      	cmp	r3, #0
 800437c:	dd48      	ble.n	8004410 <__sflush_r+0xac>
 800437e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004380:	2e00      	cmp	r6, #0
 8004382:	d045      	beq.n	8004410 <__sflush_r+0xac>
 8004384:	2300      	movs	r3, #0
 8004386:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800438a:	682f      	ldr	r7, [r5, #0]
 800438c:	6a21      	ldr	r1, [r4, #32]
 800438e:	602b      	str	r3, [r5, #0]
 8004390:	d030      	beq.n	80043f4 <__sflush_r+0x90>
 8004392:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004394:	89a3      	ldrh	r3, [r4, #12]
 8004396:	0759      	lsls	r1, r3, #29
 8004398:	d505      	bpl.n	80043a6 <__sflush_r+0x42>
 800439a:	6863      	ldr	r3, [r4, #4]
 800439c:	1ad2      	subs	r2, r2, r3
 800439e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80043a0:	b10b      	cbz	r3, 80043a6 <__sflush_r+0x42>
 80043a2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80043a4:	1ad2      	subs	r2, r2, r3
 80043a6:	2300      	movs	r3, #0
 80043a8:	4628      	mov	r0, r5
 80043aa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80043ac:	6a21      	ldr	r1, [r4, #32]
 80043ae:	47b0      	blx	r6
 80043b0:	1c43      	adds	r3, r0, #1
 80043b2:	89a3      	ldrh	r3, [r4, #12]
 80043b4:	d106      	bne.n	80043c4 <__sflush_r+0x60>
 80043b6:	6829      	ldr	r1, [r5, #0]
 80043b8:	291d      	cmp	r1, #29
 80043ba:	d82b      	bhi.n	8004414 <__sflush_r+0xb0>
 80043bc:	4a28      	ldr	r2, [pc, #160]	@ (8004460 <__sflush_r+0xfc>)
 80043be:	40ca      	lsrs	r2, r1
 80043c0:	07d6      	lsls	r6, r2, #31
 80043c2:	d527      	bpl.n	8004414 <__sflush_r+0xb0>
 80043c4:	2200      	movs	r2, #0
 80043c6:	6062      	str	r2, [r4, #4]
 80043c8:	6922      	ldr	r2, [r4, #16]
 80043ca:	04d9      	lsls	r1, r3, #19
 80043cc:	6022      	str	r2, [r4, #0]
 80043ce:	d504      	bpl.n	80043da <__sflush_r+0x76>
 80043d0:	1c42      	adds	r2, r0, #1
 80043d2:	d101      	bne.n	80043d8 <__sflush_r+0x74>
 80043d4:	682b      	ldr	r3, [r5, #0]
 80043d6:	b903      	cbnz	r3, 80043da <__sflush_r+0x76>
 80043d8:	6560      	str	r0, [r4, #84]	@ 0x54
 80043da:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80043dc:	602f      	str	r7, [r5, #0]
 80043de:	b1b9      	cbz	r1, 8004410 <__sflush_r+0xac>
 80043e0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80043e4:	4299      	cmp	r1, r3
 80043e6:	d002      	beq.n	80043ee <__sflush_r+0x8a>
 80043e8:	4628      	mov	r0, r5
 80043ea:	f7ff fa9d 	bl	8003928 <_free_r>
 80043ee:	2300      	movs	r3, #0
 80043f0:	6363      	str	r3, [r4, #52]	@ 0x34
 80043f2:	e00d      	b.n	8004410 <__sflush_r+0xac>
 80043f4:	2301      	movs	r3, #1
 80043f6:	4628      	mov	r0, r5
 80043f8:	47b0      	blx	r6
 80043fa:	4602      	mov	r2, r0
 80043fc:	1c50      	adds	r0, r2, #1
 80043fe:	d1c9      	bne.n	8004394 <__sflush_r+0x30>
 8004400:	682b      	ldr	r3, [r5, #0]
 8004402:	2b00      	cmp	r3, #0
 8004404:	d0c6      	beq.n	8004394 <__sflush_r+0x30>
 8004406:	2b1d      	cmp	r3, #29
 8004408:	d001      	beq.n	800440e <__sflush_r+0xaa>
 800440a:	2b16      	cmp	r3, #22
 800440c:	d11d      	bne.n	800444a <__sflush_r+0xe6>
 800440e:	602f      	str	r7, [r5, #0]
 8004410:	2000      	movs	r0, #0
 8004412:	e021      	b.n	8004458 <__sflush_r+0xf4>
 8004414:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004418:	b21b      	sxth	r3, r3
 800441a:	e01a      	b.n	8004452 <__sflush_r+0xee>
 800441c:	690f      	ldr	r7, [r1, #16]
 800441e:	2f00      	cmp	r7, #0
 8004420:	d0f6      	beq.n	8004410 <__sflush_r+0xac>
 8004422:	0793      	lsls	r3, r2, #30
 8004424:	bf18      	it	ne
 8004426:	2300      	movne	r3, #0
 8004428:	680e      	ldr	r6, [r1, #0]
 800442a:	bf08      	it	eq
 800442c:	694b      	ldreq	r3, [r1, #20]
 800442e:	1bf6      	subs	r6, r6, r7
 8004430:	600f      	str	r7, [r1, #0]
 8004432:	608b      	str	r3, [r1, #8]
 8004434:	2e00      	cmp	r6, #0
 8004436:	ddeb      	ble.n	8004410 <__sflush_r+0xac>
 8004438:	4633      	mov	r3, r6
 800443a:	463a      	mov	r2, r7
 800443c:	4628      	mov	r0, r5
 800443e:	6a21      	ldr	r1, [r4, #32]
 8004440:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8004444:	47e0      	blx	ip
 8004446:	2800      	cmp	r0, #0
 8004448:	dc07      	bgt.n	800445a <__sflush_r+0xf6>
 800444a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800444e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004452:	f04f 30ff 	mov.w	r0, #4294967295
 8004456:	81a3      	strh	r3, [r4, #12]
 8004458:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800445a:	4407      	add	r7, r0
 800445c:	1a36      	subs	r6, r6, r0
 800445e:	e7e9      	b.n	8004434 <__sflush_r+0xd0>
 8004460:	20400001 	.word	0x20400001

08004464 <_fflush_r>:
 8004464:	b538      	push	{r3, r4, r5, lr}
 8004466:	690b      	ldr	r3, [r1, #16]
 8004468:	4605      	mov	r5, r0
 800446a:	460c      	mov	r4, r1
 800446c:	b913      	cbnz	r3, 8004474 <_fflush_r+0x10>
 800446e:	2500      	movs	r5, #0
 8004470:	4628      	mov	r0, r5
 8004472:	bd38      	pop	{r3, r4, r5, pc}
 8004474:	b118      	cbz	r0, 800447e <_fflush_r+0x1a>
 8004476:	6a03      	ldr	r3, [r0, #32]
 8004478:	b90b      	cbnz	r3, 800447e <_fflush_r+0x1a>
 800447a:	f7ff f839 	bl	80034f0 <__sinit>
 800447e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004482:	2b00      	cmp	r3, #0
 8004484:	d0f3      	beq.n	800446e <_fflush_r+0xa>
 8004486:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004488:	07d0      	lsls	r0, r2, #31
 800448a:	d404      	bmi.n	8004496 <_fflush_r+0x32>
 800448c:	0599      	lsls	r1, r3, #22
 800448e:	d402      	bmi.n	8004496 <_fflush_r+0x32>
 8004490:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004492:	f7ff fa46 	bl	8003922 <__retarget_lock_acquire_recursive>
 8004496:	4628      	mov	r0, r5
 8004498:	4621      	mov	r1, r4
 800449a:	f7ff ff63 	bl	8004364 <__sflush_r>
 800449e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80044a0:	4605      	mov	r5, r0
 80044a2:	07da      	lsls	r2, r3, #31
 80044a4:	d4e4      	bmi.n	8004470 <_fflush_r+0xc>
 80044a6:	89a3      	ldrh	r3, [r4, #12]
 80044a8:	059b      	lsls	r3, r3, #22
 80044aa:	d4e1      	bmi.n	8004470 <_fflush_r+0xc>
 80044ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80044ae:	f7ff fa39 	bl	8003924 <__retarget_lock_release_recursive>
 80044b2:	e7dd      	b.n	8004470 <_fflush_r+0xc>

080044b4 <__swhatbuf_r>:
 80044b4:	b570      	push	{r4, r5, r6, lr}
 80044b6:	460c      	mov	r4, r1
 80044b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80044bc:	4615      	mov	r5, r2
 80044be:	2900      	cmp	r1, #0
 80044c0:	461e      	mov	r6, r3
 80044c2:	b096      	sub	sp, #88	@ 0x58
 80044c4:	da0c      	bge.n	80044e0 <__swhatbuf_r+0x2c>
 80044c6:	89a3      	ldrh	r3, [r4, #12]
 80044c8:	2100      	movs	r1, #0
 80044ca:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80044ce:	bf14      	ite	ne
 80044d0:	2340      	movne	r3, #64	@ 0x40
 80044d2:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80044d6:	2000      	movs	r0, #0
 80044d8:	6031      	str	r1, [r6, #0]
 80044da:	602b      	str	r3, [r5, #0]
 80044dc:	b016      	add	sp, #88	@ 0x58
 80044de:	bd70      	pop	{r4, r5, r6, pc}
 80044e0:	466a      	mov	r2, sp
 80044e2:	f000 f863 	bl	80045ac <_fstat_r>
 80044e6:	2800      	cmp	r0, #0
 80044e8:	dbed      	blt.n	80044c6 <__swhatbuf_r+0x12>
 80044ea:	9901      	ldr	r1, [sp, #4]
 80044ec:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80044f0:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80044f4:	4259      	negs	r1, r3
 80044f6:	4159      	adcs	r1, r3
 80044f8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80044fc:	e7eb      	b.n	80044d6 <__swhatbuf_r+0x22>

080044fe <__smakebuf_r>:
 80044fe:	898b      	ldrh	r3, [r1, #12]
 8004500:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004502:	079d      	lsls	r5, r3, #30
 8004504:	4606      	mov	r6, r0
 8004506:	460c      	mov	r4, r1
 8004508:	d507      	bpl.n	800451a <__smakebuf_r+0x1c>
 800450a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800450e:	6023      	str	r3, [r4, #0]
 8004510:	6123      	str	r3, [r4, #16]
 8004512:	2301      	movs	r3, #1
 8004514:	6163      	str	r3, [r4, #20]
 8004516:	b003      	add	sp, #12
 8004518:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800451a:	466a      	mov	r2, sp
 800451c:	ab01      	add	r3, sp, #4
 800451e:	f7ff ffc9 	bl	80044b4 <__swhatbuf_r>
 8004522:	9f00      	ldr	r7, [sp, #0]
 8004524:	4605      	mov	r5, r0
 8004526:	4639      	mov	r1, r7
 8004528:	4630      	mov	r0, r6
 800452a:	f7ff fa67 	bl	80039fc <_malloc_r>
 800452e:	b948      	cbnz	r0, 8004544 <__smakebuf_r+0x46>
 8004530:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004534:	059a      	lsls	r2, r3, #22
 8004536:	d4ee      	bmi.n	8004516 <__smakebuf_r+0x18>
 8004538:	f023 0303 	bic.w	r3, r3, #3
 800453c:	f043 0302 	orr.w	r3, r3, #2
 8004540:	81a3      	strh	r3, [r4, #12]
 8004542:	e7e2      	b.n	800450a <__smakebuf_r+0xc>
 8004544:	89a3      	ldrh	r3, [r4, #12]
 8004546:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800454a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800454e:	81a3      	strh	r3, [r4, #12]
 8004550:	9b01      	ldr	r3, [sp, #4]
 8004552:	6020      	str	r0, [r4, #0]
 8004554:	b15b      	cbz	r3, 800456e <__smakebuf_r+0x70>
 8004556:	4630      	mov	r0, r6
 8004558:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800455c:	f000 f838 	bl	80045d0 <_isatty_r>
 8004560:	b128      	cbz	r0, 800456e <__smakebuf_r+0x70>
 8004562:	89a3      	ldrh	r3, [r4, #12]
 8004564:	f023 0303 	bic.w	r3, r3, #3
 8004568:	f043 0301 	orr.w	r3, r3, #1
 800456c:	81a3      	strh	r3, [r4, #12]
 800456e:	89a3      	ldrh	r3, [r4, #12]
 8004570:	431d      	orrs	r5, r3
 8004572:	81a5      	strh	r5, [r4, #12]
 8004574:	e7cf      	b.n	8004516 <__smakebuf_r+0x18>

08004576 <memmove>:
 8004576:	4288      	cmp	r0, r1
 8004578:	b510      	push	{r4, lr}
 800457a:	eb01 0402 	add.w	r4, r1, r2
 800457e:	d902      	bls.n	8004586 <memmove+0x10>
 8004580:	4284      	cmp	r4, r0
 8004582:	4623      	mov	r3, r4
 8004584:	d807      	bhi.n	8004596 <memmove+0x20>
 8004586:	1e43      	subs	r3, r0, #1
 8004588:	42a1      	cmp	r1, r4
 800458a:	d008      	beq.n	800459e <memmove+0x28>
 800458c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004590:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004594:	e7f8      	b.n	8004588 <memmove+0x12>
 8004596:	4601      	mov	r1, r0
 8004598:	4402      	add	r2, r0
 800459a:	428a      	cmp	r2, r1
 800459c:	d100      	bne.n	80045a0 <memmove+0x2a>
 800459e:	bd10      	pop	{r4, pc}
 80045a0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80045a4:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80045a8:	e7f7      	b.n	800459a <memmove+0x24>
	...

080045ac <_fstat_r>:
 80045ac:	b538      	push	{r3, r4, r5, lr}
 80045ae:	2300      	movs	r3, #0
 80045b0:	4d06      	ldr	r5, [pc, #24]	@ (80045cc <_fstat_r+0x20>)
 80045b2:	4604      	mov	r4, r0
 80045b4:	4608      	mov	r0, r1
 80045b6:	4611      	mov	r1, r2
 80045b8:	602b      	str	r3, [r5, #0]
 80045ba:	f7fc fc59 	bl	8000e70 <_fstat>
 80045be:	1c43      	adds	r3, r0, #1
 80045c0:	d102      	bne.n	80045c8 <_fstat_r+0x1c>
 80045c2:	682b      	ldr	r3, [r5, #0]
 80045c4:	b103      	cbz	r3, 80045c8 <_fstat_r+0x1c>
 80045c6:	6023      	str	r3, [r4, #0]
 80045c8:	bd38      	pop	{r3, r4, r5, pc}
 80045ca:	bf00      	nop
 80045cc:	200003e8 	.word	0x200003e8

080045d0 <_isatty_r>:
 80045d0:	b538      	push	{r3, r4, r5, lr}
 80045d2:	2300      	movs	r3, #0
 80045d4:	4d05      	ldr	r5, [pc, #20]	@ (80045ec <_isatty_r+0x1c>)
 80045d6:	4604      	mov	r4, r0
 80045d8:	4608      	mov	r0, r1
 80045da:	602b      	str	r3, [r5, #0]
 80045dc:	f7fc fc57 	bl	8000e8e <_isatty>
 80045e0:	1c43      	adds	r3, r0, #1
 80045e2:	d102      	bne.n	80045ea <_isatty_r+0x1a>
 80045e4:	682b      	ldr	r3, [r5, #0]
 80045e6:	b103      	cbz	r3, 80045ea <_isatty_r+0x1a>
 80045e8:	6023      	str	r3, [r4, #0]
 80045ea:	bd38      	pop	{r3, r4, r5, pc}
 80045ec:	200003e8 	.word	0x200003e8

080045f0 <_sbrk_r>:
 80045f0:	b538      	push	{r3, r4, r5, lr}
 80045f2:	2300      	movs	r3, #0
 80045f4:	4d05      	ldr	r5, [pc, #20]	@ (800460c <_sbrk_r+0x1c>)
 80045f6:	4604      	mov	r4, r0
 80045f8:	4608      	mov	r0, r1
 80045fa:	602b      	str	r3, [r5, #0]
 80045fc:	f7fc fc5e 	bl	8000ebc <_sbrk>
 8004600:	1c43      	adds	r3, r0, #1
 8004602:	d102      	bne.n	800460a <_sbrk_r+0x1a>
 8004604:	682b      	ldr	r3, [r5, #0]
 8004606:	b103      	cbz	r3, 800460a <_sbrk_r+0x1a>
 8004608:	6023      	str	r3, [r4, #0]
 800460a:	bd38      	pop	{r3, r4, r5, pc}
 800460c:	200003e8 	.word	0x200003e8

08004610 <memchr>:
 8004610:	4603      	mov	r3, r0
 8004612:	b510      	push	{r4, lr}
 8004614:	b2c9      	uxtb	r1, r1
 8004616:	4402      	add	r2, r0
 8004618:	4293      	cmp	r3, r2
 800461a:	4618      	mov	r0, r3
 800461c:	d101      	bne.n	8004622 <memchr+0x12>
 800461e:	2000      	movs	r0, #0
 8004620:	e003      	b.n	800462a <memchr+0x1a>
 8004622:	7804      	ldrb	r4, [r0, #0]
 8004624:	3301      	adds	r3, #1
 8004626:	428c      	cmp	r4, r1
 8004628:	d1f6      	bne.n	8004618 <memchr+0x8>
 800462a:	bd10      	pop	{r4, pc}

0800462c <memcpy>:
 800462c:	440a      	add	r2, r1
 800462e:	4291      	cmp	r1, r2
 8004630:	f100 33ff 	add.w	r3, r0, #4294967295
 8004634:	d100      	bne.n	8004638 <memcpy+0xc>
 8004636:	4770      	bx	lr
 8004638:	b510      	push	{r4, lr}
 800463a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800463e:	4291      	cmp	r1, r2
 8004640:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004644:	d1f9      	bne.n	800463a <memcpy+0xe>
 8004646:	bd10      	pop	{r4, pc}

08004648 <_realloc_r>:
 8004648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800464c:	4607      	mov	r7, r0
 800464e:	4614      	mov	r4, r2
 8004650:	460d      	mov	r5, r1
 8004652:	b921      	cbnz	r1, 800465e <_realloc_r+0x16>
 8004654:	4611      	mov	r1, r2
 8004656:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800465a:	f7ff b9cf 	b.w	80039fc <_malloc_r>
 800465e:	b92a      	cbnz	r2, 800466c <_realloc_r+0x24>
 8004660:	f7ff f962 	bl	8003928 <_free_r>
 8004664:	4625      	mov	r5, r4
 8004666:	4628      	mov	r0, r5
 8004668:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800466c:	f000 f81a 	bl	80046a4 <_malloc_usable_size_r>
 8004670:	4284      	cmp	r4, r0
 8004672:	4606      	mov	r6, r0
 8004674:	d802      	bhi.n	800467c <_realloc_r+0x34>
 8004676:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800467a:	d8f4      	bhi.n	8004666 <_realloc_r+0x1e>
 800467c:	4621      	mov	r1, r4
 800467e:	4638      	mov	r0, r7
 8004680:	f7ff f9bc 	bl	80039fc <_malloc_r>
 8004684:	4680      	mov	r8, r0
 8004686:	b908      	cbnz	r0, 800468c <_realloc_r+0x44>
 8004688:	4645      	mov	r5, r8
 800468a:	e7ec      	b.n	8004666 <_realloc_r+0x1e>
 800468c:	42b4      	cmp	r4, r6
 800468e:	4622      	mov	r2, r4
 8004690:	4629      	mov	r1, r5
 8004692:	bf28      	it	cs
 8004694:	4632      	movcs	r2, r6
 8004696:	f7ff ffc9 	bl	800462c <memcpy>
 800469a:	4629      	mov	r1, r5
 800469c:	4638      	mov	r0, r7
 800469e:	f7ff f943 	bl	8003928 <_free_r>
 80046a2:	e7f1      	b.n	8004688 <_realloc_r+0x40>

080046a4 <_malloc_usable_size_r>:
 80046a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80046a8:	1f18      	subs	r0, r3, #4
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	bfbc      	itt	lt
 80046ae:	580b      	ldrlt	r3, [r1, r0]
 80046b0:	18c0      	addlt	r0, r0, r3
 80046b2:	4770      	bx	lr

080046b4 <_init>:
 80046b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046b6:	bf00      	nop
 80046b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046ba:	bc08      	pop	{r3}
 80046bc:	469e      	mov	lr, r3
 80046be:	4770      	bx	lr

080046c0 <_fini>:
 80046c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046c2:	bf00      	nop
 80046c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046c6:	bc08      	pop	{r3}
 80046c8:	469e      	mov	lr, r3
 80046ca:	4770      	bx	lr
